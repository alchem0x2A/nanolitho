(undo-tree-save-format-version . 1)
"989911eb9a3a384c8e7ba5d6a9f7dc2f3240e4c7"
[nil nil nil nil (25735 21869 909232 0) 0 nil]
([nil nil ((1 . 3) (t . -1)) nil (25735 21869 909231 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -2) (undo-tree-id2073 . -1) 3) nil (25735 21869 909230 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1) (undo-tree-id2072 . -1) 2) nil (25735 21869 909229 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 139 . 140) (nil fontified nil 1 . 140) (1 . 140)) nil (25735 21869 909228 0) 0 nil])
([nil nil ((140 . 142)) nil (25735 21869 909227 0) 0 nil])
([nil nil ((142 . 146)) nil (25735 21869 909227 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-keyword-face fontified t)) . -144) (undo-tree-id2070 . -1) (#(" " 0 1 (fontified t)) . -145) (undo-tree-id2071 . -1) 146) nil (25735 21869 909226 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -142) (undo-tree-id2068 . -1) (#("e" 0 1 (fontified t)) . -143) (undo-tree-id2069 . -1) 144) nil (25735 21869 909225 0) 0 nil])
([nil nil ((142 . 145)) nil (25735 21869 909223 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -142) (undo-tree-id2065 . -1) (#("e" 0 1 (fontified t)) . -143) (undo-tree-id2066 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -144) (undo-tree-id2067 . -1) 145) nil (25735 21869 909223 0) 0 nil])
([nil nil ((142 . 145)) nil (25735 21869 909221 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -142) (undo-tree-id2062 . -1) (#("e" 0 1 (fontified t)) . -143) (undo-tree-id2063 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -144) (undo-tree-id2064 . -1) 145) nil (25735 21869 909220 0) 0 nil])
([nil nil ((142 . 145)) nil (25735 21869 909218 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -142) (undo-tree-id2059 . -1) (#("e" 0 1 (fontified t)) . -143) (undo-tree-id2060 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -144) (undo-tree-id2061 . -1) 145) nil (25735 21869 909217 0) 0 nil])
([nil nil ((152 . 154) (#(")" 0 1 (face font-lock-function-name-face fontified nil)) . -152) (142 . 153)) nil (25735 21869 909215 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -152) (undo-tree-id2055 . -1) (undo-tree-id2056 . 1) (undo-tree-id2057 . -1) (#("d" 0 1 (fontified t)) . -153) (undo-tree-id2058 . -1) 154) nil (25735 21869 909214 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -158) (158 . 159) (#(")" 0 1 (fontified nil)) . -158) (158 . 159) (152 . 159)) nil (25735 21869 909212 0) 0 nil])
([nil nil ((158 . 166)) nil (25735 21869 909211 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -158) (undo-tree-id2047 . -1) (#("e" 0 1 (fontified t)) . -159) (undo-tree-id2048 . -1) (#("g" 0 1 (fontified t)) . -160) (undo-tree-id2049 . -1) (#("r" 0 1 (fontified t)) . -161) (undo-tree-id2050 . -1) (#("e" 0 1 (fontified t)) . -162) (undo-tree-id2051 . -1) (#("e" 0 1 (fontified t)) . -163) (undo-tree-id2052 . -1) (#("," 0 1 (fontified t)) . -164) (undo-tree-id2053 . -1) (#(" " 0 1 (fontified t)) . -165) (undo-tree-id2054 . -1) 166) nil (25735 21869 909210 0) 0 nil])
([nil nil ((158 . 173)) nil (25735 21869 909206 0) 0 nil])
([nil nil ((174 . 175)) nil (25735 21869 909205 0) 0 nil])
([nil nil ((175 . 180)) nil (25735 21869 909205 0) 0 nil])
([nil nil ((183 . 185) (182 . 184) (#("\"" 0 1 (syntax-table (15) face font-lock-doc-face fontified nil)) . -182) (182 . 183) (#("\"" 0 1 (fontified nil)) . -181) (181 . 182) (#("\"" 0 1 (face font-lock-doc-face fontified nil)) . -181) (181 . 182) (180 . 182) (#("\"" 0 1 (fontified nil)) . -180) (180 . 181)) nil (25735 21869 909204 0) 0 nil])
([nil nil ((183 . 188)) nil (25735 21869 909202 0) 0 nil])
([nil nil ((183 . 202)) nil (25735 21869 909202 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -210) (210 . 211) (#(")" 0 1 (face font-lock-doc-face fontified nil)) . -210) (210 . 211) (202 . 211)) nil (25735 21869 909201 0) 0 nil])
([nil nil ((210 . 213)) nil (25735 21869 909200 0) 0 nil])
([nil nil ((222 . 227)) nil (25735 21869 909200 0) 0 nil])
([nil nil ((227 . 230)) nil (25735 21869 909199 0) 0 nil])
([nil nil ((#("    np." 0 7 (fontified t)) . -223) (undo-tree-id2045 . -7) (undo-tree-id2046 . -7) 230) nil (25735 21869 909199 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -222) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) 223) nil (25735 21869 909197 0) 0 nil])
([nil nil ((222 . 227)) nil (25735 21869 909196 0) 0 nil])
([nil nil ((227 . 233)) nil (25735 21869 909195 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -223) 233) nil (25735 21869 909195 0) 0 nil])
([nil nil ((223 . 227) 229) nil (25735 21869 909194 0) 0 nil])
([nil nil ((233 . 235)) nil (25735 21869 909194 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -227) (undo-tree-id2033 . -1) (#("p" 0 1 (fontified t)) . -228) (undo-tree-id2034 . -1) (#("." 0 1 (fontified t)) . -229) (undo-tree-id2035 . -1) (#("c" 0 1 (fontified t)) . -230) (undo-tree-id2036 . -1) (#("o" 0 1 (fontified t)) . -231) (undo-tree-id2037 . -1) (#("s" 0 1 (fontified t)) . -232) (undo-tree-id2038 . -1) (#("(" 0 1 (fontified t)) . -233) (undo-tree-id2039 . -1) (#(")" 0 1 (fontified t)) . -234) (undo-tree-id2040 . -1) (undo-tree-id2041 . 1) (undo-tree-id2042 . -1) 235) nil (25735 21869 909192 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -238) (238 . 239) (#(")" 0 1 (fontified nil)) . -238) (238 . 239) (227 . 239)) nil (25735 21869 909187 0) 0 nil])
([nil nil ((238 . 244)) nil (25735 21869 909186 0) 0 nil])
([nil nil ((241 . 248) (#("deg" 0 3 (fontified t)) . -241) (undo-tree-id2032 . -3) 244) nil (25735 21869 909185 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -249) (249 . 250) (#(")" 0 1 (fontified nil)) . -249) (249 . 250) (248 . 250)) nil (25735 21869 909184 0) 0 nil])
([nil nil ((249 . 250)) nil (25735 21869 909183 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -249) (undo-tree-id2031 . -1) 250) nil (25735 21869 909183 0) 0 nil])
([nil nil ((249 . 250)) nil (25735 21869 909182 0) 0 nil])
([nil nil ((250 . 255)) nil (25735 21869 909181 0) 0 nil])
([nil nil ((257 . 262)) nil (25735 21869 909181 0) 0 nil])
([nil nil ((262 . 273)) nil (25735 21869 909180 0) 0 nil])
([nil nil ((270 . 275) (#("pow" 0 3 (face font-lock-builtin-face fontified t)) . -270) (undo-tree-id2030 . -3) 273) nil (25735 21869 909180 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -276) (276 . 277) (#(")" 0 1 (fontified nil)) . -276) (276 . 277) (275 . 277)) nil (25735 21869 909178 0) 0 nil])
([nil nil ((276 . 279)) nil (25735 21869 909177 0) 0 nil])
([nil nil ((279 . 284)) nil (25735 21869 909177 0) 0 nil])
([nil nil ((285 . 290)) nil (25735 21869 909177 0) 0 nil])
([nil nil ((290 . 299)) nil (25735 21869 909176 0) 0 nil])
([nil nil ((299 . 301)) nil (25735 21869 909176 0) 0 nil])
([nil nil ((301 . 308) (t 25735 21779 32252 669000)) nil (25735 21869 909175 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -301) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("e" 0 1 (fontified t)) . -302) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -303) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (#(" " 0 1 (fontified t)) . -304) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -305) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -306) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -307) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) 308) nil (25735 21869 909135 0) 0 nil])
([nil nil ((301 . 302) (t 25735 21869 911079 512000)) nil (25735 21969 740776 0) 0 nil])
([nil nil ((302 . 315)) nil (25735 21969 740775 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face fontified t)) . -312) (undo-tree-id2096 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -313) (undo-tree-id2097 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -314) (undo-tree-id2098 . -1) 315) nil (25735 21969 740774 0) 0 nil])
([nil nil ((#("def transl" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 10 (face font-lock-function-name-face fontified t)) . -302) (undo-tree-id2095 . -10) 312) nil (25735 21969 740772 0) 0 nil])
([nil nil ((302 . 323)) nil (25735 21969 740770 0) 0 nil])
([nil nil ((323 . 325)) nil (25735 21969 740770 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-function-name-face fontified t)) . -319) (undo-tree-id2089 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -320) (undo-tree-id2090 . -1) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . -321) (undo-tree-id2091 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -322) (undo-tree-id2092 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -323) (undo-tree-id2093 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -324) (undo-tree-id2094 . -1) 325) nil (25735 21969 740769 0) 0 nil])
([nil nil ((319 . 323)) nil (25735 21969 740764 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face fontified t)) . -319) (undo-tree-id2085 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -320) (undo-tree-id2086 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -321) (undo-tree-id2087 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -322) (undo-tree-id2088 . -1) 323) nil (25735 21969 740763 0) 0 nil])
([nil nil ((319 . 325)) nil (25735 21969 740760 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -327) (327 . 328) (#(")" 0 1 (fontified nil)) . -327) (327 . 328) (325 . 328)) nil (25735 21969 740759 0) 0 nil])
([nil nil ((327 . 330)) nil (25735 21969 740758 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -327) (undo-tree-id2082 . -1) (#("e" 0 1 (fontified t)) . -328) (undo-tree-id2083 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -329) (undo-tree-id2084 . -1) 330) nil (25735 21969 740757 0) 0 nil])
([nil nil ((327 . 338)) nil (25735 21969 740754 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -337) (undo-tree-id2081 . -1) 338) nil (25735 21969 740753 0) 0 nil])
([nil nil ((337 . 342)) nil (25735 21969 740752 0) 0 nil])
([nil nil ((343 . 344)) nil (25735 21969 740751 0) 0 nil])
([nil nil ((344 . 349)) nil (25735 21969 740750 0) 0 nil])
([nil nil ((140 . 142)) nil (25735 21969 740750 0) 0 nil])
([nil nil ((142 . 148)) nil (25735 21969 740749 0) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-comment-face fontified t)) . -144) (undo-tree-id2077 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -145) (undo-tree-id2078 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -146) (undo-tree-id2079 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -147) (undo-tree-id2080 . -1) 148) nil (25735 21969 740748 0) 0 nil])
([nil nil ((144 . 165)) nil (25735 21969 740744 0) 0 nil])
([nil nil ((165 . 168)) nil (25735 21969 740743 0) 0 nil])
([nil nil ((380 . 382) (379 . 381) (#("\"" 0 1 (syntax-table (15) face font-lock-doc-face fontified nil)) . -379) (379 . 380) (#("\"" 0 1 (fontified nil)) . -378) (378 . 379) (#("\"" 0 1 (face font-lock-doc-face fontified nil)) . -378) (378 . 379) (377 . 379) (#("\"" 0 1 (fontified nil)) . -377) (377 . 378)) nil (25735 21969 740742 0) 0 nil])
([nil nil ((380 . 385)) nil (25735 21969 740739 0) 0 nil])
([nil nil ((168 . 169)) nil (25735 21969 740739 0) 0 nil])
([nil nil ((169 . 170)) nil (25735 21969 740738 0) 0 nil])
([nil nil ((170 . 177)) nil (25735 21969 740737 0) 0 nil])
([nil nil ((177 . 178)) nil (25735 21969 740737 0) 0 nil])
([nil nil ((178 . 186)) nil (25735 21969 740736 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -183) (undo-tree-id2074 . -1) (#("." 0 1 (fontified t)) . -184) (undo-tree-id2075 . -1) (#("0" 0 1 (fontified t)) . -185) (undo-tree-id2076 . -1) 186) nil (25735 21969 740735 0) 0 nil])
([nil nil ((183 . 188)) nil (25735 21969 740728 0) 0 nil])
([nil nil ((168 . 169)) nil (25735 21969 740727 0) 0 nil])
([nil nil ((169 . 176)) nil (25735 21969 740726 0) 0 nil])
([nil nil ((176 . 178)) nil (25735 21969 740725 0) 0 nil])
([nil nil ((418 . 419) 178) nil (25735 21969 740720 0) 0 nil])
([nil nil ((410 . 431) (t 25735 21969 743218 422000)) nil (25735 22335 479961 0) 0 nil])
([nil nil ((431 . 442)) nil (25735 22335 479960 0) 0 nil])
([nil nil ((444 . 448) (#("    " 0 4 (face font-lock-doc-face fontified nil)) . 443) (undo-tree-id2420 . -4) (442 . 448)) nil (25735 22335 479959 0) 0 nil])
([nil nil ((448 . 452)) nil (25735 22335 479957 0) 0 nil])
([nil nil ((#("x" 0 1 (face font-lock-doc-face fontified t)) . -448) (undo-tree-id2416 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -449) (undo-tree-id2417 . -1) (#("=" 0 1 (face font-lock-doc-face fontified t)) . -450) (undo-tree-id2418 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -451) (undo-tree-id2419 . -1) 452) nil (25735 22335 479956 0) 0 nil])
([nil nil ((448 . 460)) nil (25735 22335 479951 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . -459) (undo-tree-id2415 . -1) 460) nil (25735 22335 479950 0) 0 nil])
([nil nil ((460 . 465) (459 . 461)) nil (25735 22335 479949 0) 0 nil])
([nil nil ((466 . 471)) nil (25735 22335 479948 0) 0 nil])
([nil nil ((471 . 475)) nil (25735 22335 479947 0) 0 nil])
([nil nil ((471 . 481)) nil (25735 22335 479946 0) 0 nil])
([nil nil ((493 . 498) (485 . 494)) nil (25735 22335 479945 0) 0 nil])
([nil nil ((499 . 504)) nil (25735 22335 479944 0) 0 nil])
([nil nil ((504 . 508)) nil (25735 22335 479943 0) 0 nil])
([nil nil ((508 . 509)) nil (25735 22335 479943 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-function-name-face fontified t)) . -383) (undo-tree-id2414 . -1) 384) nil (25735 22335 479942 0) 0 nil])
([nil nil ((383 . 384)) nil (25735 22335 479940 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-doc-face fontified t)) . -441) (undo-tree-id2413 . -1) 442) nil (25735 22335 479939 0) 0 nil])
([nil nil ((441 . 442)) nil (25735 22335 479938 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -399) (undo-tree-id2412 . -1) 400) nil (25735 22335 479936 0) 0 nil])
([nil nil ((399 . 400)) nil (25735 22335 479935 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-doc-face fontified t)) . -441) (undo-tree-id2411 . -1) 442) nil (25735 22335 479934 0) 0 nil])
([nil nil ((441 . 442)) nil (25735 22335 479932 0) 0 nil])
([nil nil ((#("    d / L = tan(theta)" 0 15 (face font-lock-doc-face fontified t) 15 22 (face font-lock-doc-face fontified t)) . -444) (undo-tree-id2406 . -22) (undo-tree-id2407 . 1) (undo-tree-id2408 . -22) (undo-tree-id2409 . 7) (undo-tree-id2410 . -16) 466) nil (25735 22335 479931 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-doc-face fontified t)) . -443) (undo-tree-id2405 . -1) 444) nil (25735 22335 479926 0) 0 nil])
([nil nil ((443 . 448)) nil (25735 22335 479925 0) 0 nil])
([nil nil ((491 . 496)) nil (25735 22335 479924 0) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-doc-face fontified t)) . -463) (undo-tree-id2401 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -464) (undo-tree-id2402 . -1) (#("=" 0 1 (face font-lock-doc-face fontified t)) . -465) (undo-tree-id2403 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -466) (undo-tree-id2404 . -1) 467) nil (25735 22335 479922 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-doc-face fontified t)) . -463) (undo-tree-id2399 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -464) (undo-tree-id2400 . -1) 465) nil (25735 22335 479918 0) 0 nil])
([nil nil ((463 . 465)) nil (25735 22335 479915 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-doc-face fontified t)) . -467) (undo-tree-id2396 . -1) (#("o" 0 1 (face font-lock-doc-face fontified t)) . -468) (undo-tree-id2397 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -469) (undo-tree-id2398 . -1) 470) nil (25735 22335 479914 0) 0 nil])
([nil nil ((467 . 470)) nil (25735 22335 479911 0) 0 nil])
([nil nil ((500 . 504) (492 . 501)) nil (25735 22335 479910 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-doc-face fontified t)) . -500) (undo-tree-id2392 . -1) (#("h" 0 1 (face font-lock-doc-face fontified t)) . -501) (undo-tree-id2393 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -502) (undo-tree-id2394 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -503) (undo-tree-id2395 . -1) 504) nil (25735 22335 479908 0) 0 nil])
([nil nil ((500 . 505)) nil (25735 22335 479904 0) 0 nil])
([nil nil ((514 . 519)) nil (25735 22335 479903 0) 0 nil])
([nil nil ((519 . 524)) nil (25735 22335 479902 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -536) (536 . 537) (#(")" 0 1 (fontified nil)) . -536) (536 . 537) (524 . 537)) nil (25735 22335 479901 0) 0 nil])
([nil nil ((536 . 541)) nil (25735 22335 479900 0) 0 nil])
([nil nil ((539 . 546) (#("de" 0 2 (fontified t)) . -539) (undo-tree-id2391 . -2) 541) nil (25735 22335 479898 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -547) (547 . 548) (#(")" 0 1 (fontified nil)) . -547) (547 . 548) (546 . 548)) nil (25735 22335 479896 0) 0 nil])
([nil nil ((547 . 548)) nil (25735 22335 479895 0) 0 nil])
([nil nil ((550 . 555)) nil (25735 22335 479894 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 589 . 590) (nil fontified nil 589 . 590) (nil fontified nil 588 . 589) (nil fontified nil 586 . 588) (nil fontified nil 579 . 586) (nil fontified nil 575 . 579) (nil fontified nil 566 . 575) (nil fontified nil 559 . 566) (nil fontified nil 555 . 559) (555 . 590)) nil (25735 22335 479892 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -555) 590) nil (25735 22335 479890 0) 0 nil])
([nil nil ((#("x" 0 1 (face font-lock-variable-name-face fontified t)) . -561) (undo-tree-id2390 . -1) 562) nil (25735 22335 479888 0) 0 nil])
([nil nil ((561 . 562)) nil (25735 22335 479887 0) 0 nil])
([nil nil ((550 . 554)) nil (25735 22335 479886 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -572) (undo-tree-id2387 . -1) (#("i" 0 1 (fontified t)) . -573) (undo-tree-id2388 . -1) (#("n" 0 1 (fontified t)) . -574) (undo-tree-id2389 . -1) 575) nil (25735 22335 479885 0) 0 nil])
([nil nil ((572 . 575)) nil (25735 22335 479881 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -547) (undo-tree-id2386 . -1) 548) nil (25735 22335 479880 0) 0 nil])
([nil nil ((547 . 548)) nil (25735 22335 479878 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -547) (undo-tree-id2385 . -1) 548) nil (25735 22335 479877 0) 0 nil])
([nil nil ((547 . 552)) nil (25735 22335 479876 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -591) (undo-tree-id2384 . -1) 592) nil (25735 22335 479875 0) 0 nil])
([nil nil ((591 . 596)) nil (25735 22335 479873 0) 0 nil])
([nil nil ((598 . 602)) nil (25735 22335 479872 0) 0 nil])
([nil nil ((602 . 607)) nil (25735 22335 479871 0) 0 nil])
([nil nil ((607 . 626)) nil (25735 22335 479871 0) 0 nil])
([nil nil ((619 . 628) (#("transla" 0 7 (fontified t)) . -619) (undo-tree-id2383 . -7) 626) nil (25735 22335 479870 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -629) (629 . 630) (#(")" 0 1 (fontified nil)) . -629) (629 . 630) (628 . 630)) nil (25735 22335 479867 0) 0 nil])
([nil nil ((629 . 639)) nil (25735 22335 479866 0) 0 nil])
([nil nil ((639 . 646)) nil (25735 22335 479865 0) 0 nil])
([nil nil ((641 . 648) (#("shift" 0 5 (fontified t)) . -641) (undo-tree-id2382 . -5) 646) nil (25735 22335 479864 0) 0 nil])
([nil nil ((648 . 661)) nil (25735 22335 479862 0) 0 nil])
([nil nil ((656 . 663) (#("shift" 0 5 (fontified t)) . -656) (undo-tree-id2381 . -5) 661) nil (25735 22335 479861 0) 0 nil])
([nil nil ((664 . 669)) nil (25735 22335 479858 0) 0 nil])
([nil nil ((669 . 684)) nil (25735 22335 479856 0) 0 nil])
([nil nil ((676 . 685) (#("new_shap" 0 8 (fontified t)) . -676) (undo-tree-id2099 . -8) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -2) (undo-tree-id2123 . -2) (undo-tree-id2124 . -2) (undo-tree-id2125 . -2) (undo-tree-id2126 . -2) (undo-tree-id2127 . -2) (undo-tree-id2128 . -2) (undo-tree-id2129 . -2) (undo-tree-id2130 . -2) (undo-tree-id2131 . -2) (undo-tree-id2132 . -2) (undo-tree-id2133 . -2) (undo-tree-id2134 . -2) (undo-tree-id2135 . -2) (undo-tree-id2136 . -2) (undo-tree-id2137 . -2) (undo-tree-id2138 . -2) (undo-tree-id2139 . -2) (undo-tree-id2140 . -2) (undo-tree-id2141 . -2) (undo-tree-id2142 . -2) (undo-tree-id2143 . -2) (undo-tree-id2144 . -3) (undo-tree-id2145 . -3) (undo-tree-id2146 . -3) (undo-tree-id2147 . -3) (undo-tree-id2148 . -3) (undo-tree-id2149 . -3) (undo-tree-id2150 . -3) (undo-tree-id2151 . -3) (undo-tree-id2152 . -3) (undo-tree-id2153 . -3) (undo-tree-id2154 . -3) (undo-tree-id2155 . -3) (undo-tree-id2156 . -3) (undo-tree-id2157 . -3) (undo-tree-id2158 . -3) (undo-tree-id2159 . -3) (undo-tree-id2160 . -3) (undo-tree-id2161 . -3) (undo-tree-id2162 . -3) (undo-tree-id2163 . -3) (undo-tree-id2164 . -3) (undo-tree-id2165 . -3) (undo-tree-id2166 . -3) (undo-tree-id2167 . -3) (undo-tree-id2168 . -3) (undo-tree-id2169 . -3) (undo-tree-id2170 . -3) (undo-tree-id2171 . -3) (undo-tree-id2172 . -3) (undo-tree-id2173 . -3) (undo-tree-id2174 . -3) (undo-tree-id2175 . -3) (undo-tree-id2176 . -3) (undo-tree-id2177 . -3) (undo-tree-id2178 . -3) (undo-tree-id2179 . -3) (undo-tree-id2180 . -3) (undo-tree-id2181 . -3) (undo-tree-id2182 . -3) (undo-tree-id2183 . -3) (undo-tree-id2184 . -3) (undo-tree-id2185 . -3) (undo-tree-id2186 . -3) (undo-tree-id2187 . -3) (undo-tree-id2188 . -3) (undo-tree-id2189 . -3) (undo-tree-id2190 . -3) (undo-tree-id2191 . -3) (undo-tree-id2192 . -3) (undo-tree-id2193 . -3) (undo-tree-id2194 . -3) (undo-tree-id2195 . -3) (undo-tree-id2196 . -3) (undo-tree-id2197 . -3) (undo-tree-id2198 . -3) (undo-tree-id2199 . -3) (undo-tree-id2200 . -3) (undo-tree-id2201 . -3) (undo-tree-id2202 . -3) (undo-tree-id2203 . -3) (undo-tree-id2204 . -3) (undo-tree-id2205 . -3) (undo-tree-id2206 . -3) (undo-tree-id2207 . -3) (undo-tree-id2208 . -3) (undo-tree-id2209 . -3) (undo-tree-id2210 . -3) (undo-tree-id2211 . -3) (undo-tree-id2212 . -3) (undo-tree-id2213 . -3) (undo-tree-id2214 . -3) (undo-tree-id2215 . -3) (undo-tree-id2216 . -3) (undo-tree-id2217 . -3) (undo-tree-id2218 . -3) (undo-tree-id2219 . -3) (undo-tree-id2220 . -3) (undo-tree-id2221 . -3) (undo-tree-id2222 . -3) (undo-tree-id2223 . -3) (undo-tree-id2224 . -3) (undo-tree-id2225 . -3) (undo-tree-id2226 . -3) (undo-tree-id2227 . -3) (undo-tree-id2228 . -3) (undo-tree-id2229 . -4) (undo-tree-id2230 . -4) (undo-tree-id2231 . -4) (undo-tree-id2232 . -4) (undo-tree-id2233 . -4) (undo-tree-id2234 . -4) (undo-tree-id2235 . -4) (undo-tree-id2236 . -4) (undo-tree-id2237 . -4) (undo-tree-id2238 . -4) (undo-tree-id2239 . -4) (undo-tree-id2240 . -4) (undo-tree-id2241 . -4) (undo-tree-id2242 . -4) (undo-tree-id2243 . -4) (undo-tree-id2244 . -4) (undo-tree-id2245 . -4) (undo-tree-id2246 . -4) (undo-tree-id2247 . -4) (undo-tree-id2248 . -4) (undo-tree-id2249 . -4) (undo-tree-id2250 . -4) (undo-tree-id2251 . -4) (undo-tree-id2252 . -4) (undo-tree-id2253 . -4) (undo-tree-id2254 . -4) (undo-tree-id2255 . -4) (undo-tree-id2256 . -4) (undo-tree-id2257 . -4) (undo-tree-id2258 . -4) (undo-tree-id2259 . -4) (undo-tree-id2260 . -4) (undo-tree-id2261 . -4) (undo-tree-id2262 . -4) (undo-tree-id2263 . -4) (undo-tree-id2264 . -4) (undo-tree-id2265 . -4) (undo-tree-id2266 . -4) (undo-tree-id2267 . -4) (undo-tree-id2268 . -4) (undo-tree-id2269 . -4) (undo-tree-id2270 . -4) (undo-tree-id2271 . -4) (undo-tree-id2272 . -5) (undo-tree-id2273 . -5) (undo-tree-id2274 . -5) (undo-tree-id2275 . -5) (undo-tree-id2276 . -5) (undo-tree-id2277 . -5) (undo-tree-id2278 . -5) (undo-tree-id2279 . -5) (undo-tree-id2280 . -5) (undo-tree-id2281 . -5) (undo-tree-id2282 . -5) (undo-tree-id2283 . -5) (undo-tree-id2284 . -5) (undo-tree-id2285 . -5) (undo-tree-id2286 . -5) (undo-tree-id2287 . -5) (undo-tree-id2288 . -5) (undo-tree-id2289 . -5) (undo-tree-id2290 . -5) (undo-tree-id2291 . -5) (undo-tree-id2292 . -5) (undo-tree-id2293 . -5) (undo-tree-id2294 . -6) (undo-tree-id2295 . -6) (undo-tree-id2296 . -6) (undo-tree-id2297 . -6) (undo-tree-id2298 . -6) (undo-tree-id2299 . -6) (undo-tree-id2300 . -6) (undo-tree-id2301 . -6) (undo-tree-id2302 . -6) (undo-tree-id2303 . -6) (undo-tree-id2304 . -6) (undo-tree-id2305 . -6) (undo-tree-id2306 . -6) (undo-tree-id2307 . -6) (undo-tree-id2308 . -6) (undo-tree-id2309 . -6) (undo-tree-id2310 . -6) (undo-tree-id2311 . -6) (undo-tree-id2312 . -6) (undo-tree-id2313 . -6) (undo-tree-id2314 . -6) (undo-tree-id2315 . -6) (undo-tree-id2316 . -7) (undo-tree-id2317 . -7) (undo-tree-id2318 . -7) (undo-tree-id2319 . -7) (undo-tree-id2320 . -7) (undo-tree-id2321 . -7) (undo-tree-id2322 . -7) (undo-tree-id2323 . -7) (undo-tree-id2324 . -7) (undo-tree-id2325 . -7) (undo-tree-id2326 . -7) (undo-tree-id2327 . -7) (undo-tree-id2328 . -7) (undo-tree-id2329 . -7) (undo-tree-id2330 . -7) (undo-tree-id2331 . -7) (undo-tree-id2332 . -7) (undo-tree-id2333 . -7) (undo-tree-id2334 . -7) (undo-tree-id2335 . -7) (undo-tree-id2336 . -7) (undo-tree-id2337 . -7) (undo-tree-id2338 . -8) (undo-tree-id2339 . -8) (undo-tree-id2340 . -8) (undo-tree-id2341 . -8) (undo-tree-id2342 . -8) (undo-tree-id2343 . -8) (undo-tree-id2344 . -8) (undo-tree-id2345 . -8) (undo-tree-id2346 . -8) (undo-tree-id2347 . -8) (undo-tree-id2348 . -8) (undo-tree-id2349 . -8) (undo-tree-id2350 . -8) (undo-tree-id2351 . -8) (undo-tree-id2352 . -8) (undo-tree-id2353 . -8) (undo-tree-id2354 . -8) (undo-tree-id2355 . -8) (undo-tree-id2356 . -8) (undo-tree-id2357 . -8) (undo-tree-id2358 . -8) (undo-tree-id2359 . -8) (undo-tree-id2360 . -8) (undo-tree-id2361 . -8) (undo-tree-id2362 . -8) (undo-tree-id2363 . -8) (undo-tree-id2364 . -8) (undo-tree-id2365 . -8) (undo-tree-id2366 . -8) (undo-tree-id2367 . -8) (undo-tree-id2368 . -8) (undo-tree-id2369 . -8) (undo-tree-id2370 . -8) (undo-tree-id2371 . -8) (undo-tree-id2372 . -8) (undo-tree-id2373 . -8) (undo-tree-id2374 . -8) (undo-tree-id2375 . -8) (undo-tree-id2376 . -8) (undo-tree-id2377 . -8) (undo-tree-id2378 . -8) (undo-tree-id2379 . -8) (undo-tree-id2380 . -8) 684) nil (25735 22335 479842 0) 0 nil])
([nil nil ((93 . 101) (t 25735 22335 482321 697000)) nil (25735 22682 822252 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -94) (undo-tree-id2421 . -1) (#("C" 0 1 (fontified t)) . -95) (undo-tree-id2422 . -1) (#("i" 0 1 (fontified t)) . -96) (undo-tree-id2423 . -1) (#("r" 0 1 (fontified t)) . -97) (undo-tree-id2424 . -1) (#("c" 0 1 (fontified t)) . -98) (undo-tree-id2425 . -1) (#("l" 0 1 (fontified t)) . -99) (undo-tree-id2426 . -1) (#("e" 0 1 (fontified t)) . -100) (undo-tree-id2427 . -1) 101) nil (25735 22682 822251 0) 0 nil])
([nil nil ((94 . 100)) nil (25735 22682 822222 0) 0 nil])
([nil nil ((205 . 207) (t 25735 22682 824751 203000)) nil (25735 22738 765479 0) 0 nil])
([nil nil ((207 . 211)) nil (25735 22738 765478 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -207) (undo-tree-id2762 . -1) (#("e" 0 1 (fontified t)) . -208) (undo-tree-id2763 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -209) (undo-tree-id2764 . -1) (#(" " 0 1 (fontified t)) . -210) (undo-tree-id2765 . -1) 211) nil (25735 22738 765477 0) 0 nil])
([nil nil ((207 . 212)) nil (25735 22738 765474 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -207) (undo-tree-id2757 . -1) (#("l" 0 1 (fontified t)) . -208) (undo-tree-id2758 . -1) (#("a" 0 1 (fontified t)) . -209) (undo-tree-id2759 . -1) (#("s" 0 1 (fontified t)) . -210) (undo-tree-id2760 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -211) (undo-tree-id2761 . -1) 212) nil (25735 22738 765473 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -223) (223 . 224) (#(")" 0 1 (fontified nil)) . -223) (223 . 224) (207 . 224)) nil (25735 22738 765469 0) 0 nil])
([nil nil ((223 . 225)) nil (25735 22738 765468 0) 0 nil])
([nil nil ((225 . 230)) nil (25735 22738 765467 0) 0 nil])
([nil nil ((231 . 232)) nil (25735 22738 765466 0) 0 nil])
([nil nil ((232 . 237)) nil (25735 22738 765466 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 259 . 260) (nil fontified nil 237 . 260) (237 . 260)) nil (25735 22738 765465 0) 0 nil])
([nil nil ((237 . 244)) nil (25735 22738 765464 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -250) (undo-tree-id2756 . -1) 251) nil (25735 22738 765464 0) 0 nil])
([nil nil ((250 . 251)) nil (25735 22738 765462 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -253) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) 254) nil (25735 22738 765460 0) 0 nil])
([nil nil ((253 . 254)) nil (25735 22738 765427 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -263) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (#("." 0 1 (fontified t)) . -264) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (#("5" 0 1 (fontified t)) . -265) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) 266) nil (25735 22738 765419 0) 0 nil])
([nil nil ((263 . 264)) nil (25735 22738 765284 0) 0 nil])
([nil nil ((753 . 755) (t 25735 22738 768463 99000)) nil (25735 23472 701805 0) 0 nil])
([nil nil ((755 . 758)) nil (25735 23472 701804 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -754) (undo-tree-id2860 . -1) (#("d" 0 1 (fontified t)) . -755) (undo-tree-id2861 . -1) (#("e" 0 1 (fontified t)) . -756) (undo-tree-id2862 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -757) (undo-tree-id2863 . -1) 758) nil (25735 23472 701803 0) 0 nil])
([nil nil ((754 . 755)) nil (25735 23472 701800 0) 0 nil])
([nil nil ((755 . 759)) nil (25735 23472 701800 0) 0 nil])
([nil nil ((759 . 762)) nil (25735 23472 701799 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-function-name-face fontified t)) . -759) (undo-tree-id2857 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -760) (undo-tree-id2858 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -761) (undo-tree-id2859 . -1) 762) nil (25735 23472 701798 0) 0 nil])
([nil nil ((759 . 762)) nil (25735 23472 701795 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-function-name-face fontified t)) . -759) (undo-tree-id2854 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -760) (undo-tree-id2855 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -761) (undo-tree-id2856 . -1) 762) nil (25735 23472 701794 0) 0 nil])
([nil nil ((759 . 766)) nil (25735 23472 701791 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -758) (undo-tree-id2846 . -1) (#("g" 0 1 (face font-lock-function-name-face fontified t)) . -759) (undo-tree-id2847 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -760) (undo-tree-id2848 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -761) (undo-tree-id2849 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -762) (undo-tree-id2850 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -763) (undo-tree-id2851 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -764) (undo-tree-id2852 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -765) (undo-tree-id2853 . -1) 766) nil (25735 23472 701790 0) 0 nil])
([nil nil ((758 . 759)) nil (25735 23472 701784 0) 0 nil])
([nil nil ((#("def " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -755) (undo-tree-id2845 . -4) 759) nil (25735 23472 701784 0) 0 nil])
([nil nil ((755 . 762)) nil (25735 23472 701783 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-function-name-face fontified t)) . -759) (undo-tree-id2842 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -760) (undo-tree-id2843 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -761) (undo-tree-id2844 . -1) 762) nil (25735 23472 701782 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -779) (779 . 780) (#(")" 0 1 (fontified nil)) . -779) (779 . 780) (759 . 780)) nil (25735 23472 701779 0) 0 nil])
([nil nil ((779 . 786)) nil (25735 23472 701778 0) 0 nil])
([nil nil ((786 . 797)) nil (25735 23472 701777 0) 0 nil])
([nil nil ((797 . 801)) nil (25735 23472 701777 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -797) (undo-tree-id2838 . -1) (#("h" 0 1 (fontified t)) . -798) (undo-tree-id2839 . -1) (#("t" 0 1 (fontified t)) . -799) (undo-tree-id2840 . -1) (#("a" 0 1 (fontified t)) . -800) (undo-tree-id2841 . -1) 801) nil (25735 23472 701776 0) 0 nil])
([nil nil ((797 . 809)) nil (25735 23472 701772 0) 0 nil])
([nil nil ((809 . 810)) nil (25735 23472 701772 0) 0 nil])
([nil nil ((811 . 812)) nil (25735 23472 701771 0) 0 nil])
([nil nil ((812 . 817)) nil (25735 23472 701771 0) 0 nil])
([nil nil ((820 . 822) (819 . 821) (#("\"" 0 1 (syntax-table (15) face font-lock-doc-face fontified nil)) . -819) (819 . 820) (#("\"" 0 1 (fontified nil)) . -818) (818 . 819) (#("\"" 0 1 (face font-lock-doc-face fontified nil)) . -818) (818 . 819) (817 . 819) (#("\"" 0 1 (fontified nil)) . -817) (817 . 818)) nil (25735 23472 701770 0) 0 nil])
([nil nil ((820 . 825)) nil (25735 23472 701768 0) 0 nil])
([nil nil ((820 . 837)) nil (25735 23472 701767 0) 0 nil])
([nil nil ((837 . 849)) nil (25735 23472 701766 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . -848) (undo-tree-id2837 . -1) 849) nil (25735 23472 701766 0) 0 nil])
([nil nil ((848 . 858)) nil (25735 23472 701764 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-doc-face fontified t)) . -855) (undo-tree-id2834 . -1) (#("s" 0 1 (face font-lock-doc-face fontified t)) . -856) (undo-tree-id2835 . -1) (#("i" 0 1 (face font-lock-doc-face fontified t)) . -857) (undo-tree-id2836 . -1) 858) nil (25735 23472 701763 0) 0 nil])
([nil nil ((855 . 859)) nil (25735 23472 701760 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-doc-face fontified t)) . -855) (undo-tree-id2830 . -1) (#("n" 0 1 (face font-lock-doc-face fontified t)) . -856) (undo-tree-id2831 . -1) (#("d" 0 1 (face font-lock-doc-face fontified t)) . -857) (undo-tree-id2832 . -1) (#("i" 0 1 (face font-lock-doc-face fontified t)) . -858) (undo-tree-id2833 . -1) 859) nil (25735 23472 701759 0) 0 nil])
([nil nil ((871 . 872) (855 . 872)) nil (25735 23472 701756 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-doc-face fontified t)) . -871) (undo-tree-id2829 . -1) 872) nil (25735 23472 701755 0) 0 nil])
([nil nil ((871 . 881)) nil (25735 23472 701754 0) 0 nil])
([nil nil ((882 . 887)) nil (25735 23472 701754 0) 0 nil])
([nil nil ((887 . 890)) nil (25735 23472 701753 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-doc-face fontified t)) . -887) (undo-tree-id2826 . -1) (#("n" 0 1 (face font-lock-doc-face fontified t)) . -888) (undo-tree-id2827 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -889) (undo-tree-id2828 . -1) 890) nil (25735 23472 701752 0) 0 nil])
([nil nil ((887 . 900)) nil (25735 23472 701750 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-doc-face fontified t)) . -899) (undo-tree-id2825 . -1) 900) nil (25735 23472 701749 0) 0 nil])
([nil nil ((899 . 909)) nil (25735 23472 701748 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-doc-face fontified t)) . -906) (undo-tree-id2822 . -1) (#("s" 0 1 (face font-lock-doc-face fontified t)) . -907) (undo-tree-id2823 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -908) (undo-tree-id2824 . -1) 909) nil (25735 23472 701747 0) 0 nil])
([nil nil ((887 . 893)) nil (25735 23472 701744 0) 0 nil])
([nil nil ((912 . 925)) nil (25735 23472 701744 0) 0 nil])
([nil nil ((933 . 938)) nil (25735 23472 701743 0) 0 nil])
([nil nil ((938 . 947)) nil (25735 23472 701743 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -945) (undo-tree-id2820 . -1) (#("a" 0 1 (fontified t)) . -946) (undo-tree-id2821 . -1) 947) nil (25735 23472 701742 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -949) (949 . 950) (#(")" 0 1 (fontified nil)) . -949) (949 . 950) (945 . 950)) nil (25735 23472 701740 0) 0 nil])
([nil nil ((949 . 955)) nil (25735 23472 701739 0) 0 nil])
([nil nil ((952 . 959) (#("deg" 0 3 (fontified t)) . -952) (undo-tree-id2819 . -3) 955) nil (25735 23472 701738 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -960) (960 . 961) (#(")" 0 1 (fontified nil)) . -960) (960 . 961) (959 . 961)) nil (25735 23472 701736 0) 0 nil])
([nil nil ((960 . 963)) nil (25735 23472 701735 0) 0 nil])
([nil nil ((965 . 968)) nil (25735 23472 701735 0) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -966) (undo-tree-id2817 . -1) (#(" " 0 1 (fontified t)) . -967) (undo-tree-id2818 . -1) 968) nil (25735 23472 701734 0) 0 nil])
([nil nil ((966 . 974)) nil (25735 23472 701732 0) 0 nil])
([nil nil ((968 . 977) (#("thickn" 0 6 (fontified t)) . -968) (undo-tree-id2816 . -6) 974) nil (25735 23472 701731 0) 0 nil])
([nil nil ((977 . 982)) nil (25735 23472 701730 0) 0 nil])
([nil nil ((982 . 987)) nil (25735 23472 701729 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -986) (undo-tree-id2815 . -1) 987) nil (25735 23472 701729 0) 0 nil])
([nil nil ((933 . 938)) nil (25735 23472 701727 0) 0 nil])
([nil nil ((938 . 944)) nil (25735 23472 701727 0) 0 nil])
([nil nil ((#("np.tan(np.deg2rad(psi))" 0 6 (fontified t) 6 10 (fontified t) 10 17 (fontified t) 17 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t)) . 953) (undo-tree-id2809 . -23) (undo-tree-id2810 . -23) (undo-tree-id2811 . 1) (undo-tree-id2812 . -23) (undo-tree-id2813 . 17) (undo-tree-id2814 . -7) 976) nil (25735 23472 701726 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 966 . 967) (nil fontified nil 966 . 967) (nil fontified nil 965 . 966) (nil fontified nil 961 . 965) (nil fontified nil 954 . 961) (nil fontified nil 950 . 954) (nil fontified nil 944 . 950) (944 . 967)) nil (25735 23472 701722 0) 0 nil])
([nil nil ((941 . 945)) nil (25735 23472 701721 0) 0 nil])
([nil nil ((980 . 983)) nil (25735 23472 701720 0) 0 nil])
([nil nil ((980 . 987) (#("tan" 0 3 (fontified t)) . -980) (undo-tree-id2808 . -3) 983) nil (25735 23472 701719 0) 0 nil])
([nil nil ((1008 . 1011)) nil (25735 23472 701718 0) 0 nil])
([nil nil ((1008 . 1015) (#("tan" 0 3 (fontified t)) . -1008) (undo-tree-id2807 . -3) 1011) nil (25735 23472 701717 0) 0 nil])
([nil nil ((1015 . 1019)) nil (25735 23472 701716 0) 0 nil])
([nil nil ((1019 . 1024)) nil (25735 23472 701715 0) 0 nil])
([nil nil ((1024 . 1033)) nil (25735 23472 701715 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1024) (undo-tree-id2798 . -1) (#("e" 0 1 (fontified t)) . -1025) (undo-tree-id2799 . -1) (#("w" 0 1 (fontified t)) . -1026) (undo-tree-id2800 . -1) (#("_" 0 1 (fontified t)) . -1027) (undo-tree-id2801 . -1) (#("s" 0 1 (fontified t)) . -1028) (undo-tree-id2802 . -1) (#("h" 0 1 (fontified t)) . -1029) (undo-tree-id2803 . -1) (#("a" 0 1 (fontified t)) . -1030) (undo-tree-id2804 . -1) (#("p" 0 1 (fontified t)) . -1031) (undo-tree-id2805 . -1) (#("e" 0 1 (fontified t)) . -1032) (undo-tree-id2806 . -1) 1033) nil (25735 23472 701713 0) 0 nil])
([nil nil ((1024 . 1039)) nil (25735 23472 701707 0) 0 nil])
([nil nil ((1033 . 1042) (#("transl" 0 6 (fontified t)) . -1033) (undo-tree-id2797 . -6) 1039) nil (25735 23472 701706 0) 0 nil])
([nil nil ((1042 . 1044)) nil (25735 23472 701705 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -1042) (undo-tree-id2796 . -1) (#(")" 0 1 (fontified t)) . 1043)) nil (25735 23472 701704 0) 0 nil])
([nil nil ((1042 . 1043)) nil (25735 23472 701703 0) 0 nil])
([nil nil ((1033 . 1053) (#("translate_" 0 10 (fontified t)) . -1033) (undo-tree-id2795 . -10) 1043) nil (25735 23472 701702 0) 0 nil])
([nil nil ((1053 . 1055)) nil (25735 23472 701697 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1054) (1054 . 1055) (#(")" 0 1 (fontified nil)) . -1054) (1054 . 1055)) nil (25735 23472 701696 0) 0 nil])
([nil nil ((1054 . 1069)) nil (25735 23472 701695 0) 0 nil])
([nil nil ((1070 . 1075)) nil (25735 23472 701694 0) 0 nil])
([nil nil ((1075 . 1088)) nil (25735 23472 701694 0) 0 nil])
([nil nil ((1088 . 1100)) nil (25735 23472 701693 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1091) (undo-tree-id2786 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -1092) (undo-tree-id2787 . -1) (#("t" 0 1 (face font-lock-builtin-face fontified t)) . -1093) (undo-tree-id2788 . -1) (#("e" 0 1 (fontified t)) . -1094) (undo-tree-id2789 . -1) (#("r" 0 1 (fontified t)) . -1095) (undo-tree-id2790 . -1) (#("s" 0 1 (fontified t)) . -1096) (undo-tree-id2791 . -1) (#("e" 0 1 (fontified t)) . -1097) (undo-tree-id2792 . -1) (#("c" 0 1 (fontified t)) . -1098) (undo-tree-id2793 . -1) (#("t" 0 1 (fontified t)) . -1099) (undo-tree-id2794 . -1) 1100) nil (25735 23472 701692 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1102 . 1103) (nil fontified nil 1091 . 1103) (1091 . 1103)) nil (25735 23472 701685 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1104) (1104 . 1105) (#(")" 0 1 (fontified nil)) . -1104) (1104 . 1105) (1103 . 1105)) nil (25735 23472 701684 0) 0 nil])
([nil nil ((1104 . 1110)) nil (25735 23472 701683 0) 0 nil])
([nil nil ((1111 . 1116)) nil (25735 23472 701683 0) 0 nil])
([nil nil ((1116 . 1121)) nil (25735 23472 701682 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1119) (undo-tree-id2784 . -1) (#("e" 0 1 (fontified t)) . -1120) (undo-tree-id2785 . -1) 1121) nil (25735 23472 701681 0) 0 nil])
([nil nil ((1119 . 1120)) nil (25735 23472 701679 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1119) (undo-tree-id2783 . -1) 1120) nil (25735 23472 701679 0) 0 nil])
([nil nil ((1119 . 1130)) nil (25735 23472 701678 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1129) (undo-tree-id2782 . -1) 1130) nil (25735 23472 701677 0) 0 nil])
([nil nil ((1129 . 1134)) nil (25735 23472 701676 0) 0 nil])
([nil nil ((1129 . 1138) (#("trans" 0 5 (fontified t)) . -1129) (undo-tree-id2781 . -5) 1134) nil (25735 23472 701675 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1139) (1139 . 1140) (#(")" 0 1 (fontified nil)) . -1139) (1139 . 1140) (1138 . 1140)) nil (25735 23472 701673 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1138) (undo-tree-id2777 . -1) (#(")" 0 1 (fontified t)) . -1139) (undo-tree-id2778 . -1) (undo-tree-id2779 . 1) (undo-tree-id2780 . -1) 1140) nil (25735 23472 701672 0) 0 nil])
([nil nil ((1138 . 1141)) nil (25735 23472 701669 0) 0 nil])
([nil nil ((1129 . 1149) (#("translate_by" 0 12 (fontified t)) . -1129) (undo-tree-id2776 . -12) 1141) nil (25735 23472 701668 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1150) (1150 . 1151) (#(")" 0 1 (fontified nil)) . -1150) (1150 . 1151) (1149 . 1151)) nil (25735 23472 701667 0) 0 nil])
([nil nil ((1150 . 1151)) nil (25735 23472 701665 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1150) (undo-tree-id2775 . -1) 1151) nil (25735 23472 701665 0) 0 nil])
([nil nil ((1150 . 1164)) nil (25735 23472 701664 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1159) (undo-tree-id2770 . -1) (#("h" 0 1 (fontified t)) . -1160) (undo-tree-id2771 . -1) (#("a" 0 1 (fontified t)) . -1161) (undo-tree-id2772 . -1) (#("p" 0 1 (fontified t)) . -1162) (undo-tree-id2773 . -1) (#("e" 0 1 (fontified t)) . -1163) (undo-tree-id2774 . -1) 1164) nil (25735 23472 701663 0) 0 nil])
([nil nil ((1159 . 1160)) nil (25735 23472 701658 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1159) (undo-tree-id2769 . -1) 1160) nil (25735 23472 701658 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1168) (1168 . 1169) (#(")" 0 1 (fontified nil)) . -1168) (1168 . 1169) (1159 . 1169)) nil (25735 23472 701656 0) 0 nil])
([nil nil ((1168 . 1171)) nil (25735 23472 701655 0) 0 nil])
([nil nil ((1169 . 1170)) nil (25735 23472 701654 0) 0 nil])
([nil nil ((1171 . 1172)) nil (25735 23472 701654 0) 0 nil])
([nil nil ((1175 . 1180)) nil (25735 23472 701653 0) 0 nil])
([nil nil ((1180 . 1187)) nil (25735 23472 701653 0) 0 nil])
([nil nil ((1187 . 1189)) nil (25735 23472 701652 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1187) (undo-tree-id2767 . -1) (#("e" 0 1 (fontified t)) . -1188) (undo-tree-id2768 . -1) 1189) nil (25735 23472 701651 0) 0 nil])
([nil nil ((1187 . 1190)) nil (25735 23472 701649 0) 0 nil])
([nil nil ((1187 . 1197) (#("pro" 0 3 (fontified t)) . -1187) (undo-tree-id2766 . -3) 1190) nil (25735 23472 701647 0) 0 nil])
([nil nil ((1197 . 1198)) nil (25735 23472 701638 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -718) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) 719 (t 25735 23472 705462 680000)) nil (25735 23604 285202 0) 0 nil])
([nil nil ((730 . 735) 718) nil (25735 23604 285191 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -731) (undo-tree-id3023 . -4) (undo-tree-id3024 . -1) (undo-tree-id3025 . -4) (undo-tree-id3026 . -4) (undo-tree-id3027 . -4) (undo-tree-id3028 . -4) (undo-tree-id3029 . -4) (undo-tree-id3030 . -4) (undo-tree-id3031 . -4) (undo-tree-id3032 . -4) (undo-tree-id3033 . -4) (undo-tree-id3034 . -4) (undo-tree-id3035 . -4) (undo-tree-id3036 . -4) (undo-tree-id3037 . -4) (undo-tree-id3038 . -4) (undo-tree-id3039 . -4) (undo-tree-id3040 . -4) (undo-tree-id3041 . -4) (undo-tree-id3042 . -4) (undo-tree-id3043 . -4) (undo-tree-id3044 . -4) (undo-tree-id3045 . -4) (undo-tree-id3046 . -4) (undo-tree-id3047 . -4) (undo-tree-id3048 . -4) (undo-tree-id3049 . -4) (undo-tree-id3050 . -4) (undo-tree-id3051 . -4) (undo-tree-id3052 . -4) (undo-tree-id3053 . -4) (undo-tree-id3054 . -4) (undo-tree-id3055 . -4) (undo-tree-id3056 . -4) (undo-tree-id3057 . -4) (undo-tree-id3058 . -4) (undo-tree-id3059 . -4) (undo-tree-id3060 . -4) (undo-tree-id3061 . -4) (undo-tree-id3062 . -4) (undo-tree-id3063 . -4) (undo-tree-id3064 . -4) (undo-tree-id3065 . -4) (undo-tree-id3066 . -4) (undo-tree-id3067 . -4) (undo-tree-id3068 . -4) (undo-tree-id3069 . -4) (undo-tree-id3070 . -4) (undo-tree-id3071 . -4) (undo-tree-id3072 . -4) (undo-tree-id3073 . -4) (undo-tree-id3074 . -4) (undo-tree-id3075 . -4) (undo-tree-id3076 . -4) (undo-tree-id3077 . -4) (undo-tree-id3078 . -4) (undo-tree-id3079 . -4) (undo-tree-id3080 . -4) (undo-tree-id3081 . -4) (undo-tree-id3082 . -4) (undo-tree-id3083 . -4) (undo-tree-id3084 . -4) (undo-tree-id3085 . -4) (undo-tree-id3086 . -4) (undo-tree-id3087 . -4) (undo-tree-id3088 . -4) (undo-tree-id3089 . -4) (undo-tree-id3090 . -4) (undo-tree-id3091 . -4) (undo-tree-id3092 . -4) (undo-tree-id3093 . -4) (undo-tree-id3094 . -4) (undo-tree-id3095 . -4) (undo-tree-id3096 . -4) (undo-tree-id3097 . -4) (undo-tree-id3098 . -4) (undo-tree-id3099 . -4) (undo-tree-id3100 . -4) (undo-tree-id3101 . -4) (undo-tree-id3102 . -4) (undo-tree-id3103 . -4) (undo-tree-id3104 . -4) (undo-tree-id3105 . -4) (undo-tree-id3106 . -4) (undo-tree-id3107 . -4) (undo-tree-id3108 . -4) (undo-tree-id3109 . -4) (undo-tree-id3110 . -4) (undo-tree-id3111 . -4) (undo-tree-id3112 . -4) (undo-tree-id3113 . -4) (undo-tree-id3114 . -4) (undo-tree-id3115 . -4) (undo-tree-id3116 . -4) (undo-tree-id3117 . -4) (undo-tree-id3118 . -4) (undo-tree-id3119 . -4) (undo-tree-id3120 . -4) (undo-tree-id3121 . -4) (undo-tree-id3122 . -4) (undo-tree-id3123 . -4) (undo-tree-id3124 . -4) (undo-tree-id3125 . -4) (undo-tree-id3126 . -4) (undo-tree-id3127 . -4) (undo-tree-id3128 . -4) (undo-tree-id3129 . -4) (undo-tree-id3130 . -4) (undo-tree-id3131 . -4) (undo-tree-id3132 . -4) (undo-tree-id3133 . -4) (undo-tree-id3134 . -4) (undo-tree-id3135 . -4) (undo-tree-id3136 . -4) (undo-tree-id3137 . -4) 735) nil (25735 23604 285187 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -730) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) 731) nil (25735 23604 285126 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -599) (undo-tree-id3162 . -1) (#("i" 0 1 (fontified t)) . -600) (undo-tree-id3163 . -1) (#("n" 0 1 (fontified t)) . -601) (undo-tree-id3164 . -1) 602 (t 25735 23604 289601 790000)) nil (25735 23767 225803 0) 0 nil])
([nil nil ((599 . 602)) nil (25735 23767 225800 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -643) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (#("o" 0 1 (fontified t)) . -644) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (#("s" 0 1 (fontified t)) . -645) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) 646) nil (25735 23767 225797 0) 0 nil])
([nil nil ((643 . 646)) nil (25735 23767 225786 0) 0 nil])
([nil nil ((apply -2 1111 1177 undo--wrap-and-run-primitive-undo 1111 1177 ((1115 . 1117) 1126)) (t 25735 23767 229673 86000)) nil (25735 23914 216981 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1196) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) 1197) nil (25735 23914 216981 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1188) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (#("r" 0 1 (fontified t)) . -1189) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (#("o" 0 1 (fontified t)) . -1190) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (#("j" 0 1 (fontified t)) . -1191) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (#("e" 0 1 (fontified t)) . -1192) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (#("c" 0 1 (fontified t)) . -1193) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (#("t" 0 1 (fontified t)) . -1194) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (#("i" 0 1 (fontified t)) . -1195) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (#("n" 0 1 (fontified t)) . -1196) (undo-tree-id3316 . -1) 1197) nil (25735 23914 216978 0) 0 nil])
([nil nil ((1188 . 1195)) nil (25735 23914 216968 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1194) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) 1195) nil (25735 23914 216963 0) 0 nil])
([nil nil ((1194 . 1195)) nil (25735 23914 216888 0) 0 nil])
([nil nil ((apply 2 1111 1174 undo--wrap-and-run-primitive-undo 1111 1174 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -1115) 1156)) (t 25735 23914 220805 356000)) nil (25735 24104 744528 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1186) (undo-tree-id3339 . -1) (#("l" 0 1 (fontified t)) . -1187) (undo-tree-id3340 . -1) (#("l" 0 1 (face font-lock-builtin-face fontified t)) . -1188) (undo-tree-id3341 . -1) (#("o" 0 1 (fontified t)) . -1189) (undo-tree-id3342 . -1) (#("w" 0 1 (fontified t)) . -1190) (undo-tree-id3343 . -1) (#("e" 0 1 (fontified t)) . -1191) (undo-tree-id3344 . -1) (#("d" 0 1 (fontified t)) . -1192) (undo-tree-id3345 . -1) 1193) nil (25735 24104 744527 0) 0 nil])
([nil nil ((1186 . 1190)) nil (25735 24104 744522 0) 0 nil])
([nil nil ((1186 . 1196) (#("proj" 0 4 (fontified t)) . -1186) (undo-tree-id3338 . -4) 1190) nil (25735 24104 744521 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -1158) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) 1159) nil (25735 24104 744518 0) 0 nil])
([nil nil ((1158 . 1164)) nil (25735 24104 744501 0) 0 nil])
([nil nil ((1201 . 1203) (t 25735 24104 748580 941000)) nil (25735 24520 673888 0) 0 nil])
([nil nil ((1203 . 1207)) nil (25735 24520 673887 0) 0 nil])
([nil nil ((#("def " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -1203) (undo-tree-id4046 . -4) 1207) nil (25735 24520 673887 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1203) (undo-tree-id4045 . -1) 1204) nil (25735 24520 673886 0) 0 nil])
([nil nil ((1203 . 1218)) nil (25735 24520 673884 0) 0 nil])
([nil nil ((#("def union_shape" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 15 (face font-lock-function-name-face fontified t)) . -1203) (undo-tree-id4044 . -15) 1218) nil (25735 24520 673884 0) 0 nil])
([nil nil ((1203 . 1207)) nil (25735 24520 673882 0) 0 nil])
([nil nil ((#("def " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -1203) (undo-tree-id4043 . -4) 1207) nil (25735 24520 673882 0) 0 nil])
([nil nil ((1203 . 1212)) nil (25735 24520 673880 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-function-name-face fontified t)) . -1207) (undo-tree-id4038 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -1208) (undo-tree-id4039 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -1209) (undo-tree-id4040 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -1210) (undo-tree-id4041 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1211) (undo-tree-id4042 . -1) 1212) nil (25735 24520 673879 0) 0 nil])
([nil nil ((1207 . 1220)) nil (25735 24520 673876 0) 0 nil])
([nil nil ((1220 . 1226)) nil (25735 24520 673875 0) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-function-name-face fontified t)) . -1207) (undo-tree-id4019 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -1208) (undo-tree-id4020 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -1209) (undo-tree-id4021 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -1210) (undo-tree-id4022 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -1211) (undo-tree-id4023 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -1212) (undo-tree-id4024 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -1213) (undo-tree-id4025 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -1214) (undo-tree-id4026 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -1215) (undo-tree-id4027 . -1) (#("j" 0 1 (face font-lock-function-name-face fontified t)) . -1216) (undo-tree-id4028 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1217) (undo-tree-id4029 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -1218) (undo-tree-id4030 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -1219) (undo-tree-id4031 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -1220) (undo-tree-id4032 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -1221) (undo-tree-id4033 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -1222) (undo-tree-id4034 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -1223) (undo-tree-id4035 . -1) (#("f" 0 1 (face font-lock-function-name-face fontified t)) . -1224) (undo-tree-id4036 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -1225) (undo-tree-id4037 . -1) 1226) nil (25735 24520 673873 0) 0 nil])
([nil nil ((1207 . 1222)) nil (25735 24520 673860 0) 0 nil])
([nil nil ((1222 . 1225)) nil (25735 24520 673859 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face fontified t)) . -1222) (undo-tree-id4016 . -1) (#("f" 0 1 (face font-lock-function-name-face fontified t)) . -1223) (undo-tree-id4017 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -1224) (undo-tree-id4018 . -1) 1225) nil (25735 24520 673858 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1223) (1223 . 1224) (#(")" 0 1 (fontified nil)) . -1223) (1223 . 1224) (1222 . 1224)) nil (25735 24520 673855 0) 0 nil])
([nil nil ((1223 . 1230)) nil (25735 24520 673854 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1223) (undo-tree-id4009 . -1) (#("h" 0 1 (fontified t)) . -1224) (undo-tree-id4010 . -1) (#("a" 0 1 (fontified t)) . -1225) (undo-tree-id4011 . -1) (#("p" 0 1 (fontified t)) . -1226) (undo-tree-id4012 . -1) (#("e" 0 1 (fontified t)) . -1227) (undo-tree-id4013 . -1) (#("," 0 1 (fontified t)) . -1228) (undo-tree-id4014 . -1) (#(" " 0 1 (fontified t)) . -1229) (undo-tree-id4015 . -1) 1230) nil (25735 24520 673853 0) 0 nil])
([nil nil ((1223 . 1233)) nil (25735 24520 673848 0) 0 nil])
([nil nil ((1233 . 1239)) nil (25735 24520 673847 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1223) (undo-tree-id3993 . -1) (#("h" 0 1 (fontified t)) . -1224) (undo-tree-id3994 . -1) (#("a" 0 1 (fontified t)) . -1225) (undo-tree-id3995 . -1) (#("p" 0 1 (fontified t)) . -1226) (undo-tree-id3996 . -1) (#("e" 0 1 (fontified t)) . -1227) (undo-tree-id3997 . -1) (#("," 0 1 (fontified t)) . -1228) (undo-tree-id3998 . -1) (#(" " 0 1 (fontified t)) . -1229) (undo-tree-id3999 . -1) (#("t" 0 1 (fontified t)) . -1230) (undo-tree-id4000 . -1) (#("h" 0 1 (fontified t)) . -1231) (undo-tree-id4001 . -1) (#("i" 0 1 (fontified t)) . -1232) (undo-tree-id4002 . -1) (#("c" 0 1 (fontified t)) . -1233) (undo-tree-id4003 . -1) (#("k" 0 1 (fontified t)) . -1234) (undo-tree-id4004 . -1) (#("n" 0 1 (fontified t)) . -1235) (undo-tree-id4005 . -1) (#("e" 0 1 (fontified t)) . -1236) (undo-tree-id4006 . -1) (#("s" 0 1 (fontified t)) . -1237) (undo-tree-id4007 . -1) (#("s" 0 1 (fontified t)) . -1238) (undo-tree-id4008 . -1) 1239) nil (25735 24520 673845 0) 0 nil])
([nil nil ((1223 . 1230)) nil (25735 24520 673835 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -1228) (undo-tree-id3991 . -1) (#(" " 0 1 (fontified t)) . -1229) (undo-tree-id3992 . -1) 1230) nil (25735 24520 673834 0) 0 nil])
([nil nil ((1228 . 1245)) nil (25735 24520 673832 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1243) (undo-tree-id3989 . -1) (#(" " 0 1 (fontified t)) . -1244) (undo-tree-id3990 . -1) 1245) nil (25735 24520 673831 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1241) (undo-tree-id3987 . -1) (#("i" 0 1 (fontified t)) . -1242) (undo-tree-id3988 . -1) 1243) nil (25735 24520 673829 0) 0 nil])
([nil nil ((1241 . 1247)) nil (25735 24520 673827 0) 0 nil])
([nil nil ((1248 . 1249)) nil (25735 24520 673827 0) 0 nil])
([nil nil ((1249 . 1254)) nil (25735 24520 673826 0) 0 nil])
([nil nil ((1257 . 1259) (1256 . 1258) (#("\"" 0 1 (syntax-table (15) face font-lock-doc-face fontified nil)) . -1256) (1256 . 1257) (#("\"" 0 1 (fontified nil)) . -1255) (1255 . 1256) (#("\"" 0 1 (face font-lock-doc-face fontified nil)) . -1255) (1255 . 1256) (1254 . 1256) (#("\"" 0 1 (fontified nil)) . -1254) (1254 . 1255)) nil (25735 24520 673825 0) 0 nil])
([nil nil ((1257 . 1262)) nil (25735 24520 673823 0) 0 nil])
([nil nil ((1257 . 1269)) nil (25735 24520 673823 0) 0 nil])
([nil nil ((1269 . 1276)) nil (25735 24520 673822 0) 0 nil])
([nil nil ((#("G" 0 1 (face font-lock-doc-face fontified t)) . -1257) (undo-tree-id3968 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -1258) (undo-tree-id3969 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -1259) (undo-tree-id3970 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1260) (undo-tree-id3971 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -1261) (undo-tree-id3972 . -1) (#("l" 0 1 (face font-lock-doc-face fontified t)) . -1262) (undo-tree-id3973 . -1) (#("l" 0 1 (face font-lock-doc-face fontified t)) . -1263) (undo-tree-id3974 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1264) (undo-tree-id3975 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -1265) (undo-tree-id3976 . -1) (#("h" 0 1 (face font-lock-doc-face fontified t)) . -1266) (undo-tree-id3977 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -1267) (undo-tree-id3978 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1268) (undo-tree-id3979 . -1) (#("s" 0 1 (face font-lock-doc-face fontified t)) . -1269) (undo-tree-id3980 . -1) (#("h" 0 1 (face font-lock-doc-face fontified t)) . -1270) (undo-tree-id3981 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -1271) (undo-tree-id3982 . -1) (#("p" 0 1 (face font-lock-doc-face fontified t)) . -1272) (undo-tree-id3983 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -1273) (undo-tree-id3984 . -1) (#("s" 0 1 (face font-lock-doc-face fontified t)) . -1274) (undo-tree-id3985 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -1275) (undo-tree-id3986 . -1) 1276) nil (25735 24520 673820 0) 0 nil])
([nil nil ((1257 . 1268)) nil (25735 24520 673806 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-doc-face fontified t)) . -1267) (undo-tree-id3967 . -1) 1268) nil (25735 24520 673806 0) 0 nil])
([nil nil ((1267 . 1274)) nil (25735 24520 673804 0) 0 nil])
([nil nil ((1247 . 1249)) nil (25735 24520 673804 0) 0 nil])
([nil nil ((1249 . 1257)) nil (25735 24520 673803 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1255) (undo-tree-id3965 . -1) (#("1" 0 1 (fontified t)) . -1256) (undo-tree-id3966 . -1) 1257) nil (25735 24520 673802 0) 0 nil])
([nil nil ((1255 . 1256)) nil (25735 24520 673801 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1254) (undo-tree-id3963 . -1) (#("1" 0 1 (fontified t)) . -1255) (undo-tree-id3964 . -1) 1256) nil (25735 24520 673800 0) 0 nil])
([nil nil ((1254 . 1257)) nil (25735 24520 673798 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -1253) (undo-tree-id3959 . -1) (#("1" 0 1 (fontified t)) . -1254) (undo-tree-id3960 . -1) (#("." 0 1 (fontified t)) . -1255) (undo-tree-id3961 . -1) (#("0" 0 1 (fontified t)) . -1256) (undo-tree-id3962 . -1) 1257) nil (25735 24520 673797 0) 0 nil])
([nil nil ((1253 . 1258)) nil (25735 24520 673794 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -1255) (undo-tree-id3956 . -1) (#("6" 0 1 (fontified t)) . -1256) (undo-tree-id3957 . -1) (#("0" 0 1 (fontified t)) . -1257) (undo-tree-id3958 . -1) 1258) nil (25735 24520 673793 0) 0 nil])
([nil nil ((1255 . 1257)) nil (25735 24520 673790 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -1256) (undo-tree-id3955 . -1) 1257) nil (25735 24520 673790 0) 0 nil])
([nil nil ((1256 . 1258)) nil (25735 24520 673789 0) 0 nil])
([nil nil ((1285 . 1300)) nil (25735 24520 673788 0) 0 nil])
([nil nil ((1300 . 1301)) nil (25735 24520 673787 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-doc-face fontified t)) . -1298) (undo-tree-id3952 . -1) (#("l" 0 1 (face font-lock-doc-face fontified t)) . -1299) (undo-tree-id3953 . -1) (#("g" 0 1 (face font-lock-doc-face fontified t)) . -1300) (undo-tree-id3954 . -1) 1301) nil (25735 24520 673787 0) 0 nil])
([nil nil ((1298 . 1300)) nil (25735 24520 673784 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-doc-face fontified t)) . -1299) (undo-tree-id3951 . -1) 1300) nil (25735 24520 673784 0) 0 nil])
([nil nil ((1299 . 1302)) nil (25735 24520 673782 0) 0 nil])
([nil nil ((1310 . 1315)) nil (25735 24520 673782 0) 0 nil])
([nil nil ((1315 . 1333)) nil (25735 24520 673781 0) 0 nil])
([nil nil ((1328 . 1347) (#("shape" 0 5 (fontified t)) . -1328) (undo-tree-id3950 . -5) 1333) nil (25735 24520 673780 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1348) (1348 . 1349) (#(")" 0 1 (fontified nil)) . -1348) (1348 . 1349) (1347 . 1349)) nil (25735 24520 673779 0) 0 nil])
([nil nil ((1348 . 1366)) nil (25735 24520 673778 0) 0 nil])
([nil nil ((1361 . 1370) (#("thick" 0 5 (fontified t)) . -1361) (undo-tree-id3949 . -5) 1366) nil (25735 24520 673777 0) 0 nil])
([nil nil ((1370 . 1375)) nil (25735 24520 673776 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1374) (undo-tree-id3948 . -1) 1375) nil (25735 24520 673775 0) 0 nil])
([nil nil ((1374 . 1376)) nil (25735 24520 673774 0) 0 nil])
([nil nil ((1371 . 1380) (#("thick" 0 5 (fontified t)) . -1371) (undo-tree-id3947 . -5) 1376) nil (25735 24520 673773 0) 0 nil])
([nil nil ((1380 . 1393)) nil (25735 24520 673772 0) 0 nil])
([nil nil ((1393 . 1394)) nil (25735 24520 673771 0) 0 nil])
([nil nil ((1395 . 1400)) nil (25735 24520 673771 0) 0 nil])
([nil nil ((1400 . 1406)) nil (25735 24520 673770 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1400) (undo-tree-id3941 . -1) (#("o" 0 1 (fontified t)) . -1401) (undo-tree-id3942 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -1402) (undo-tree-id3943 . -1) (#(" " 0 1 (fontified t)) . -1403) (undo-tree-id3944 . -1) (#("a" 0 1 (fontified t)) . -1404) (undo-tree-id3945 . -1) (#("n" 0 1 (fontified t)) . -1405) (undo-tree-id3946 . -1) 1406) nil (25735 24520 673769 0) 0 nil])
([nil nil ((1400 . 1403)) nil (25735 24520 673764 0) 0 nil])
([nil nil ((1403 . 1405)) nil (25735 24520 673764 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1403) (undo-tree-id3939 . -1) (#("s" 0 1 (fontified t)) . -1404) (undo-tree-id3940 . -1) 1405) nil (25735 24520 673763 0) 0 nil])
([nil nil ((1403 . 1415)) nil (25735 24520 673761 0) 0 nil])
([nil nil ((1412 . 1420) (#("lin" 0 3 (fontified t)) . -1412) (undo-tree-id3938 . -3) 1415) nil (25735 24520 673761 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1421) (1421 . 1422) (#(")" 0 1 (fontified nil)) . -1421) (1421 . 1422) (1420 . 1422)) nil (25735 24520 673759 0) 0 nil])
([nil nil ((1421 . 1434)) nil (25735 24520 673758 0) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -1436) (1436 . 1437) (#("]" 0 1 (fontified nil)) . -1436) (1436 . 1437) (1435 . 1437)) nil (25735 24520 673757 0) 0 nil])
([nil nil ((1436 . 1438)) nil (25735 24520 673756 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -1435) (undo-tree-id3931 . -1) (#("1" 0 1 (fontified t)) . -1436) (undo-tree-id3932 . -1) (#(":" 0 1 (fontified t)) . -1437) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (#("]" 0 1 (fontified t)) . -1438) (undo-tree-id3935 . -1) (undo-tree-id3936 . 1) (undo-tree-id3937 . -1) 1439) nil (25735 24520 673754 0) 0 nil])
([nil nil ((1435 . 1440)) nil (25735 24520 673749 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1315) (undo-tree-id3921 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -1316) (undo-tree-id3922 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1317) (undo-tree-id3923 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1318) (undo-tree-id3924 . -1) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -1319) (undo-tree-id3925 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1320) (undo-tree-id3926 . -1) (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -1321) (undo-tree-id3927 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1322) (undo-tree-id3928 . -1) (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -1323) (undo-tree-id3929 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1324) (undo-tree-id3930 . -1) 1325) nil (25735 24520 673747 0) 0 nil])
([nil nil ((1315 . 1319)) nil (25735 24520 673740 0) 0 nil])
([nil nil ((1319 . 1322)) nil (25735 24520 673740 0) 0 nil])
([nil nil ((1322 . 1323)) nil (25735 24520 673739 0) 0 nil])
([nil nil ((1438 . 1451)) nil (25735 24520 673738 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1442) (undo-tree-id3912 . -1) (#("n" 0 1 (fontified t)) . -1443) (undo-tree-id3913 . -1) (#("g" 0 1 (fontified t)) . -1444) (undo-tree-id3914 . -1) (#("l" 0 1 (fontified t)) . -1445) (undo-tree-id3915 . -1) (#("e" 0 1 (fontified t)) . -1446) (undo-tree-id3916 . -1) (#(" " 0 1 (fontified t)) . -1447) (undo-tree-id3917 . -1) (#("i" 0 1 (fontified t)) . -1448) (undo-tree-id3918 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -1449) (undo-tree-id3919 . -1) (#(" " 0 1 (fontified t)) . -1450) (undo-tree-id3920 . -1) 1451) nil (25735 24520 673737 0) 0 nil])
([nil nil ((1442 . 1454)) nil (25735 24520 673730 0) 0 nil])
([nil nil ((1454 . 1457)) nil (25735 24520 673730 0) 0 nil])
([nil nil ((1380 . 1389)) nil (25735 24520 673729 0) 0 nil])
([nil nil ((1466 . 1467)) nil (25735 24520 673729 0) 0 nil])
([nil nil ((1467 . 1476)) nil (25735 24520 673728 0) 0 nil])
([nil nil ((1476 . 1482)) nil (25735 24520 673727 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1480) (undo-tree-id3910 . -1) (#(" " 0 1 (fontified t)) . -1481) (undo-tree-id3911 . -1) 1482) nil (25735 24520 673727 0) 0 nil])
([nil nil ((#("        angl" 0 12 (fontified t)) . -1468) (undo-tree-id3909 . -12) 1480) nil (25735 24520 673725 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1467) (undo-tree-id3908 . -1) 1468) nil (25735 24520 673723 0) 0 nil])
([nil nil ((1467 . 1476)) nil (25735 24520 673722 0) 0 nil])
([nil nil ((1476 . 1481)) nil (25735 24520 673722 0) 0 nil])
([nil nil ((1481 . 1484)) nil (25735 24520 673721 0) 0 nil])
([nil nil ((#("        angles =" 0 8 (fontified t) 8 14 (face font-lock-variable-name-face fontified t) 14 16 (fontified t)) . -1468) (undo-tree-id3907 . -16) 1484) nil (25735 24520 673720 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1467) (undo-tree-id3906 . -1) 1468) nil (25735 24520 673719 0) 0 nil])
([nil nil ((1467 . 1476)) nil (25735 24520 673718 0) 0 nil])
([nil nil ((1476 . 1488)) nil (25735 24520 673717 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1563 . 1564) (nil fontified nil 1563 . 1564) (nil fontified nil 1531 . 1563) (nil fontified nil 1521 . 1531) (nil fontified nil 1507 . 1521) (nil fontified nil 1488 . 1507) (1488 . 1564)) nil (25735 24520 673717 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1548) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) 1549) nil (25735 24520 673715 0) 0 nil])
([nil nil ((1548 . 1553)) nil (25735 24520 673713 0) 0 nil])
([nil nil ((1568 . 1577)) nil (25735 24520 673713 0) 0 nil])
([nil nil ((1577 . 1583)) nil (25735 24520 673712 0) 0 nil])
([nil nil ((1577 . 1585) (#("envelo" 0 6 (fontified t)) . -1577) (undo-tree-id3903 . -6) 1583) nil (25735 24520 673711 0) 0 nil])
([nil nil ((1585 . 1591)) nil (25735 24520 673710 0) 0 nil])
([nil nil ((1588 . 1596) (#("env" 0 3 (fontified t)) . -1588) (undo-tree-id3902 . -3) 1591) nil (25735 24520 673709 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1603) (1603 . 1604) (#(")" 0 1 (fontified nil)) . -1603) (1603 . 1604) (1596 . 1604)) nil (25735 24520 673707 0) 0 nil])
([nil nil ((1603 . 1607)) nil (25735 24520 673706 0) 0 nil])
([nil nil ((1603 . 1611) (#("enve" 0 4 (fontified t)) . -1603) (undo-tree-id3901 . -4) 1607) nil (25735 24520 673705 0) 0 nil])
([nil nil ((1612 . 1621)) nil (25735 24520 673704 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1617) (undo-tree-id3900 . -4) 1621) nil (25735 24520 673703 0) 0 nil])
([nil nil ((1617 . 1622)) nil (25735 24520 673702 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1617) (undo-tree-id3895 . -1) (#("n" 0 1 (fontified t)) . -1618) (undo-tree-id3896 . -1) (#("v" 0 1 (fontified t)) . -1619) (undo-tree-id3897 . -1) (#("e" 0 1 (fontified t)) . -1620) (undo-tree-id3898 . -1) (#("l" 0 1 (fontified t)) . -1621) (undo-tree-id3899 . -1) 1622) nil (25735 24520 673701 0) 0 nil])
([nil nil ((1617 . 1627)) nil (25735 24520 673697 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1624) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (#("v" 0 1 (fontified t)) . -1625) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (#("e" 0 1 (fontified t)) . -1626) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) 1627) nil (25735 24520 673690 0) 0 nil])
([nil nil ((1624 . 1628)) nil (25735 24520 673566 0) 0 nil])
([nil nil ((1624 . 1632) (#("enve" 0 4 (fontified t)) . -1624) (undo-tree-id3346 . -4) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -2) (undo-tree-id3412 . -2) (undo-tree-id3413 . -2) (undo-tree-id3414 . -2) (undo-tree-id3415 . -2) (undo-tree-id3416 . -2) (undo-tree-id3417 . -2) (undo-tree-id3418 . -2) (undo-tree-id3419 . -2) (undo-tree-id3420 . -2) (undo-tree-id3421 . -2) (undo-tree-id3422 . -2) (undo-tree-id3423 . -2) (undo-tree-id3424 . -2) (undo-tree-id3425 . -2) (undo-tree-id3426 . -2) (undo-tree-id3427 . -2) (undo-tree-id3428 . -2) (undo-tree-id3429 . -2) (undo-tree-id3430 . -2) (undo-tree-id3431 . -2) (undo-tree-id3432 . -2) (undo-tree-id3433 . -2) (undo-tree-id3434 . -2) (undo-tree-id3435 . -2) (undo-tree-id3436 . -2) (undo-tree-id3437 . -2) (undo-tree-id3438 . -2) (undo-tree-id3439 . -2) (undo-tree-id3440 . -2) (undo-tree-id3441 . -2) (undo-tree-id3442 . -2) (undo-tree-id3443 . -2) (undo-tree-id3444 . -2) (undo-tree-id3445 . -2) (undo-tree-id3446 . -2) (undo-tree-id3447 . -2) (undo-tree-id3448 . -2) (undo-tree-id3449 . -2) (undo-tree-id3450 . -2) (undo-tree-id3451 . -2) (undo-tree-id3452 . -2) (undo-tree-id3453 . -2) (undo-tree-id3454 . -2) (undo-tree-id3455 . -2) (undo-tree-id3456 . -2) (undo-tree-id3457 . -2) (undo-tree-id3458 . -2) (undo-tree-id3459 . -2) (undo-tree-id3460 . -2) (undo-tree-id3461 . -2) (undo-tree-id3462 . -2) (undo-tree-id3463 . -2) (undo-tree-id3464 . -2) (undo-tree-id3465 . -2) (undo-tree-id3466 . -2) (undo-tree-id3467 . -2) (undo-tree-id3468 . -2) (undo-tree-id3469 . -2) (undo-tree-id3470 . -2) (undo-tree-id3471 . -2) (undo-tree-id3472 . -2) (undo-tree-id3473 . -2) (undo-tree-id3474 . -2) (undo-tree-id3475 . -3) (undo-tree-id3476 . -3) (undo-tree-id3477 . -3) (undo-tree-id3478 . -3) (undo-tree-id3479 . -3) (undo-tree-id3480 . -3) (undo-tree-id3481 . -3) (undo-tree-id3482 . -3) (undo-tree-id3483 . -3) (undo-tree-id3484 . -3) (undo-tree-id3485 . -3) (undo-tree-id3486 . -3) (undo-tree-id3487 . -3) (undo-tree-id3488 . -3) (undo-tree-id3489 . -3) (undo-tree-id3490 . -3) (undo-tree-id3491 . -3) (undo-tree-id3492 . -3) (undo-tree-id3493 . -3) (undo-tree-id3494 . -3) (undo-tree-id3495 . -3) (undo-tree-id3496 . -3) (undo-tree-id3497 . -3) (undo-tree-id3498 . -3) (undo-tree-id3499 . -3) (undo-tree-id3500 . -3) (undo-tree-id3501 . -3) (undo-tree-id3502 . -3) (undo-tree-id3503 . -3) (undo-tree-id3504 . -3) (undo-tree-id3505 . -3) (undo-tree-id3506 . -3) (undo-tree-id3507 . -3) (undo-tree-id3508 . -3) (undo-tree-id3509 . -3) (undo-tree-id3510 . -3) (undo-tree-id3511 . -3) (undo-tree-id3512 . -3) (undo-tree-id3513 . -3) (undo-tree-id3514 . -3) (undo-tree-id3515 . -3) (undo-tree-id3516 . -3) (undo-tree-id3517 . -3) (undo-tree-id3518 . -3) (undo-tree-id3519 . -3) (undo-tree-id3520 . -3) (undo-tree-id3521 . -3) (undo-tree-id3522 . -3) (undo-tree-id3523 . -3) (undo-tree-id3524 . -3) (undo-tree-id3525 . -3) (undo-tree-id3526 . -3) (undo-tree-id3527 . -3) (undo-tree-id3528 . -3) (undo-tree-id3529 . -3) (undo-tree-id3530 . -3) (undo-tree-id3531 . -3) (undo-tree-id3532 . -3) (undo-tree-id3533 . -3) (undo-tree-id3534 . -3) (undo-tree-id3535 . -3) (undo-tree-id3536 . -3) (undo-tree-id3537 . -3) (undo-tree-id3538 . -3) (undo-tree-id3539 . -3) (undo-tree-id3540 . -3) (undo-tree-id3541 . -3) (undo-tree-id3542 . -3) (undo-tree-id3543 . -3) (undo-tree-id3544 . -3) (undo-tree-id3545 . -3) (undo-tree-id3546 . -3) (undo-tree-id3547 . -3) (undo-tree-id3548 . -3) (undo-tree-id3549 . -3) (undo-tree-id3550 . -3) (undo-tree-id3551 . -3) (undo-tree-id3552 . -3) (undo-tree-id3553 . -3) (undo-tree-id3554 . -3) (undo-tree-id3555 . -3) (undo-tree-id3556 . -3) (undo-tree-id3557 . -3) (undo-tree-id3558 . -3) (undo-tree-id3559 . -3) (undo-tree-id3560 . -3) (undo-tree-id3561 . -3) (undo-tree-id3562 . -3) (undo-tree-id3563 . -3) (undo-tree-id3564 . -3) (undo-tree-id3565 . -3) (undo-tree-id3566 . -3) (undo-tree-id3567 . -3) (undo-tree-id3568 . -3) (undo-tree-id3569 . -3) (undo-tree-id3570 . -3) (undo-tree-id3571 . -3) (undo-tree-id3572 . -3) (undo-tree-id3573 . -3) (undo-tree-id3574 . -3) (undo-tree-id3575 . -3) (undo-tree-id3576 . -3) (undo-tree-id3577 . -3) (undo-tree-id3578 . -3) (undo-tree-id3579 . -3) (undo-tree-id3580 . -3) (undo-tree-id3581 . 1) (undo-tree-id3582 . -3) (undo-tree-id3583 . -3) (undo-tree-id3584 . -3) (undo-tree-id3585 . -3) (undo-tree-id3586 . -3) (undo-tree-id3587 . -3) (undo-tree-id3588 . -3) (undo-tree-id3589 . -3) (undo-tree-id3590 . -3) (undo-tree-id3591 . -3) (undo-tree-id3592 . -3) (undo-tree-id3593 . -3) (undo-tree-id3594 . -3) (undo-tree-id3595 . -3) (undo-tree-id3596 . -3) (undo-tree-id3597 . -3) (undo-tree-id3598 . -3) (undo-tree-id3599 . -3) (undo-tree-id3600 . -3) (undo-tree-id3601 . -3) (undo-tree-id3602 . -3) (undo-tree-id3603 . -3) (undo-tree-id3604 . -4) (undo-tree-id3605 . -4) (undo-tree-id3606 . -4) (undo-tree-id3607 . -4) (undo-tree-id3608 . -4) (undo-tree-id3609 . -4) (undo-tree-id3610 . -4) (undo-tree-id3611 . -4) (undo-tree-id3612 . -4) (undo-tree-id3613 . -4) (undo-tree-id3614 . -4) (undo-tree-id3615 . -4) (undo-tree-id3616 . -4) (undo-tree-id3617 . -4) (undo-tree-id3618 . -4) (undo-tree-id3619 . -4) (undo-tree-id3620 . -4) (undo-tree-id3621 . -4) (undo-tree-id3622 . -4) (undo-tree-id3623 . -4) (undo-tree-id3624 . -4) (undo-tree-id3625 . -4) (undo-tree-id3626 . -4) (undo-tree-id3627 . -4) (undo-tree-id3628 . -4) (undo-tree-id3629 . -4) (undo-tree-id3630 . -4) (undo-tree-id3631 . -4) (undo-tree-id3632 . -4) (undo-tree-id3633 . -4) (undo-tree-id3634 . -4) (undo-tree-id3635 . -4) (undo-tree-id3636 . -4) (undo-tree-id3637 . -4) (undo-tree-id3638 . -4) (undo-tree-id3639 . -4) (undo-tree-id3640 . -4) (undo-tree-id3641 . -4) (undo-tree-id3642 . -4) (undo-tree-id3643 . -4) (undo-tree-id3644 . -4) (undo-tree-id3645 . -4) (undo-tree-id3646 . -4) 1628) nil (25735 24520 673557 0) 0 nil])
([nil nil ((1632 . 1633)) nil (25735 24520 673395 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1603) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (#("n" 0 1 (fontified t)) . -1604) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (#("v" 0 1 (fontified t)) . -1605) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (#("e" 0 1 (fontified t)) . -1606) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (#("l" 0 1 (fontified t)) . -1607) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (#("o" 0 1 (fontified t)) . -1608) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (#("p" 0 1 (fontified t)) . -1609) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (#("e" 0 1 (fontified t)) . -1610) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) 1611 (t 25735 24520 678895 191000)) nil (25735 24588 174239 0) 0 nil])
([nil nil ((1603 . 1612)) nil (25735 24588 174229 0) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -1607) (undo-tree-id4047 . -1) (#("h" 0 1 (fontified t)) . -1608) (undo-tree-id4048 . -1) (#("a" 0 1 (fontified t)) . -1609) (undo-tree-id4049 . -1) (#("p" 0 1 (fontified t)) . -1610) (undo-tree-id4050 . -1) (#("e" 0 1 (fontified t)) . -1611) (undo-tree-id4051 . -1) 1612) nil (25735 24588 174227 0) 0 nil])
([nil nil ((1607 . 1612)) nil (25735 24588 174214 0) 0 nil])
([nil nil ((1633 . 1635) (t 25735 24588 178994 7000)) nil (25735 26447 155550 0) 0 nil])
([nil nil ((1635 . 1643)) nil (25735 26447 155549 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . -1639) (undo-tree-id4096 . -1) (#("l" 0 1 (face font-lock-function-name-face fontified t)) . -1640) (undo-tree-id4097 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -1641) (undo-tree-id4098 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -1642) (undo-tree-id4099 . -1) 1643) nil (25735 26447 155548 0) 0 nil])
([nil nil ((1639 . 1643)) nil (25735 26447 155546 0) 0 nil])
([nil nil ((#("def fill" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 8 (face font-lock-function-name-face fontified t)) . -1635) (undo-tree-id4095 . -8) 1643) nil (25735 26447 155545 0) 0 nil])
([nil nil ((1635 . 1643)) nil (25735 26447 155544 0) 0 nil])
([nil nil ((#("def fill" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 8 (face font-lock-function-name-face fontified t)) . -1635) (undo-tree-id4094 . -8) 1643) nil (25735 26447 155543 0) 0 nil])
([nil nil ((1635 . 1639)) nil (25735 26447 155542 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1638) (undo-tree-id4093 . -1) 1639) nil (25735 26447 155542 0) 0 nil])
([nil nil ((#("dfe" 0 3 (fontified t)) . -1635) (undo-tree-id4092 . -3) 1638) nil (25735 26447 155541 0) 0 nil])
([nil nil ((1635 . 1639)) nil (25735 26447 155540 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1635) (undo-tree-id4088 . -1) (#("e" 0 1 (fontified t)) . -1636) (undo-tree-id4089 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -1637) (undo-tree-id4090 . -1) (#(" " 0 1 (fontified t)) . -1638) (undo-tree-id4091 . -1) 1639) nil (25735 26447 155539 0) 0 nil])
([nil nil ((1635 . 1639)) nil (25735 26447 155536 0) 0 nil])
([nil nil ((#("def " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -1635) (undo-tree-id4087 . -4) 1639) nil (25735 26447 155535 0) 0 nil])
([nil nil ((1635 . 1643)) nil (25735 26447 155534 0) 0 nil])
([nil nil ((#("def fill" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 8 (face font-lock-function-name-face fontified t)) . -1635) (undo-tree-id4086 . -8) 1643) nil (25735 26447 155533 0) 0 nil])
([nil nil ((1635 . 1639)) nil (25735 26447 155532 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1635) (undo-tree-id4082 . -1) (#("e" 0 1 (fontified t)) . -1636) (undo-tree-id4083 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -1637) (undo-tree-id4084 . -1) (#(" " 0 1 (fontified t)) . -1638) (undo-tree-id4085 . -1) 1639) nil (25735 26447 155531 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1651) (1651 . 1652) (#(")" 0 1 (fontified nil)) . -1651) (1651 . 1652) (1635 . 1652)) nil (25735 26447 155528 0) 0 nil])
([nil nil ((1651 . 1656)) nil (25735 26447 155527 0) 0 nil])
([nil nil ((#("def box_to_mesh(box, " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 15 (face font-lock-function-name-face fontified t) 15 21 (fontified t)) . -1635) (undo-tree-id4081 . -21) 1656) nil (25735 26447 155526 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1635) (undo-tree-id4078 . -1) (undo-tree-id4079 . 1) (undo-tree-id4080 . -1) 1636) nil (25735 26447 155525 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2385 . 2386) (nil fontified nil 1635 . 2386) (1635 . 2386)) nil (25735 26447 155523 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-function-name-face fontified t)) . -1648) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (#("u" 0 1 (face font-lock-function-name-face fontified t)) . -1649) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -1650) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -1651) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (#("y" 0 1 (face font-lock-function-name-face fontified t)) . -1652) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) 1653) nil (25735 26447 155521 0) 0 nil])
([nil nil ((1648 . 1652)) nil (25735 26447 155492 0) 0 nil])
([nil nil ((1708 . 1713)) nil (25735 26447 155492 0) 0 nil])
([nil nil ((1708 . 1713)) nil (25735 26447 155491 0) 0 nil])
([nil nil ((1713 . 1734)) nil (25735 26447 155491 0) 0 nil])
([nil nil ((1734 . 1741)) nil (25735 26447 155490 0) 0 nil])
([nil nil ((1741 . 1747)) nil (25735 26447 155489 0) 0 nil])
([nil nil ((1747 . 1752)) nil (25735 26447 155488 0) 0 nil])
([nil nil ((1664 . 1669)) nil (25735 26447 155485 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-function-name-face fontified t)) . -1639) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -1640) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -1641) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -1642) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1643) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) 1644 (t 25735 26447 160786 734000)) nil (25735 26482 25651 0) 0 nil])
([nil nil ((1639 . 1643)) nil (25735 26482 25369 0) 0 nil])
([nil nil ((#(" # Create a Path object from the shape
    path = Path(np.column_stack(shape.exterior.xy))

    # Check which points are inside the shape
    grid = path.contains_points(points)

    # Reshape the result to the original grid shape
    grid = grid.reshape((size, size))" 0 1 (fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t) 3 39 (face font-lock-comment-face fontified t) 39 43 (fontified t) 43 47 (face font-lock-variable-name-face fontified t) 47 96 (fontified t) 96 98 (face font-lock-comment-delimiter-face fontified t) 98 138 (face font-lock-comment-face fontified t) 138 142 (fontified t) 142 146 (face font-lock-variable-name-face fontified t) 146 183 (fontified t) 183 185 (face font-lock-comment-delimiter-face fontified t) 185 231 (face font-lock-comment-face fontified t) 231 235 (fontified t) 235 239 (face font-lock-variable-name-face fontified t) 239 268 (fontified t)) . -2152) (undo-tree-id5741 . -268) (undo-tree-id5742 . 1) (undo-tree-id5743 . -268) (undo-tree-id5744 . 14) (undo-tree-id5745 . -255) (undo-tree-id5746 . -268) 2420 (t 25735 26482 31032 427000)) nil (25735 26529 807853 0) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -2149) (undo-tree-id5739 . -3) (undo-tree-id5740 . -3) 2152) nil (25735 26529 807849 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2147) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (#("
" 0 1 (fontified t)) . -2148) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) 2149) nil (25735 26529 807847 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -2160) (undo-tree-id5731 . -1) (#("r" 0 1 (fontified t)) . -2161) (undo-tree-id5732 . -1) (#("i" 0 1 (fontified t)) . -2162) (undo-tree-id5733 . -1) (#("d" 0 1 (fontified t)) . -2163) (undo-tree-id5734 . -1) 2164) nil (25735 26529 807844 0) 0 nil])
([nil nil ((2160 . 2166)) nil (25735 26529 807841 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2164) (undo-tree-id5381 . -1) (undo-tree-id5382 . -1) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) (undo-tree-id5472 . -1) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . -1) (undo-tree-id5525 . -1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) (undo-tree-id5531 . -1) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (undo-tree-id5534 . -1) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (undo-tree-id5539 . -1) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) (undo-tree-id5549 . -1) (undo-tree-id5550 . -1) (undo-tree-id5551 . -1) (undo-tree-id5552 . -1) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (#("t" 0 1 (fontified t)) . -2165) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) 2166) nil (25735 26529 807833 0) 0 nil])
([nil nil ((2164 . 2165)) nil (25735 26529 807680 0) 0 nil])
([nil nil ((2160 . 2166) (#("point" 0 5 (fontified t)) . -2160) (undo-tree-id4654 . -5) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -2) (undo-tree-id4669 . -2) (undo-tree-id4670 . -2) (undo-tree-id4671 . -2) (undo-tree-id4672 . -2) (undo-tree-id4673 . -2) (undo-tree-id4674 . -2) (undo-tree-id4675 . -2) (undo-tree-id4676 . -2) (undo-tree-id4677 . -2) (undo-tree-id4678 . -2) (undo-tree-id4679 . -2) (undo-tree-id4680 . -2) (undo-tree-id4681 . -2) (undo-tree-id4682 . -2) (undo-tree-id4683 . -2) (undo-tree-id4684 . -2) (undo-tree-id4685 . -2) (undo-tree-id4686 . -2) (undo-tree-id4687 . -2) (undo-tree-id4688 . -2) (undo-tree-id4689 . -2) (undo-tree-id4690 . -2) (undo-tree-id4691 . -2) (undo-tree-id4692 . -2) (undo-tree-id4693 . -2) (undo-tree-id4694 . -2) (undo-tree-id4695 . -2) (undo-tree-id4696 . -2) (undo-tree-id4697 . -2) (undo-tree-id4698 . -2) (undo-tree-id4699 . -2) (undo-tree-id4700 . -2) (undo-tree-id4701 . -2) (undo-tree-id4702 . -2) (undo-tree-id4703 . -2) (undo-tree-id4704 . -2) (undo-tree-id4705 . -2) (undo-tree-id4706 . -2) (undo-tree-id4707 . -2) (undo-tree-id4708 . -2) (undo-tree-id4709 . -2) (undo-tree-id4710 . -2) (undo-tree-id4711 . -2) (undo-tree-id4712 . -2) (undo-tree-id4713 . -2) (undo-tree-id4714 . -2) (undo-tree-id4715 . -2) (undo-tree-id4716 . -2) (undo-tree-id4717 . -2) (undo-tree-id4718 . -2) (undo-tree-id4719 . -2) (undo-tree-id4720 . -2) (undo-tree-id4721 . -2) (undo-tree-id4722 . -2) (undo-tree-id4723 . -2) (undo-tree-id4724 . -2) (undo-tree-id4725 . -2) (undo-tree-id4726 . -2) (undo-tree-id4727 . -2) (undo-tree-id4728 . -2) (undo-tree-id4729 . -2) (undo-tree-id4730 . -2) (undo-tree-id4731 . -2) (undo-tree-id4732 . -3) (undo-tree-id4733 . -3) (undo-tree-id4734 . -3) (undo-tree-id4735 . -3) (undo-tree-id4736 . -3) (undo-tree-id4737 . -3) (undo-tree-id4738 . -3) (undo-tree-id4739 . -3) (undo-tree-id4740 . -3) (undo-tree-id4741 . -3) (undo-tree-id4742 . -3) (undo-tree-id4743 . -3) (undo-tree-id4744 . -3) (undo-tree-id4745 . -3) (undo-tree-id4746 . -3) (undo-tree-id4747 . -3) (undo-tree-id4748 . -3) (undo-tree-id4749 . -3) (undo-tree-id4750 . -3) (undo-tree-id4751 . -3) (undo-tree-id4752 . -3) (undo-tree-id4753 . -3) (undo-tree-id4754 . -4) (undo-tree-id4755 . -4) (undo-tree-id4756 . -4) (undo-tree-id4757 . -4) (undo-tree-id4758 . -4) (undo-tree-id4759 . -4) (undo-tree-id4760 . -4) (undo-tree-id4761 . -4) (undo-tree-id4762 . -4) (undo-tree-id4763 . -4) (undo-tree-id4764 . -4) (undo-tree-id4765 . -4) (undo-tree-id4766 . -4) (undo-tree-id4767 . -4) (undo-tree-id4768 . -4) (undo-tree-id4769 . -4) (undo-tree-id4770 . -4) (undo-tree-id4771 . -4) (undo-tree-id4772 . -4) (undo-tree-id4773 . -4) (undo-tree-id4774 . -4) (undo-tree-id4775 . -4) (undo-tree-id4776 . -4) (undo-tree-id4777 . -4) (undo-tree-id4778 . -4) (undo-tree-id4779 . -4) (undo-tree-id4780 . -4) (undo-tree-id4781 . -4) (undo-tree-id4782 . -4) (undo-tree-id4783 . -4) (undo-tree-id4784 . -4) (undo-tree-id4785 . -4) (undo-tree-id4786 . -4) (undo-tree-id4787 . -4) (undo-tree-id4788 . -4) (undo-tree-id4789 . -4) (undo-tree-id4790 . -4) (undo-tree-id4791 . -4) (undo-tree-id4792 . -4) (undo-tree-id4793 . -4) (undo-tree-id4794 . -4) (undo-tree-id4795 . -4) (undo-tree-id4796 . -4) (undo-tree-id4797 . -4) (undo-tree-id4798 . -4) (undo-tree-id4799 . -4) (undo-tree-id4800 . -4) (undo-tree-id4801 . -4) (undo-tree-id4802 . -4) (undo-tree-id4803 . -4) (undo-tree-id4804 . -4) (undo-tree-id4805 . -4) (undo-tree-id4806 . -4) (undo-tree-id4807 . -4) (undo-tree-id4808 . -4) (undo-tree-id4809 . -4) (undo-tree-id4810 . -4) (undo-tree-id4811 . -4) (undo-tree-id4812 . -4) (undo-tree-id4813 . -4) (undo-tree-id4814 . -4) (undo-tree-id4815 . -4) (undo-tree-id4816 . -4) (undo-tree-id4817 . -4) (undo-tree-id4818 . -4) (undo-tree-id4819 . -4) (undo-tree-id4820 . -4) (undo-tree-id4821 . -4) (undo-tree-id4822 . -4) (undo-tree-id4823 . -4) (undo-tree-id4824 . -4) (undo-tree-id4825 . -4) (undo-tree-id4826 . -4) (undo-tree-id4827 . -4) (undo-tree-id4828 . -4) (undo-tree-id4829 . -4) (undo-tree-id4830 . -4) (undo-tree-id4831 . -4) (undo-tree-id4832 . -4) (undo-tree-id4833 . -4) (undo-tree-id4834 . -4) (undo-tree-id4835 . -4) (undo-tree-id4836 . -4) (undo-tree-id4837 . -4) (undo-tree-id4838 . -4) (undo-tree-id4839 . -4) (undo-tree-id4840 . -4) (undo-tree-id4841 . -4) (undo-tree-id4842 . -4) (undo-tree-id4843 . -4) (undo-tree-id4844 . -4) (undo-tree-id4845 . -4) (undo-tree-id4846 . -4) (undo-tree-id4847 . -4) (undo-tree-id4848 . -4) (undo-tree-id4849 . -4) (undo-tree-id4850 . -4) (undo-tree-id4851 . -4) (undo-tree-id4852 . -4) (undo-tree-id4853 . -4) (undo-tree-id4854 . -4) (undo-tree-id4855 . -4) (undo-tree-id4856 . -4) (undo-tree-id4857 . -4) (undo-tree-id4858 . -4) (undo-tree-id4859 . -4) (undo-tree-id4860 . -4) (undo-tree-id4861 . -4) (undo-tree-id4862 . -4) (undo-tree-id4863 . -4) (undo-tree-id4864 . -4) (undo-tree-id4865 . -4) (undo-tree-id4866 . -4) (undo-tree-id4867 . -4) (undo-tree-id4868 . -4) (undo-tree-id4869 . -4) (undo-tree-id4870 . -4) (undo-tree-id4871 . -4) (undo-tree-id4872 . -4) (undo-tree-id4873 . -4) (undo-tree-id4874 . -4) (undo-tree-id4875 . -4) (undo-tree-id4876 . -4) (undo-tree-id4877 . -4) (undo-tree-id4878 . -4) (undo-tree-id4879 . -4) (undo-tree-id4880 . -4) (undo-tree-id4881 . -4) (undo-tree-id4882 . -4) (undo-tree-id4883 . -4) (undo-tree-id4884 . -4) (undo-tree-id4885 . -4) (undo-tree-id4886 . -4) (undo-tree-id4887 . -4) (undo-tree-id4888 . -4) (undo-tree-id4889 . -4) (undo-tree-id4890 . -4) (undo-tree-id4891 . -4) (undo-tree-id4892 . -4) (undo-tree-id4893 . -4) (undo-tree-id4894 . -4) (undo-tree-id4895 . -4) (undo-tree-id4896 . -4) (undo-tree-id4897 . -4) (undo-tree-id4898 . -4) (undo-tree-id4899 . -4) (undo-tree-id4900 . -4) (undo-tree-id4901 . -4) (undo-tree-id4902 . -4) (undo-tree-id4903 . -4) (undo-tree-id4904 . -4) (undo-tree-id4905 . -4) (undo-tree-id4906 . -4) (undo-tree-id4907 . -4) (undo-tree-id4908 . -4) (undo-tree-id4909 . -4) (undo-tree-id4910 . -4) (undo-tree-id4911 . -4) (undo-tree-id4912 . -4) (undo-tree-id4913 . -4) (undo-tree-id4914 . -4) (undo-tree-id4915 . -4) (undo-tree-id4916 . -4) (undo-tree-id4917 . -4) (undo-tree-id4918 . -4) (undo-tree-id4919 . -4) (undo-tree-id4920 . -4) (undo-tree-id4921 . -4) (undo-tree-id4922 . -4) (undo-tree-id4923 . -4) (undo-tree-id4924 . -4) (undo-tree-id4925 . -4) (undo-tree-id4926 . -4) (undo-tree-id4927 . -4) (undo-tree-id4928 . -4) (undo-tree-id4929 . -4) (undo-tree-id4930 . -4) (undo-tree-id4931 . -4) (undo-tree-id4932 . -4) (undo-tree-id4933 . -4) (undo-tree-id4934 . -4) (undo-tree-id4935 . -4) (undo-tree-id4936 . -4) (undo-tree-id4937 . -4) (undo-tree-id4938 . -4) (undo-tree-id4939 . -4) (undo-tree-id4940 . -4) (undo-tree-id4941 . -4) (undo-tree-id4942 . -4) (undo-tree-id4943 . -4) (undo-tree-id4944 . -4) (undo-tree-id4945 . -4) (undo-tree-id4946 . -4) (undo-tree-id4947 . -4) (undo-tree-id4948 . -4) (undo-tree-id4949 . -4) (undo-tree-id4950 . -4) (undo-tree-id4951 . -4) (undo-tree-id4952 . -4) (undo-tree-id4953 . -4) (undo-tree-id4954 . -4) (undo-tree-id4955 . -4) (undo-tree-id4956 . -4) (undo-tree-id4957 . -4) (undo-tree-id4958 . -4) (undo-tree-id4959 . -4) (undo-tree-id4960 . -4) (undo-tree-id4961 . -4) (undo-tree-id4962 . -4) (undo-tree-id4963 . -4) (undo-tree-id4964 . -4) (undo-tree-id4965 . -4) (undo-tree-id4966 . -4) (undo-tree-id4967 . -4) (undo-tree-id4968 . -4) (undo-tree-id4969 . -4) (undo-tree-id4970 . -4) (undo-tree-id4971 . -4) (undo-tree-id4972 . -4) (undo-tree-id4973 . -4) (undo-tree-id4974 . -4) (undo-tree-id4975 . -4) (undo-tree-id4976 . -4) (undo-tree-id4977 . -4) (undo-tree-id4978 . -4) (undo-tree-id4979 . -4) (undo-tree-id4980 . -4) (undo-tree-id4981 . -4) (undo-tree-id4982 . -4) (undo-tree-id4983 . -4) (undo-tree-id4984 . -4) (undo-tree-id4985 . -4) (undo-tree-id4986 . -4) (undo-tree-id4987 . -4) (undo-tree-id4988 . -4) (undo-tree-id4989 . -4) (undo-tree-id4990 . -4) (undo-tree-id4991 . -4) (undo-tree-id4992 . -4) (undo-tree-id4993 . -4) (undo-tree-id4994 . -4) (undo-tree-id4995 . -4) (undo-tree-id4996 . -4) (undo-tree-id4997 . -4) (undo-tree-id4998 . -4) (undo-tree-id4999 . -4) (undo-tree-id5000 . -4) (undo-tree-id5001 . -4) (undo-tree-id5002 . -4) (undo-tree-id5003 . -4) (undo-tree-id5004 . -4) (undo-tree-id5005 . -4) (undo-tree-id5006 . -4) (undo-tree-id5007 . -4) (undo-tree-id5008 . -4) (undo-tree-id5009 . -4) (undo-tree-id5010 . -4) (undo-tree-id5011 . -4) (undo-tree-id5012 . -4) (undo-tree-id5013 . -4) (undo-tree-id5014 . -4) (undo-tree-id5015 . -4) (undo-tree-id5016 . -4) (undo-tree-id5017 . -4) (undo-tree-id5018 . -4) (undo-tree-id5019 . -4) (undo-tree-id5020 . -4) (undo-tree-id5021 . -4) (undo-tree-id5022 . -4) (undo-tree-id5023 . -4) (undo-tree-id5024 . -4) (undo-tree-id5025 . -4) (undo-tree-id5026 . -4) (undo-tree-id5027 . -4) (undo-tree-id5028 . -4) (undo-tree-id5029 . -4) (undo-tree-id5030 . -4) (undo-tree-id5031 . -4) (undo-tree-id5032 . -4) (undo-tree-id5033 . -4) (undo-tree-id5034 . -4) (undo-tree-id5035 . -4) (undo-tree-id5036 . -4) (undo-tree-id5037 . -4) (undo-tree-id5038 . -4) (undo-tree-id5039 . -4) (undo-tree-id5040 . -4) (undo-tree-id5041 . -4) (undo-tree-id5042 . -4) (undo-tree-id5043 . -4) (undo-tree-id5044 . -4) (undo-tree-id5045 . -4) (undo-tree-id5046 . -4) (undo-tree-id5047 . -4) (undo-tree-id5048 . -4) (undo-tree-id5049 . -4) (undo-tree-id5050 . -4) (undo-tree-id5051 . -4) (undo-tree-id5052 . -4) (undo-tree-id5053 . -4) (undo-tree-id5054 . -4) (undo-tree-id5055 . -4) (undo-tree-id5056 . -4) (undo-tree-id5057 . -4) (undo-tree-id5058 . -4) (undo-tree-id5059 . -4) (undo-tree-id5060 . -4) (undo-tree-id5061 . -4) (undo-tree-id5062 . -4) (undo-tree-id5063 . -4) (undo-tree-id5064 . -4) (undo-tree-id5065 . -4) (undo-tree-id5066 . -4) (undo-tree-id5067 . -4) (undo-tree-id5068 . -4) (undo-tree-id5069 . -4) (undo-tree-id5070 . -4) (undo-tree-id5071 . -4) (undo-tree-id5072 . -4) (undo-tree-id5073 . -4) (undo-tree-id5074 . -4) (undo-tree-id5075 . -4) (undo-tree-id5076 . -4) (undo-tree-id5077 . -4) (undo-tree-id5078 . -4) (undo-tree-id5079 . -4) (undo-tree-id5080 . -4) (undo-tree-id5081 . -4) (undo-tree-id5082 . -4) (undo-tree-id5083 . -4) (undo-tree-id5084 . -4) (undo-tree-id5085 . -4) (undo-tree-id5086 . -4) (undo-tree-id5087 . -4) (undo-tree-id5088 . -4) (undo-tree-id5089 . -4) (undo-tree-id5090 . -4) (undo-tree-id5091 . -4) (undo-tree-id5092 . -4) (undo-tree-id5093 . -4) (undo-tree-id5094 . -4) (undo-tree-id5095 . -4) (undo-tree-id5096 . -4) (undo-tree-id5097 . -4) (undo-tree-id5098 . -4) (undo-tree-id5099 . -4) (undo-tree-id5100 . -4) (undo-tree-id5101 . -5) (undo-tree-id5102 . -5) (undo-tree-id5103 . -5) (undo-tree-id5104 . -5) (undo-tree-id5105 . -5) (undo-tree-id5106 . -5) (undo-tree-id5107 . -5) (undo-tree-id5108 . -5) (undo-tree-id5109 . -5) (undo-tree-id5110 . -5) (undo-tree-id5111 . -5) (undo-tree-id5112 . -5) (undo-tree-id5113 . -5) (undo-tree-id5114 . -5) (undo-tree-id5115 . -5) (undo-tree-id5116 . -5) (undo-tree-id5117 . -5) (undo-tree-id5118 . -5) (undo-tree-id5119 . -5) (undo-tree-id5120 . -5) (undo-tree-id5121 . -5) (undo-tree-id5122 . -5) (undo-tree-id5123 . -5) (undo-tree-id5124 . -5) (undo-tree-id5125 . -5) (undo-tree-id5126 . -5) (undo-tree-id5127 . -5) (undo-tree-id5128 . -5) (undo-tree-id5129 . -5) (undo-tree-id5130 . -5) (undo-tree-id5131 . -5) (undo-tree-id5132 . -5) (undo-tree-id5133 . -5) (undo-tree-id5134 . -5) (undo-tree-id5135 . -5) (undo-tree-id5136 . -5) (undo-tree-id5137 . -5) (undo-tree-id5138 . -5) (undo-tree-id5139 . -5) (undo-tree-id5140 . -5) (undo-tree-id5141 . -5) (undo-tree-id5142 . -5) (undo-tree-id5143 . -5) (undo-tree-id5144 . -5) (undo-tree-id5145 . -5) (undo-tree-id5146 . -5) (undo-tree-id5147 . -5) (undo-tree-id5148 . -5) (undo-tree-id5149 . -5) (undo-tree-id5150 . -5) (undo-tree-id5151 . -5) (undo-tree-id5152 . -5) (undo-tree-id5153 . -5) (undo-tree-id5154 . -5) (undo-tree-id5155 . -5) (undo-tree-id5156 . -5) (undo-tree-id5157 . -5) (undo-tree-id5158 . -5) (undo-tree-id5159 . -5) (undo-tree-id5160 . -5) (undo-tree-id5161 . -5) (undo-tree-id5162 . -5) (undo-tree-id5163 . -5) (undo-tree-id5164 . -5) (undo-tree-id5165 . -5) (undo-tree-id5166 . -5) (undo-tree-id5167 . -5) (undo-tree-id5168 . -5) (undo-tree-id5169 . -5) (undo-tree-id5170 . -5) (undo-tree-id5171 . -5) (undo-tree-id5172 . -5) (undo-tree-id5173 . -5) (undo-tree-id5174 . -5) (undo-tree-id5175 . -5) (undo-tree-id5176 . -5) (undo-tree-id5177 . -5) (undo-tree-id5178 . -5) (undo-tree-id5179 . -5) (undo-tree-id5180 . -5) (undo-tree-id5181 . -5) (undo-tree-id5182 . -5) (undo-tree-id5183 . -5) (undo-tree-id5184 . -5) (undo-tree-id5185 . -5) (undo-tree-id5186 . -5) (undo-tree-id5187 . -5) (undo-tree-id5188 . -5) (undo-tree-id5189 . -5) (undo-tree-id5190 . -5) (undo-tree-id5191 . -5) (undo-tree-id5192 . -5) (undo-tree-id5193 . -5) (undo-tree-id5194 . -5) (undo-tree-id5195 . -5) (undo-tree-id5196 . -5) (undo-tree-id5197 . -5) (undo-tree-id5198 . -5) (undo-tree-id5199 . -5) (undo-tree-id5200 . -5) (undo-tree-id5201 . -5) (undo-tree-id5202 . -5) (undo-tree-id5203 . -5) (undo-tree-id5204 . -5) (undo-tree-id5205 . -5) (undo-tree-id5206 . -5) (undo-tree-id5207 . -5) (undo-tree-id5208 . -5) (undo-tree-id5209 . -5) (undo-tree-id5210 . -5) (undo-tree-id5211 . -5) (undo-tree-id5212 . -5) (undo-tree-id5213 . -5) (undo-tree-id5214 . -5) (undo-tree-id5215 . -5) (undo-tree-id5216 . -5) (undo-tree-id5217 . -5) (undo-tree-id5218 . -5) (undo-tree-id5219 . -5) (undo-tree-id5220 . -5) (undo-tree-id5221 . -5) (undo-tree-id5222 . -5) (undo-tree-id5223 . -5) (undo-tree-id5224 . -5) (undo-tree-id5225 . -5) (undo-tree-id5226 . -5) (undo-tree-id5227 . -5) (undo-tree-id5228 . -5) (undo-tree-id5229 . -5) (undo-tree-id5230 . -5) (undo-tree-id5231 . -5) (undo-tree-id5232 . -5) (undo-tree-id5233 . -5) (undo-tree-id5234 . -5) (undo-tree-id5235 . -5) (undo-tree-id5236 . -5) (undo-tree-id5237 . -5) (undo-tree-id5238 . -5) (undo-tree-id5239 . -5) (undo-tree-id5240 . -5) (undo-tree-id5241 . -5) (undo-tree-id5242 . -5) (undo-tree-id5243 . -5) (undo-tree-id5244 . -5) (undo-tree-id5245 . -5) (undo-tree-id5246 . -5) (undo-tree-id5247 . -5) (undo-tree-id5248 . -5) (undo-tree-id5249 . -5) (undo-tree-id5250 . -5) (undo-tree-id5251 . -5) (undo-tree-id5252 . -5) (undo-tree-id5253 . -5) (undo-tree-id5254 . -5) (undo-tree-id5255 . -5) (undo-tree-id5256 . -5) (undo-tree-id5257 . -5) (undo-tree-id5258 . -5) (undo-tree-id5259 . -5) (undo-tree-id5260 . -5) (undo-tree-id5261 . -5) (undo-tree-id5262 . -5) (undo-tree-id5263 . -5) (undo-tree-id5264 . -5) (undo-tree-id5265 . -5) (undo-tree-id5266 . -5) (undo-tree-id5267 . -5) (undo-tree-id5268 . -5) (undo-tree-id5269 . -5) (undo-tree-id5270 . -5) (undo-tree-id5271 . -5) (undo-tree-id5272 . -5) (undo-tree-id5273 . -5) (undo-tree-id5274 . -5) (undo-tree-id5275 . -5) (undo-tree-id5276 . -5) (undo-tree-id5277 . -5) (undo-tree-id5278 . -5) (undo-tree-id5279 . -5) (undo-tree-id5280 . -5) (undo-tree-id5281 . -5) (undo-tree-id5282 . -5) (undo-tree-id5283 . -5) (undo-tree-id5284 . -5) (undo-tree-id5285 . -5) (undo-tree-id5286 . -5) (undo-tree-id5287 . -5) (undo-tree-id5288 . -5) (undo-tree-id5289 . -5) (undo-tree-id5290 . -5) (undo-tree-id5291 . -5) (undo-tree-id5292 . -5) (undo-tree-id5293 . -5) (undo-tree-id5294 . -5) (undo-tree-id5295 . -5) (undo-tree-id5296 . -5) (undo-tree-id5297 . -5) (undo-tree-id5298 . -5) (undo-tree-id5299 . -5) (undo-tree-id5300 . -5) (undo-tree-id5301 . -5) (undo-tree-id5302 . -5) (undo-tree-id5303 . -5) (undo-tree-id5304 . -5) (undo-tree-id5305 . -5) (undo-tree-id5306 . -5) (undo-tree-id5307 . -5) (undo-tree-id5308 . -5) (undo-tree-id5309 . -5) (undo-tree-id5310 . -5) (undo-tree-id5311 . -5) (undo-tree-id5312 . -5) (undo-tree-id5313 . -5) (undo-tree-id5314 . -5) (undo-tree-id5315 . -5) (undo-tree-id5316 . -5) (undo-tree-id5317 . -5) (undo-tree-id5318 . -5) (undo-tree-id5319 . -5) (undo-tree-id5320 . -5) (undo-tree-id5321 . -5) (undo-tree-id5322 . -5) (undo-tree-id5323 . -5) (undo-tree-id5324 . -5) (undo-tree-id5325 . -5) (undo-tree-id5326 . -5) (undo-tree-id5327 . -5) (undo-tree-id5328 . -5) (undo-tree-id5329 . -5) (undo-tree-id5330 . -5) (undo-tree-id5331 . -5) (undo-tree-id5332 . -5) (undo-tree-id5333 . -5) (undo-tree-id5334 . -5) (undo-tree-id5335 . -5) (undo-tree-id5336 . -5) (undo-tree-id5337 . -5) (undo-tree-id5338 . -5) (undo-tree-id5339 . -5) (undo-tree-id5340 . -5) (undo-tree-id5341 . -5) (undo-tree-id5342 . -5) (undo-tree-id5343 . -5) (undo-tree-id5344 . -5) (undo-tree-id5345 . -5) (undo-tree-id5346 . -5) (undo-tree-id5347 . -5) (undo-tree-id5348 . -5) (undo-tree-id5349 . -5) (undo-tree-id5350 . -5) (undo-tree-id5351 . -5) (undo-tree-id5352 . -5) (undo-tree-id5353 . -5) (undo-tree-id5354 . -5) (undo-tree-id5355 . -5) (undo-tree-id5356 . -5) (undo-tree-id5357 . -5) (undo-tree-id5358 . -5) (undo-tree-id5359 . -5) (undo-tree-id5360 . -5) (undo-tree-id5361 . -5) (undo-tree-id5362 . -5) (undo-tree-id5363 . -5) (undo-tree-id5364 . -5) (undo-tree-id5365 . -5) (undo-tree-id5366 . -5) (undo-tree-id5367 . -5) (undo-tree-id5368 . -5) (undo-tree-id5369 . -5) (undo-tree-id5370 . -5) (undo-tree-id5371 . -5) (undo-tree-id5372 . -5) (undo-tree-id5373 . -5) (undo-tree-id5374 . -5) (undo-tree-id5375 . -5) (undo-tree-id5376 . -5) (undo-tree-id5377 . -5) (undo-tree-id5378 . -5) (undo-tree-id5379 . -5) (undo-tree-id5380 . -5) 2165) nil (25735 26529 807661 0) 0 nil])
([nil nil ((2166 . 2168) (t 25735 26529 813105 73000)) nil (25735 26704 606029 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2656 . 2657) (nil fontified nil 2168 . 2657) (2168 . 2657)) nil (25735 26704 606028 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -2197) (undo-tree-id5758 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2198) (undo-tree-id5759 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -2199) (undo-tree-id5760 . -1) 2200) nil (25735 26704 606027 0) 0 nil])
([nil nil ((2197 . 2198)) nil (25735 26704 606025 0) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-string-face fontified t)) . -2197) (undo-tree-id5757 . -1) 2198) nil (25735 26704 606024 0) 0 nil])
([nil nil ((2197 . 2202)) nil (25735 26704 606023 0) 0 nil])
([nil nil ((147 . 148)) nil (25735 26704 606022 0) 0 nil])
([nil nil ((148 . 157)) nil (25735 26704 606022 0) 0 nil])
([nil nil ((153 . 163) (#("matp" 0 4 (fontified t)) . -153) (undo-tree-id5756 . -4) 157) nil (25735 26704 606021 0) 0 nil])
([nil nil ((163 . 166)) nil (25735 26704 606020 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -163) (undo-tree-id5753 . -1) (#("p" 0 1 (fontified t)) . -164) (undo-tree-id5754 . -1) (#("a" 0 1 (fontified t)) . -165) (undo-tree-id5755 . -1) 166) nil (25735 26704 606019 0) 0 nil])
([nil nil ((163 . 178)) nil (25735 26704 606017 0) 0 nil])
([nil nil ((163 . 171)) nil (25735 26704 606016 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -2250) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (#("." 0 1 (fontified t)) . -2251) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (#("5" 0 1 (fontified t)) . -2252) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) 2253) nil (25735 26704 606014 0) 0 nil])
([nil nil ((2250 . 2254)) nil (25735 26704 605985 0) 0 nil])
([nil nil ((2699 . 2708) (t 25735 26704 610488 925000)) nil (25735 26714 294923 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2704) (undo-tree-id5761 . -4) 2708) nil (25735 26714 294922 0) 0 nil])
([nil nil ((2704 . 2710)) nil (25735 26714 294915 0) 0 nil])
([nil nil ((2710 . 2712)) nil (25735 26714 294912 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -163) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (#("p" 0 1 (fontified t)) . -164) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (#("a" 0 1 (fontified t)) . -165) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (#("t" 0 1 (fontified t)) . -166) (undo-tree-id5768 . -1) (undo-tree-id5769 . -1) (#("c" 0 1 (fontified t)) . -167) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (#("h" 0 1 (fontified t)) . -168) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (#("e" 0 1 (fontified t)) . -169) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (#("s" 0 1 (fontified t)) . -170) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (#(" " 0 1 (fontified t)) . -171) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) 172 (t 25735 26714 300451 455000)) nil (25735 26755 799949 0) 0 nil])
([nil nil ((163 . 164)) nil (25735 26755 799922 0) 0 nil])
([nil nil ((2427 . 2464) (#(" " 0 1 (fontified nil)) . 2426) (undo-tree-id5781 . -1) (2427 . 2428) (t 25735 26755 804492 722000)) nil (25735 26944 840197 0) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -2475) (2475 . 2476) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -2475) (2475 . 2476) (2474 . 2476) (#("\"" 0 1 (fontified nil)) . -2474) (2464 . 2475)) nil (25735 26944 840196 0) 0 nil])
([nil nil ((2475 . 2479)) nil (25735 26944 840195 0) 0 nil])
([nil nil ((2480 . 2482)) nil (25735 26944 840194 0) 0 nil])
([nil nil ((2695 . 2736) (#(" " 0 1 (fontified nil)) . 2694) (undo-tree-id5780 . -1) (2695 . 2696)) nil (25735 26944 840194 0) 0 nil])
([nil nil ((2694 . 2736)) nil (25735 26944 840188 0) 0 nil])
([nil nil ((2736 . 2741)) nil (25735 26944 840188 0) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -2747) (2747 . 2748) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -2747) (2747 . 2748) (2746 . 2748) (#("\"" 0 1 (fontified nil)) . -2746) (2741 . 2747)) nil (25735 26944 840186 0) 0 nil])
([nil nil ((2747 . 2751)) nil (25735 26944 840185 0) 0 nil])
([nil nil ((2752 . 2753)) nil (25735 26944 840182 0) 0 nil])
([nil nil ((#("import matplotlib.pyplot as plt
import numpy as np
from shapely.geometry import Polygon, box, Point
from shapely.affinity import rotate, translate
from matplotlib import patches

# All dimensions are in um
mm = 1000
um = 1.0
nm = 0.001

def make_circle(x, y, r):
    return Point(x, y).buffer(r)

def cosine_dist(degree, power=1):
    \"\"\"Cosine distribution cos^p (deg)
    \"\"\"
    c = np.cos(np.deg2rad(degree))
    cp = np.power(c, power)
    return cp


def translate_by_theta_r(shape, theta, r):
    \"\"\"Translate a shape by theta and r

    
    shift_x = r * sin(theta)
    shift_y = r * cos(theta)
    \"\"\"
    shift_x = np.cos(np.deg2rad(theta)) * r
    shift_y = np.sin(np.deg2rad(theta)) * r
    new_shape = translate(shape, xoff=shift_x, yoff=shift_y)
    return new_shape


def shape_to_projection(shape, thickness, theta, psi, H):
    \"\"\"Generate the projected shape along incident angle (theta, psi)
    given the film thickness and spacing H
    \"\"\"
    tan_psi = np.tan(np.deg2rad(psi))
    r = tan_psi * thickness
    R = tan_psi * H
    shape1 = translate_by_theta_r(shape, theta, r)
    allowed = shape.intersection(shape1)
    projection = translate_by_theta_r(allowed, 180 + theta, (r + R))
    return projection

def get_union_shape(shape, thickness, psi, H, steps=360):
    \"\"\"Get an envelop of all theta angles
    \"\"\"
    envelope = shape_to_projection(shape=shape, thickness=thickness, theta=0, psi=psi, H=H)
    angles = np.linspace(0, 360, steps)
    for theta in angles:
        new_shape = shape_to_projection(shape=shape, thickness=thickness, theta=theta, psi=psi, H=H)
        envelope = envelope.union(new_shape)
    return envelope

def bbox_to_mesh(shape, size=1024):
    \"\"\"Rasterize a shape to a NumPy array
    shape could be conveniently a bbox
    
    \"\"\"
    # Get the bounding box of the shape
    minx, miny, maxx, maxy = shape.bounds

    # Generate a grid of points
    x, y = np.mgrid[:size, :size]
    points = np.vstack((x.flatten(), y.flatten())).T

    # Scale the points to the bounding box of the shape
    points[:, 0] = points[:, 0] / size * (maxx - minx) + minx
    points[:, 1] = points[:, 1] / size * (maxy - miny) + miny

    return points

def draw_shape(ax, shape, c='black', alpha=0.25):
    \"\"\"Draw a shape on a given axis\"\"\"
    # Create a Polygon patch for the exterior
    exterior_patch = patches.Polygon(np.column_stack(shape.exterior.xy), fill=True, color=c,
                                     edgecolor=\"none\", alpha=alpha)
    ax.add_patch(exterior_patch)

    # Create Polygon patches for the interiors
    for interior in shape.interiors:
        interior_patch = patches.Polygon(np.column_stack(interior.xy), fill=True,
                                         edgecolor=\"none\",
                                         color='white')
        ax.add_patch(interior_patch)
    return



" 0 6 (fontified t face font-lock-keyword-face) 6 25 (fontified t) 25 27 (fontified t face font-lock-keyword-face) 27 32 (fontified t) 32 38 (fontified t face font-lock-keyword-face) 38 45 (fontified t) 45 47 (fontified t face font-lock-keyword-face) 47 51 (fontified t) 51 55 (fontified t face font-lock-keyword-face) 55 73 (fontified t) 73 79 (fontified t face font-lock-keyword-face) 79 100 (fontified t) 100 104 (fontified t face font-lock-keyword-face) 104 122 (fontified t) 122 128 (fontified t face font-lock-keyword-face) 128 147 (fontified t) 147 151 (fontified t face font-lock-keyword-face) 151 163 (fontified t) 163 169 (fontified t face font-lock-keyword-face) 169 179 (fontified t) 179 181 (fontified t face font-lock-comment-delimiter-face) 181 206 (fontified t face font-lock-comment-face) 206 208 (fontified t face font-lock-variable-name-face) 208 216 (fontified t) 216 218 (fontified t face font-lock-variable-name-face) 218 225 (fontified t) 225 227 (fontified t face font-lock-variable-name-face) 227 237 (fontified t) 237 240 (fontified t face font-lock-keyword-face) 240 241 (fontified t) 241 252 (fontified t face font-lock-function-name-face) 252 267 (fontified t) 267 273 (fontified t face font-lock-keyword-face) 273 286 (fontified t) 286 292 (fontified t face font-lock-builtin-face) 292 297 (fontified t) 297 300 (fontified t face font-lock-keyword-face) 300 301 (fontified t) 301 312 (fontified t face font-lock-function-name-face) 312 335 (fontified t) 335 337 (fontified t face font-lock-doc-face) 337 338 (syntax-table (15) fontified t face font-lock-doc-face) 338 374 (fontified t face font-lock-doc-face) 374 375 (syntax-table (15) fontified t face font-lock-doc-face) 375 377 (fontified t face font-lock-doc-face) 377 445 (fontified t) 445 451 (fontified t face font-lock-keyword-face) 451 457 (fontified t) 457 460 (fontified t face font-lock-keyword-face) 460 461 (fontified t) 461 481 (fontified t face font-lock-function-name-face) 481 504 (fontified t) 504 506 (fontified t face font-lock-doc-face) 506 507 (fontified t syntax-table (15) face font-lock-doc-face) 507 608 (fontified t face font-lock-doc-face) 608 609 (fontified t syntax-table (15) face font-lock-doc-face) 609 611 (fontified t face font-lock-doc-face) 611 765 (fontified t) 765 771 (fontified t face font-lock-keyword-face) 771 784 (fontified t) 784 787 (fontified t face font-lock-keyword-face) 787 788 (fontified t) 788 807 (fontified t face font-lock-function-name-face) 807 846 (fontified t) 846 848 (fontified t face font-lock-doc-face) 848 849 (fontified t syntax-table (15) face font-lock-doc-face) 849 959 (fontified t face font-lock-doc-face) 959 960 (fontified t syntax-table (15) face font-lock-doc-face) 960 962 (fontified t face font-lock-doc-face) 962 1214 (fontified t) 1214 1220 (fontified t face font-lock-keyword-face) 1220 1233 (fontified t) 1233 1236 (fontified t face font-lock-keyword-face) 1236 1237 (fontified t) 1237 1252 (fontified t face font-lock-function-name-face) 1252 1295 (fontified t) 1295 1297 (fontified t face font-lock-doc-face) 1297 1298 (fontified t syntax-table (15) face font-lock-doc-face) 1298 1337 (fontified t face font-lock-doc-face) 1337 1338 (fontified t syntax-table (15) face font-lock-doc-face) 1338 1340 (fontified t face font-lock-doc-face) 1340 1477 (fontified t) 1477 1480 (fontified t face font-lock-keyword-face) 1480 1487 (fontified t) 1487 1489 (fontified t face font-lock-keyword-face) 1489 1500 (fontified t) 1500 1599 (fontified t) 1599 1607 (fontified t) 1607 1615 (fontified t face font-lock-variable-name-face) 1615 1648 (fontified t) 1648 1654 (fontified t face font-lock-keyword-face) 1654 1665 (fontified t) 1665 1668 (fontified t face font-lock-keyword-face) 1668 1669 (fontified t) 1669 1681 (fontified t face font-lock-function-name-face) 1681 1705 (fontified t) 1705 1707 (fontified t face font-lock-doc-face) 1707 1708 (fontified t syntax-table (15) face font-lock-doc-face) 1708 1791 (fontified t face font-lock-doc-face) 1791 1792 (fontified t syntax-table (15) face font-lock-doc-face) 1792 1794 (fontified t face font-lock-doc-face) 1794 1799 (fontified t) 1799 1801 (fontified t face font-lock-comment-delimiter-face) 1801 1835 (fontified t face font-lock-comment-face) 1835 1882 (fontified t) 1882 1884 (fontified t face font-lock-comment-delimiter-face) 1884 1910 (fontified t face font-lock-comment-face) 1910 2002 (fontified t) 2002 2004 (fontified t face font-lock-comment-delimiter-face) 2004 2054 (fontified t face font-lock-comment-face) 2054 2183 (fontified t) 2183 2189 (fontified t face font-lock-keyword-face) 2189 2198 (fontified t) 2198 2201 (fontified t face font-lock-keyword-face) 2201 2202 (fontified t) 2202 2212 (fontified t face font-lock-function-name-face) 2212 2226 (fontified t) 2226 2233 (fontified t face font-lock-string-face) 2233 2252 (fontified t) 2252 2254 (fontified t face font-lock-doc-face) 2254 2255 (fontified t syntax-table (15) face font-lock-doc-face) 2255 2283 (fontified t face font-lock-doc-face) 2283 2284 (fontified t syntax-table (15) face font-lock-doc-face) 2284 2286 (fontified t face font-lock-doc-face) 2286 2291 (fontified t) 2291 2293 (fontified t face font-lock-comment-delimiter-face) 2293 2333 (fontified t face font-lock-comment-face) 2333 2411 (fontified t) 2411 2415 (fontified t face font-lock-constant-face) 2415 2473 (fontified t) 2473 2479 (fontified t face font-lock-string-face) 2479 2532 (fontified t) 2532 2534 (fontified t face font-lock-comment-delimiter-face) 2534 2575 (fontified t face font-lock-comment-face) 2575 2579 (fontified t) 2579 2582 (fontified t face font-lock-keyword-face) 2582 2592 (fontified t) 2592 2594 (fontified t face font-lock-keyword-face) 2594 2688 (fontified t) 2688 2692 (fontified t face font-lock-constant-face) 2692 2745 (fontified t) 2745 2751 (fontified t face font-lock-string-face) 2751 2800 (fontified t) 2800 2807 (fontified t face font-lock-string-face) 2807 2850 (fontified t) 2850 2856 (fontified t face font-lock-keyword-face) 2856 2860 (fontified t)) . 1) (undo-tree-id0 . -1743) (undo-tree-id1 . -1744) (undo-tree-id2 . -1701) (undo-tree-id3 . -1702) (undo-tree-id4 . -1644) (undo-tree-id5 . -1645) (undo-tree-id6 . -1599) (undo-tree-id7 . -1600) (undo-tree-id8 . -1603) (undo-tree-id9 . -1604) (undo-tree-id10 . -1498) (undo-tree-id11 . -1499) (undo-tree-id12 . -1502) (undo-tree-id13 . -1503) (undo-tree-id14 . -1473) (undo-tree-id15 . -1474) (undo-tree-id16 . -1433) (undo-tree-id17 . -1434) (undo-tree-id18 . -1341) (undo-tree-id19 . -1342) (undo-tree-id20 . -1333) (undo-tree-id21 . -1334) (undo-tree-id22 . -1291) (undo-tree-id23 . -1292) (undo-tree-id24 . -1210) (undo-tree-id25 . -1211) (undo-tree-id26 . -1141) (undo-tree-id27 . -1142) (undo-tree-id28 . -1100) (undo-tree-id29 . -1101) (undo-tree-id30 . -1049) (undo-tree-id31 . -1050) (undo-tree-id32 . -1029) (undo-tree-id33 . -1030) (undo-tree-id34 . -1001) (undo-tree-id35 . -1002) (undo-tree-id36 . -963) (undo-tree-id37 . -964) (undo-tree-id38 . -955) (undo-tree-id39 . -956) (undo-tree-id40 . -912) (undo-tree-id41 . -913) (undo-tree-id42 . -842) (undo-tree-id43 . -843) (undo-tree-id44 . -761) (undo-tree-id45 . -762) (undo-tree-id46 . -700) (undo-tree-id47 . -701) (undo-tree-id48 . -656) (undo-tree-id49 . -657) (undo-tree-id50 . -612) (undo-tree-id51 . -613) (undo-tree-id52 . -604) (undo-tree-id53 . -605) (undo-tree-id54 . -575) (undo-tree-id55 . -576) (undo-tree-id56 . -546) (undo-tree-id57 . -547) (undo-tree-id58 . -541) (undo-tree-id59 . -542) (undo-tree-id60 . -500) (undo-tree-id61 . -501) (undo-tree-id62 . -441) (undo-tree-id63 . -442) (undo-tree-id64 . -413) (undo-tree-id65 . -414) (undo-tree-id66 . -378) (undo-tree-id67 . -379) (undo-tree-id68 . -370) (undo-tree-id69 . -371) (undo-tree-id70 . -331) (undo-tree-id71 . -332) (undo-tree-id72 . -263) (undo-tree-id73 . -264) (undo-tree-id74 . -6) (undo-tree-id75 . -51) (undo-tree-id76 . -55) (undo-tree-id77 . -51) (undo-tree-id78 . -55) (undo-tree-id79 . -100) (undo-tree-id80 . -104) (undo-tree-id81 . -237) (undo-tree-id82 . -240) (undo-tree-id83 . -297) (undo-tree-id84 . -300) (undo-tree-id85 . -541) (undo-tree-id86 . -542) (undo-tree-id87 . -1233) (undo-tree-id88 . -1236) (undo-tree-id89 . -1419) (undo-tree-id90 . -1422) (undo-tree-id91 . -1577) (undo-tree-id92 . -1578) (undo-tree-id93 . -1665) (undo-tree-id94 . -1668) (undo-tree-id95 . -1782) (undo-tree-id96 . -1783) (undo-tree-id97 . -2198) (undo-tree-id98 . -2201) (undo-tree-id99 . -2411) (undo-tree-id100 . -2415) (undo-tree-id101 . -2688) (undo-tree-id102 . -2692) (undo-tree-id103 . -2859) (undo-tree-id104 . -2860) (2861 . 6175) (t 25735 26944 845231 304000)) nil (25755 16069 932248 0) 0 nil])
([nil nil ((297 . 299) (t 25755 16069 937333 101000)) nil (25755 16631 838629 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -313) (313 . 314) (#(")" 0 1 (fontified nil)) . -313) (313 . 314) (299 . 314)) nil (25755 16631 838627 0) 0 nil])
([nil nil ((apply -2 299 317 undo--wrap-and-run-primitive-undo 299 317 ((299 . 301) 313))) nil (25755 16631 838623 0) 0 nil])
([nil nil ((476 . 478) (t 25755 16631 843829 264000)) nil (25755 23227 629021 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 634 . 635) (nil fontified nil 632 . 635) (nil fontified nil 626 . 632) (nil fontified nil 558 . 626) (nil fontified nil 556 . 558) (nil fontified nil 555 . 556) (nil fontified nil 519 . 555) (nil fontified nil 518 . 519) (nil fontified nil 516 . 518) (nil fontified nil 493 . 516) (nil fontified nil 482 . 493) (nil fontified nil 481 . 482) (nil fontified nil 478 . 481) (478 . 635)) nil (25755 23227 629019 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-function-name-face)) . -482) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("o" 0 1 (fontified t face font-lock-function-name-face)) . -483) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . -484) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -485) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -486) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -487) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 488) nil (25755 23227 629015 0) 0 nil])
([nil nil ((482 . 493)) nil (25755 23227 629005 0) 0 nil])
([nil nil ((507 . 514)) nil (25755 23227 629004 0) 0 nil])
([nil nil ((#("    cp = np.power(c, power)" 0 4 (fontified t) 4 6 (fontified t face font-lock-variable-name-face) 6 27 (fontified t)) . -606) (undo-tree-id126 . -27) (undo-tree-id127 . -27) (undo-tree-id128 . 1) (undo-tree-id129 . -27) (undo-tree-id130 . 10) (undo-tree-id131 . -18) 633) nil (25755 23227 629003 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -605) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 606) nil (25755 23227 628998 0) 0 nil])
([nil nil ((#("    c = np.cos(np.deg2rad(degree))" 0 4 (fontified t) 4 5 (fontified t face font-lock-variable-name-face) 5 34 (fontified t)) . -571) (undo-tree-id118 . -34) (undo-tree-id119 . -34) (undo-tree-id120 . 1) (undo-tree-id121 . -34) (undo-tree-id122 . 20) (undo-tree-id123 . -15) 605) nil (25755 23227 628995 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -570) (undo-tree-id116 . -1) (undo-tree-id117 . -1) 571) nil (25755 23227 628990 0) 0 nil])
([nil nil ((570 . 575)) nil (25755 23227 628988 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 614 . 615) (nil fontified nil 575 . 615) (575 . 615)) nil (25755 23227 628987 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -593) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 594) nil (25755 23227 628985 0) 0 nil])
([nil nil ((593 . 599)) nil (25755 23227 628983 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -602) (undo-tree-id112 . -1) (#("0" 0 1 (fontified t)) . -603) (undo-tree-id113 . -1) 604) nil (25755 23227 628982 0) 0 nil])
([nil nil ((602 . 603)) nil (25755 23227 628980 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -605) (undo-tree-id107 . -1) (#("i" 0 1 (fontified t)) . -606) (undo-tree-id108 . -1) (#("g" 0 1 (fontified t)) . -607) (undo-tree-id109 . -1) (#("m" 0 1 (fontified t)) . -608) (undo-tree-id110 . -1) (#("a" 0 1 (fontified t)) . -609) (undo-tree-id111 . -1) 610) nil (25755 23227 628978 0) 0 nil])
([nil nil ((605 . 607)) nil (25755 23227 628973 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -605) (undo-tree-id105 . -1) (#("d" 0 1 (fontified t)) . -606) (undo-tree-id106 . -1) 607) nil (25755 23227 628971 0) 0 nil])
([nil nil ((605 . 610)) nil (25755 23227 628960 0) 0 nil])
([nil nil ((575 . 582) (t 25755 23227 639126 437000)) nil (25755 23234 968000 0) 0 nil])
([nil nil ((#("    return cp" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 12 (fontified t) 12 13 (rear-nonsticky t fontified t)) . -627) (undo-tree-id386 . -13) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -11) (undo-tree-id429 . -11) (undo-tree-id430 . -11) (undo-tree-id431 . -11) (undo-tree-id432 . -11) (undo-tree-id433 . -11) (undo-tree-id434 . -11) (undo-tree-id435 . -11) (undo-tree-id436 . -11) (undo-tree-id437 . -11) (undo-tree-id438 . -11) (undo-tree-id439 . -11) (undo-tree-id440 . -11) (undo-tree-id441 . -11) (undo-tree-id442 . -11) (undo-tree-id443 . -11) (undo-tree-id444 . -11) (undo-tree-id445 . -11) (undo-tree-id446 . -11) (undo-tree-id447 . -11) (undo-tree-id448 . -11) (undo-tree-id449 . -11) (undo-tree-id450 . -11) (undo-tree-id451 . -11) (undo-tree-id452 . -11) (undo-tree-id453 . -11) (undo-tree-id454 . -11) (undo-tree-id455 . -11) (undo-tree-id456 . -11) (undo-tree-id457 . -11) (undo-tree-id458 . -11) (undo-tree-id459 . -11) (undo-tree-id460 . -11) (undo-tree-id461 . -11) (undo-tree-id462 . -11) (undo-tree-id463 . -11) (undo-tree-id464 . -11) (undo-tree-id465 . -11) (undo-tree-id466 . -11) (undo-tree-id467 . -11) (undo-tree-id468 . -11) (undo-tree-id469 . -11) (undo-tree-id470 . -11) (undo-tree-id471 . -11) (undo-tree-id472 . -11) (undo-tree-id473 . -11) (undo-tree-id474 . -11) (undo-tree-id475 . -11) (undo-tree-id476 . -11) (undo-tree-id477 . -11) (undo-tree-id478 . -11) (undo-tree-id479 . -11) (undo-tree-id480 . -11) (undo-tree-id481 . -11) (undo-tree-id482 . -11) (undo-tree-id483 . -11) (undo-tree-id484 . -11) (undo-tree-id485 . -11) (undo-tree-id486 . -11) (undo-tree-id487 . -11) (undo-tree-id488 . -11) (undo-tree-id489 . -11) (undo-tree-id490 . -11) (undo-tree-id491 . -11) (undo-tree-id492 . -11) (undo-tree-id493 . -11) (undo-tree-id494 . -11) (undo-tree-id495 . -11) (undo-tree-id496 . -11) (undo-tree-id497 . -11) (undo-tree-id498 . -11) (undo-tree-id499 . -11) (undo-tree-id500 . -11) (undo-tree-id501 . -11) (undo-tree-id502 . -11) (undo-tree-id503 . -11) (undo-tree-id504 . -11) (undo-tree-id505 . -11) (undo-tree-id506 . -11) (undo-tree-id507 . -11) (undo-tree-id508 . -11) (undo-tree-id509 . -11) (undo-tree-id510 . -11) (undo-tree-id511 . -11) (undo-tree-id512 . -11) (undo-tree-id513 . -11) (undo-tree-id514 . -11) (undo-tree-id515 . -13) (undo-tree-id516 . -11) (undo-tree-id517 . -11) (undo-tree-id518 . -11) (undo-tree-id519 . -11) (undo-tree-id520 . -11) (undo-tree-id521 . -11) (undo-tree-id522 . -11) (undo-tree-id523 . -11) (undo-tree-id524 . -11) (undo-tree-id525 . -11) (undo-tree-id526 . -11) (undo-tree-id527 . -11) (undo-tree-id528 . -11) (undo-tree-id529 . -11) (undo-tree-id530 . -11) (undo-tree-id531 . -11) (undo-tree-id532 . -11) (undo-tree-id533 . -11) (undo-tree-id534 . -11) (undo-tree-id535 . -11) (undo-tree-id536 . -11) (undo-tree-id537 . -11) (undo-tree-id538 . -11) (undo-tree-id539 . -12) (undo-tree-id540 . -12) (undo-tree-id541 . -12) (undo-tree-id542 . -12) (undo-tree-id543 . -12) (undo-tree-id544 . -12) (undo-tree-id545 . -12) (undo-tree-id546 . -12) (undo-tree-id547 . -12) (undo-tree-id548 . -12) (undo-tree-id549 . -12) (undo-tree-id550 . -12) (undo-tree-id551 . -12) (undo-tree-id552 . -12) (undo-tree-id553 . -12) (undo-tree-id554 . -12) (undo-tree-id555 . -12) (undo-tree-id556 . -12) (undo-tree-id557 . -12) (undo-tree-id558 . -12) (undo-tree-id559 . -12) (undo-tree-id560 . -12) (undo-tree-id561 . -12) (undo-tree-id562 . -12) (undo-tree-id563 . -12) (undo-tree-id564 . -12) (undo-tree-id565 . -12) (undo-tree-id566 . -12) (undo-tree-id567 . -12) (undo-tree-id568 . -12) (undo-tree-id569 . -12) (undo-tree-id570 . -12) (undo-tree-id571 . -12) (undo-tree-id572 . -12) (undo-tree-id573 . -12) (undo-tree-id574 . -12) (undo-tree-id575 . -12) (undo-tree-id576 . -12) (undo-tree-id577 . -12) (undo-tree-id578 . -12) (undo-tree-id579 . -12) (undo-tree-id580 . -12) (undo-tree-id581 . -12) (undo-tree-id582 . -13) (undo-tree-id583 . -13) (undo-tree-id584 . -13) (undo-tree-id585 . -13) (undo-tree-id586 . -13) (undo-tree-id587 . -13) (undo-tree-id588 . -13) (undo-tree-id589 . -13) (undo-tree-id590 . -13) (undo-tree-id591 . -13) (undo-tree-id592 . -13) (undo-tree-id593 . -13) (undo-tree-id594 . -13) (undo-tree-id595 . -13) (undo-tree-id596 . -13) (undo-tree-id597 . -13) (undo-tree-id598 . -13) (undo-tree-id599 . -13) (undo-tree-id600 . -13) (undo-tree-id601 . -13) (undo-tree-id602 . -13) (undo-tree-id603 . -13) (undo-tree-id604 . -13) (undo-tree-id605 . -13) (undo-tree-id606 . -13) (undo-tree-id607 . -13) (undo-tree-id608 . -13) (undo-tree-id609 . -13) (undo-tree-id610 . -13) (undo-tree-id611 . -13) (undo-tree-id612 . -13) (undo-tree-id613 . -13) (undo-tree-id614 . -13) (undo-tree-id615 . -13) (undo-tree-id616 . -13) (undo-tree-id617 . -13) (undo-tree-id618 . -13) (undo-tree-id619 . -13) (undo-tree-id620 . -13) (undo-tree-id621 . -13) (undo-tree-id622 . -13) (undo-tree-id623 . -13) (undo-tree-id624 . -13) 640) nil (25755 23234 967990 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -626) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) 627) nil (25755 23234 967811 0) 0 nil])
([nil nil ((3484 . 3485) (t 25755 23234 976999 67000)) nil (25756 20432 874086 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4346 . 4347) (nil fontified nil 3485 . 4347) (3485 . 4347)) nil (25756 20432 874085 0) 0 nil])
([nil nil ((3699 . 3704)) nil (25756 20432 874085 0) 0 nil])
([nil nil ((3704 . 3721)) nil (25756 20432 874084 0) 0 nil])
([nil nil ((3721 . 3742)) nil (25756 20432 874084 0) 0 nil])
([nil nil ((3742 . 3749)) nil (25756 20432 874083 0) 0 nil])
([nil nil ((3749 . 3754)) nil (25756 20432 874083 0) 0 nil])
([nil nil ((3754 . 3772)) nil (25756 20432 874083 0) 0 nil])
([nil nil ((3772 . 3775)) nil (25756 20432 874082 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-doc-face)) . -3773) (undo-tree-id780 . -1) (#("y" 0 1 (fontified t face font-lock-doc-face)) . -3774) (undo-tree-id781 . -1) 3775) nil (25756 20432 874081 0) 0 nil])
([nil nil ((3773 . 3794)) nil (25756 20432 874080 0) 0 nil])
([nil nil ((3794 . 3800)) nil (25756 20432 874079 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-doc-face)) . -3799) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) 3800) nil (25756 20432 874075 0) 0 nil])
([nil nil ((4447 . 4448) 3799) nil (25756 20432 873997 0) 0 nil])
([nil nil ((4448 . 4449) (t 25756 20432 880508 518000)) nil (25756 20434 829924 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 5383 . 5384) (nil fontified nil 4449 . 5384) (4449 . 5384) (t 25756 20434 835346 716000)) nil (25756 20522 846004 0) 0 nil])
([nil nil ((#("from shapely.vectorized import contains
import numba
from shapely import simplify" 0 4 (fontified t face font-lock-keyword-face) 4 24 (fontified t) 24 30 (fontified t face font-lock-keyword-face) 30 40 (fontified t) 40 46 (fontified t face font-lock-keyword-face) 46 53 (fontified t) 53 57 (fontified t face font-lock-keyword-face) 57 66 (fontified t) 66 72 (fontified t face font-lock-keyword-face) 72 81 (fontified t)) . 4449) (undo-tree-id871 . -81) (undo-tree-id872 . -4) (undo-tree-id873 . -81)) nil (25756 20522 846003 0) 0 nil])
([nil nil ((178 . 179)) nil (25756 20522 846000 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 259 . 260) (nil fontified nil 251 . 260) (nil fontified nil 245 . 251) (nil fontified nil 236 . 245) (nil fontified nil 232 . 236) (nil fontified nil 225 . 232) (nil fontified nil 219 . 225) (nil fontified nil 209 . 219) (nil fontified nil 203 . 209) (nil fontified nil 183 . 203) (nil fontified nil 179 . 183) (179 . 260)) nil (25756 20522 845999 0) 0 nil])
([nil nil ((4655 . 4660)) nil (25756 20522 845997 0) 0 nil])
([nil nil ((4657 . 4661) (#("    " 0 4 (fontified nil face font-lock-doc-face)) . 4656) (undo-tree-id870 . -4) (4655 . 4661)) nil (25756 20522 845996 0) 0 nil])
([nil nil ((4661 . 4675)) nil (25756 20522 845994 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-doc-face)) . -4673) (undo-tree-id868 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4674) (undo-tree-id869 . -1) 4675) nil (25756 20522 845993 0) 0 nil])
([nil nil ((4673 . 4687)) nil (25756 20522 845991 0) 0 nil])
([nil nil ((4687 . 4708)) nil (25756 20522 845991 0) 0 nil])
([nil nil ((4708 . 4718)) nil (25756 20522 845990 0) 0 nil])
([nil nil ((4718 . 4719)) nil (25756 20522 845989 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-doc-face)) . -4698) (undo-tree-id847 . -1) (#("w" 0 1 (fontified t face font-lock-doc-face)) . -4699) (undo-tree-id848 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -4700) (undo-tree-id849 . -1) (#("y" 0 1 (fontified t face font-lock-doc-face)) . -4701) (undo-tree-id850 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4702) (undo-tree-id851 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4703) (undo-tree-id852 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4704) (undo-tree-id853 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -4705) (undo-tree-id854 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4706) (undo-tree-id855 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4707) (undo-tree-id856 . -1) (#("d" 0 1 (fontified t face font-lock-doc-face)) . -4708) (undo-tree-id857 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4709) (undo-tree-id858 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4710) (undo-tree-id859 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -4711) (undo-tree-id860 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4712) (undo-tree-id861 . -1) (#("x" 0 1 (fontified t face font-lock-doc-face)) . -4713) (undo-tree-id862 . -1) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -4714) (undo-tree-id863 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4715) (undo-tree-id864 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4716) (undo-tree-id865 . -1) (#("h" 0 1 (fontified t face font-lock-doc-face)) . -4717) (undo-tree-id866 . -1) (#("," 0 1 (fontified t face font-lock-doc-face)) . -4718) (undo-tree-id867 . -1) 4719) nil (25756 20522 845986 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-doc-face)) . -4677) (undo-tree-id826 . -1) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -4678) (undo-tree-id827 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4679) (undo-tree-id828 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4680) (undo-tree-id829 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4681) (undo-tree-id830 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -4682) (undo-tree-id831 . -1) (#("h" 0 1 (fontified t face font-lock-doc-face)) . -4683) (undo-tree-id832 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4684) (undo-tree-id833 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4685) (undo-tree-id834 . -1) (#("p" 0 1 (fontified t face font-lock-doc-face)) . -4686) (undo-tree-id835 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -4687) (undo-tree-id836 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4688) (undo-tree-id837 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -4689) (undo-tree-id838 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -4690) (undo-tree-id839 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4691) (undo-tree-id840 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4692) (undo-tree-id841 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -4693) (undo-tree-id842 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -4694) (undo-tree-id843 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4695) (undo-tree-id844 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4696) (undo-tree-id845 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -4697) (undo-tree-id846 . -1) 4698) nil (25756 20522 845966 0) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face font-lock-doc-face)) . -4661) (undo-tree-id810 . -1) (#("h" 0 1 (fontified t face font-lock-doc-face)) . -4662) (undo-tree-id811 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4663) (undo-tree-id812 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4664) (undo-tree-id813 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4665) (undo-tree-id814 . -1) (#("v" 0 1 (fontified t face font-lock-doc-face)) . -4666) (undo-tree-id815 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4667) (undo-tree-id816 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -4668) (undo-tree-id817 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4669) (undo-tree-id818 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -4670) (undo-tree-id819 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -4671) (undo-tree-id820 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -4672) (undo-tree-id821 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4673) (undo-tree-id822 . -1) (#("a" 0 1 (fontified t face font-lock-doc-face)) . -4674) (undo-tree-id823 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4675) (undo-tree-id824 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4676) (undo-tree-id825 . -1) 4677) nil (25756 20522 845939 0) 0 nil])
([nil nil ((4661 . 4682)) nil (25756 20522 845928 0) 0 nil])
([nil nil ((4682 . 4698)) nil (25756 20522 845928 0) 0 nil])
([nil nil ((4698 . 4706)) nil (25756 20522 845927 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-doc-face)) . -4700) (undo-tree-id804 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -4701) (undo-tree-id805 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4702) (undo-tree-id806 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -4703) (undo-tree-id807 . -1) (#("d" 0 1 (fontified t face font-lock-doc-face)) . -4704) (undo-tree-id808 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4705) (undo-tree-id809 . -1) 4706) nil (25756 20522 845926 0) 0 nil])
([nil nil ((4700 . 4714)) nil (25756 20522 845921 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-doc-face)) . -4707) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4708) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (#("m" 0 1 (fontified t face font-lock-doc-face)) . -4709) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -4710) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (#("s" 0 1 (fontified t face font-lock-doc-face)) . -4711) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (#("h" 0 1 (fontified t face font-lock-doc-face)) . -4712) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -4713) (undo-tree-id802 . -1) (undo-tree-id803 . -1) 4714) nil (25756 20522 845920 0) 0 nil])
([nil nil ((4707 . 4716)) nil (25756 20522 845908 0) 0 nil])
([nil nil ((4716 . 4729)) nil (25756 20522 845907 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-doc-face)) . -4727) (undo-tree-id782 . -1) (#("h" 0 1 (fontified t face font-lock-doc-face)) . -4728) (undo-tree-id783 . -1) 4729) nil (25756 20522 845906 0) 0 nil])
([nil nil ((4727 . 4740)) nil (25756 20522 845899 0) 0 nil])
([nil nil ((5475 . 5476) 4592) nil (25756 20522 845894 0) 0 nil])
([nil nil ((751 . 760) (t 25756 20522 854080 999000)) nil (25756 21548 676451 0) 0 nil])
([nil nil ((866 . 871)) nil (25756 21548 676450 0) 0 nil])
([nil nil ((871 . 875)) nil (25756 21548 676449 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-doc-face fontified t)) . -871) (undo-tree-id8 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -872) (undo-tree-id9 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -873) (undo-tree-id10 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -874) (undo-tree-id11 . -1) 875) nil (25756 21548 676448 0) 0 nil])
([nil nil ((871 . 878)) nil (25756 21548 676446 0) 0 nil])
([nil nil ((878 . 899)) nil (25756 21548 676445 0) 0 nil])
([nil nil ((899 . 900)) nil (25756 21548 676445 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-doc-face fontified t)) . -899) (undo-tree-id7 . -1) 900) nil (25756 21548 676444 0) 0 nil])
([nil nil ((899 . 914)) nil (25756 21548 676443 0) 0 nil])
([nil nil ((965 . 967)) nil (25756 21548 676443 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -966) (undo-tree-id4 . -1) (undo-tree-id5 . 1) (undo-tree-id6 . -1) 967) nil (25756 21548 676442 0) 0 nil])
([nil nil ((975 . 976) (#(")" 0 1 (fontified nil)) . -975) (967 . 976)) nil (25756 21548 676440 0) 0 nil])
([nil nil ((1019 . 1021)) nil (25756 21548 676439 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1020) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 1021) nil (25756 21548 676438 0) 0 nil])
([nil nil ((1029 . 1030) (#(")" 0 1 (fontified nil)) . -1029) (1021 . 1030)) nil (25756 21548 676421 0) 0 nil])
([nil nil ((1170 . 1180) (t 25756 21548 682980 517000)) nil (25756 21790 969613 0) 0 nil])
([nil nil ((1439 . 1444)) nil (25756 21790 969613 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1443) (undo-tree-id15 . -1) 1444) nil (25756 21790 969612 0) 0 nil])
([nil nil ((1443 . 1449)) nil (25756 21790 969611 0) 0 nil])
([nil nil ((1559 . 1560)) nil (25756 21790 969610 0) 0 nil])
([nil nil ((1560 . 1569)) nil (25756 21790 969609 0) 0 nil])
([nil nil ((1650 . 1655)) nil (25756 21790 969609 0) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -1652) (undo-tree-id12 . -1) (#("*" 0 1 (fontified t)) . -1653) (undo-tree-id13 . -1) (#("p" 0 1 (fontified t)) . -1654) (undo-tree-id14 . -1) 1655) nil (25756 21790 969607 0) 0 nil])
([nil nil ((1652 . 1660)) nil (25756 21790 969597 0) 0 nil])
([nil nil ((1943 . 1944)) nil (25756 21790 969597 0) 0 nil])
([nil nil ((1944 . 1980)) nil (25756 21790 969596 0) 0 nil])
([nil nil ((1980 . 1988)) nil (25756 21790 969596 0) 0 nil])
([nil nil ((2314 . 2315)) nil (25756 21790 969595 0) 0 nil])
([nil nil ((2315 . 2356)) nil (25756 21790 969594 0) 0 nil])
([nil nil ((2356 . 2364)) nil (25756 21790 969590 0) 0 nil])
([nil nil ((apply -2 4278 4298 undo--wrap-and-run-primitive-undo 4278 4298 ((4282 . 4284) 4287)) (t 25756 21790 977568 617000)) nil (25756 62466 156160 0) 0 nil])
([nil current ((#("import matplotlib.pyplot as plt
import numpy as np
from shapely.geometry import Polygon, box, Point
from shapely.affinity import rotate, translate
from matplotlib import patches
from shapely.vectorized import contains
import numba
from shapely import simplify

# All dimensions are in um
mm = 1000
um = 1.0
nm = 0.001


def make_circle(x, y, r):
    return Point(x, y).buffer(r)

# def make_line()


def cosine_dist(degree, power=1):
    \"\"\"Cosine distribution cos^p (deg)
    \"\"\"
    c = np.cos(np.deg2rad(degree))
    cp = np.power(c, power)
    return cp

def gauss_angle_dist(degree, width, power=1):
    \"\"\"Cosine distribution cos^p (deg)
    \"\"\"
    return np.exp(-np.power((degree - 0)/width, 2.)/2.)


def translate_by_theta_r(shape, theta, r, delta=0):
    \"\"\"Translate a shape by theta and r

    
    shift_x = r * sin(theta)
    shift_y = r * cos(theta)
    delta: further shift in the angle direction
    \"\"\"
    shift_x = np.cos(np.deg2rad(theta)) * (r + delta)
    shift_y = np.sin(np.deg2rad(theta)) * (r + delta)
    new_shape = translate(shape, xoff=shift_x, yoff=shift_y)
    return new_shape


def shape_to_projection(shape, thickness, theta, psi, H, **params):
    \"\"\"Generate the projected shape along incident angle (theta, psi)
    given the film thickness and spacing H
    \"\"\"
    tan_psi = np.tan(np.deg2rad(psi))
    r = tan_psi * thickness
    R = tan_psi * H
    shape1 = translate_by_theta_r(shape, theta, r, **params)
    allowed = shape.intersection(shape1)
    projection = translate_by_theta_r(allowed, 180 + theta, (r + R), **params)
    return projection


def get_union_shape(shape, thickness, psi, H, steps=360, **params):
    \"\"\"Get an envelop of all theta angles
    \"\"\"
    envelope = shape_to_projection(shape=shape,
                                   thickness=thickness,
                                   theta=0,
                                   psi=psi,
                                   H=H,
                                   **params)
    angles = np.linspace(0, 360, steps)
    for theta in angles:
        new_shape = shape_to_projection(shape=shape,
                                        thickness=thickness,
                                        theta=theta,
                                        psi=psi,
                                        H=H,
                                        **params)
        envelope = envelope.union(new_shape)
    return envelope


def bbox_to_mesh(shape, size=1024):
    \"\"\"Rasterize a shape to a NumPy array
    shape could be conveniently a bbox
    
    \"\"\"
    # Get the bounding box of the shape
    minx, miny, maxx, maxy = shape.bounds

    # Generate a grid of points
    x, y = np.mgrid[:size, :size]
    points = np.vstack((x.flatten(), y.flatten())).T

    # Scale the points to the bounding box of the shape
    points[:, 0] = points[:, 0] / size * (maxx - minx) + minx
    points[:, 1] = points[:, 1] / size * (maxy - miny) + miny

    return points


def draw_shape(ax, shape, c='black', alpha=0.25):
    \"\"\"Draw a shape on a given axis\"\"\"
    # Create a Polygon patch for the exterior
    exterior_patch = patches.Polygon(np.column_stack(shape.exterior.xy),
                                     fill=True,
                                     color=c,
                                     edgecolor=\"none\",
                                     alpha=alpha)
    ax.add_patch(exterior_patch)

    # Create Polygon patches for the interiors
    for interior in shape.interiors:
        interior_patch = patches.Polygon(np.column_stack(interior.xy),
                                         fill=True,
                                         edgecolor=\"none\",
                                         color='white')
        ax.add_patch(interior_patch)
    return

def shift_array(z, xx, yy, xs, ys):
    \"\"\"Shifts a 2D array over a grid by a specified x and y offset.

    Args:
    z: 2D array.
    xx: x coordinates.
    yy: y coordinates.
    xs: x offset.
    ys: y offset.

    make sure z, xx and yy are of same dimension!
    xx, yy are created by numpy's meshgrid method
    Returns:
    Shifted 2D array.
    \"\"\"
    # Compute shift in terms of grid indices
    dx = int(round(xs / (xx[0, 1] - xx[0, 0])))
    dy = int(round(ys / (yy[1, 0] - yy[0, 0])))
    # print(dx, dy)

    # Create a new array filled with zeros
    z_shifted = np.zeros_like(z)

    # Shift the array
    if dx >= 0 and dy >= 0:
        z_shifted[dy:, dx:] = z[:-dy or None, :-dx or None]
    elif dx >= 0 and dy < 0:
        z_shifted[dy:, :dx] = z[:-dy or None, -dx:]
    elif dx < 0 and dy >= 0:
        z_shifted[:dy, dx:] = z[-dy:, :-dx or None]
    else: # dx < 0 and dy < 0
        z_shifted[:dy, :dx] = z[-dy:, -dx:]

    return z_shifted




def calc_intensity_matrix(shape, intensity, xmesh, ymesh):
    \"\"\"Calculates an intensity matrix for a shape over a grid.

    This version assumes to find the shape inside the bounding box of current shape
    \"\"\"
    # Create a grid of points within the bbox
    bbox = shape.bounds
    mask = np.zeros_like(xmesh, dtype=bool)
    
    # Find the indices of the points within the bbox
    within_bbox_indices = ((xmesh >= bbox[0]) & (xmesh <= bbox[2]) & (ymesh >= bbox[1]) & (ymesh <= bbox[3]))
    # Only consider points within the bbox for contains calculation
    x_within_bbox = xmesh[within_bbox_indices]
    y_within_bbox = ymesh[within_bbox_indices]

    # Create a binary mask of the shape over the grid
    mask[within_bbox_indices] = contains(shape, x_within_bbox, y_within_bbox)
    
    
    # Multiply the mask by the intensity to obtain an intensity matrix
    intensity_matrix = mask * intensity

    return intensity_matrix
" 0 6 (fontified t face font-lock-keyword-face) 6 25 (fontified t) 25 27 (fontified t face font-lock-keyword-face) 27 32 (fontified t) 32 38 (fontified t face font-lock-keyword-face) 38 45 (fontified t) 45 47 (fontified t face font-lock-keyword-face) 47 51 (fontified t) 51 55 (fontified t face font-lock-keyword-face) 55 73 (fontified t) 73 79 (fontified t face font-lock-keyword-face) 79 100 (fontified t) 100 104 (fontified t face font-lock-keyword-face) 104 122 (fontified t) 122 128 (fontified t face font-lock-keyword-face) 128 147 (fontified t) 147 151 (fontified t face font-lock-keyword-face) 151 163 (fontified t) 163 169 (fontified t face font-lock-keyword-face) 169 178 (fontified t) 178 182 (fontified t face font-lock-keyword-face) 182 202 (fontified t) 202 208 (fontified t face font-lock-keyword-face) 208 218 (fontified t) 218 224 (fontified t face font-lock-keyword-face) 224 231 (fontified t) 231 235 (fontified t face font-lock-keyword-face) 235 244 (fontified t) 244 250 (fontified t face font-lock-keyword-face) 250 261 (fontified t) 261 263 (fontified t face font-lock-comment-delimiter-face) 263 288 (fontified t face font-lock-comment-face) 288 290 (fontified t face font-lock-variable-name-face) 290 298 (fontified t) 298 300 (fontified t face font-lock-variable-name-face) 300 307 (fontified t) 307 309 (fontified t face font-lock-variable-name-face) 309 320 (fontified t) 320 323 (fontified t face font-lock-keyword-face) 323 324 (fontified t) 324 335 (fontified t face font-lock-function-name-face) 335 350 (fontified t) 350 356 (fontified t face font-lock-keyword-face) 356 369 (fontified t) 369 375 (fontified t face font-lock-builtin-face) 375 380 (fontified t) 380 382 (fontified t face font-lock-comment-delimiter-face) 382 398 (fontified t face font-lock-comment-face) 398 400 (fontified t) 400 403 (fontified t face font-lock-keyword-face) 403 404 (fontified t) 404 415 (fontified t face font-lock-function-name-face) 415 438 (fontified t) 438 440 (fontified t face font-lock-doc-face) 440 441 (syntax-table (15) fontified t face font-lock-doc-face) 441 477 (fontified t face font-lock-doc-face) 477 478 (syntax-table (15) fontified t face font-lock-doc-face) 478 480 (fontified t face font-lock-doc-face) 480 548 (fontified t) 548 554 (fontified t face font-lock-keyword-face) 554 559 (fontified t) 559 562 (fontified t face font-lock-keyword-face) 562 563 (fontified t) 563 579 (fontified t face font-lock-function-name-face) 579 609 (fontified t) 609 611 (fontified t face font-lock-doc-face) 611 612 (fontified t syntax-table (15) face font-lock-doc-face) 612 648 (fontified t face font-lock-doc-face) 648 649 (fontified t syntax-table (15) face font-lock-doc-face) 649 651 (fontified t face font-lock-doc-face) 651 656 (fontified t) 656 662 (fontified t face font-lock-keyword-face) 662 710 (fontified t) 710 713 (fontified t face font-lock-keyword-face) 713 714 (fontified t) 714 734 (fontified t face font-lock-function-name-face) 734 766 (fontified t) 766 768 (fontified t face font-lock-doc-face) 768 769 (fontified t syntax-table (15) face font-lock-doc-face) 769 918 (fontified t face font-lock-doc-face) 918 919 (fontified t syntax-table (15) face font-lock-doc-face) 919 921 (fontified t face font-lock-doc-face) 921 1095 (fontified t) 1095 1101 (fontified t face font-lock-keyword-face) 1101 1114 (fontified t) 1114 1117 (fontified t face font-lock-keyword-face) 1117 1118 (fontified t) 1118 1137 (fontified t face font-lock-function-name-face) 1137 1186 (fontified t) 1186 1188 (fontified t face font-lock-doc-face) 1188 1189 (fontified t syntax-table (15) face font-lock-doc-face) 1189 1299 (fontified t face font-lock-doc-face) 1299 1300 (fontified t syntax-table (15) face font-lock-doc-face) 1300 1302 (fontified t face font-lock-doc-face) 1302 1500 (fontified t) 1500 1570 (fontified t) 1570 1574 (fontified t) 1574 1580 (fontified t face font-lock-keyword-face) 1580 1594 (fontified t) 1594 1597 (fontified t face font-lock-keyword-face) 1597 1598 (fontified t) 1598 1613 (fontified t face font-lock-function-name-face) 1613 1666 (fontified t) 1666 1668 (fontified t face font-lock-doc-face) 1668 1669 (fontified t syntax-table (15) face font-lock-doc-face) 1669 1708 (fontified t face font-lock-doc-face) 1708 1709 (fontified t syntax-table (15) face font-lock-doc-face) 1709 1711 (fontified t face font-lock-doc-face) 1711 2033 (fontified t) 2033 2036 (fontified t face font-lock-keyword-face) 2036 2043 (fontified t) 2043 2045 (fontified t face font-lock-keyword-face) 2045 2414 (fontified t) 2414 2420 (fontified t face font-lock-keyword-face) 2420 2432 (fontified t) 2432 2435 (fontified t face font-lock-keyword-face) 2435 2436 (fontified t) 2436 2448 (fontified t face font-lock-function-name-face) 2448 2472 (fontified t) 2472 2474 (fontified t face font-lock-doc-face) 2474 2475 (fontified t syntax-table (15) face font-lock-doc-face) 2475 2558 (fontified t face font-lock-doc-face) 2558 2559 (fontified t syntax-table (15) face font-lock-doc-face) 2559 2561 (fontified t face font-lock-doc-face) 2561 2566 (fontified t) 2566 2568 (fontified t face font-lock-comment-delimiter-face) 2568 2602 (fontified t face font-lock-comment-face) 2602 2649 (fontified t) 2649 2651 (fontified t face font-lock-comment-delimiter-face) 2651 2677 (fontified t face font-lock-comment-face) 2677 2769 (fontified t) 2769 2771 (fontified t face font-lock-comment-delimiter-face) 2771 2821 (fontified t face font-lock-comment-face) 2821 2950 (fontified t) 2950 2956 (fontified t face font-lock-keyword-face) 2956 2966 (fontified t) 2966 2969 (fontified t face font-lock-keyword-face) 2969 2970 (fontified t) 2970 2980 (fontified t face font-lock-function-name-face) 2980 2994 (fontified t) 2994 3001 (fontified t face font-lock-string-face) 3001 3020 (fontified t) 3020 3022 (fontified t face font-lock-doc-face) 3022 3023 (fontified t syntax-table (15) face font-lock-doc-face) 3023 3051 (fontified t face font-lock-doc-face) 3051 3052 (fontified t syntax-table (15) face font-lock-doc-face) 3052 3054 (fontified t face font-lock-doc-face) 3054 3059 (fontified t) 3059 3061 (fontified t face font-lock-comment-delimiter-face) 3061 3070 (fontified t face font-lock-comment-face) 3070 3101 (fontified t face font-lock-comment-face) 3101 3105 (fontified t) 3105 3119 (fontified t face font-lock-variable-name-face) 3119 3216 (fontified t) 3216 3220 (fontified t face font-lock-constant-face) 3220 3315 (fontified t) 3315 3321 (fontified t face font-lock-string-face) 3321 3411 (fontified t) 3411 3413 (fontified t face font-lock-comment-delimiter-face) 3413 3454 (fontified t face font-lock-comment-face) 3454 3458 (fontified t) 3458 3461 (fontified t face font-lock-keyword-face) 3461 3471 (fontified t) 3471 3473 (fontified t face font-lock-keyword-face) 3473 3608 (fontified t) 3608 3612 (fontified t face font-lock-constant-face) 3612 3665 (fontified t) 3665 3671 (fontified t face font-lock-string-face) 3671 3720 (fontified t) 3720 3727 (fontified t face font-lock-string-face) 3727 3770 (fontified t) 3770 3776 (fontified t face font-lock-keyword-face) 3776 3778 (fontified t) 3778 3781 (fontified t face font-lock-keyword-face) 3781 3782 (fontified t) 3782 3793 (fontified t face font-lock-function-name-face) 3793 3818 (fontified t) 3818 3820 (fontified t face font-lock-doc-face) 3820 3821 (fontified t syntax-table (15) face font-lock-doc-face) 3821 4132 (fontified t face font-lock-doc-face) 4132 4133 (fontified t syntax-table (15) face font-lock-doc-face) 4133 4135 (fontified t face font-lock-doc-face) 4135 4140 (fontified t) 4140 4142 (fontified t face font-lock-comment-delimiter-face) 4142 4181 (fontified t face font-lock-comment-face) 4181 4190 (fontified t) 4190 4193 (fontified t face font-lock-builtin-face) 4193 4194 (fontified t) 4194 4199 (fontified t face font-lock-builtin-face) 4199 4238 (fontified t) 4238 4241 (fontified t face font-lock-builtin-face) 4241 4242 (fontified t) 4242 4247 (fontified t face font-lock-builtin-face) 4247 4281 (fontified t) 4281 4283 (fontified t face font-lock-comment-delimiter-face) 4283 4297 (fontified t face font-lock-comment-face) 4297 4302 (fontified t) 4302 4304 (fontified t face font-lock-comment-delimiter-face) 4304 4341 (fontified t face font-lock-comment-face) 4341 4379 (fontified t) 4379 4381 (fontified t face font-lock-comment-delimiter-face) 4381 4397 (fontified t face font-lock-comment-face) 4397 4401 (fontified t) 4401 4403 (fontified t face font-lock-keyword-face) 4403 4412 (fontified t) 4412 4415 (fontified t face font-lock-keyword-face) 4415 4462 (fontified t) 4462 4464 (fontified t face font-lock-keyword-face) 4464 4465 (fontified t) 4465 4469 (fontified t face font-lock-constant-face) 4469 4476 (fontified t) 4476 4478 (fontified t face font-lock-keyword-face) 4478 4479 (fontified t) 4479 4483 (fontified t face font-lock-constant-face) 4483 4489 (fontified t) 4489 4493 (fontified t face font-lock-keyword-face) 4493 4502 (fontified t) 4502 4505 (fontified t face font-lock-keyword-face) 4505 4551 (fontified t) 4551 4553 (fontified t face font-lock-keyword-face) 4553 4554 (fontified t) 4554 4558 (fontified t face font-lock-constant-face) 4558 4570 (fontified t) 4570 4574 (fontified t face font-lock-keyword-face) 4574 4582 (fontified t) 4582 4585 (fontified t face font-lock-keyword-face) 4585 4601 (fontified t) 4601 4638 (fontified t) 4638 4640 (fontified t face font-lock-keyword-face) 4640 4641 (fontified t) 4641 4645 (fontified t face font-lock-constant-face) 4645 4647 (fontified t) 4647 4651 (fontified t) 4651 4655 (fontified t face font-lock-keyword-face) 4655 4657 (fontified t) 4657 4659 (fontified t face font-lock-comment-delimiter-face) 4659 4677 (fontified t face font-lock-comment-face) 4677 4685 (fontified t) 4685 4694 (fontified t face font-lock-variable-name-face) 4694 4716 (fontified t) 4716 4718 (fontified t face font-lock-variable-name-face) 4718 4726 (fontified t) 4726 4732 (fontified t face font-lock-keyword-face) 4732 4747 (fontified t) 4747 4750 (fontified t face font-lock-keyword-face) 4750 4751 (fontified t) 4751 4772 (fontified t face font-lock-function-name-face) 4772 4810 (fontified t) 4810 4812 (fontified t face font-lock-doc-face) 4812 4813 (fontified t syntax-table (15) face font-lock-doc-face) 4813 4958 (fontified t face font-lock-doc-face) 4958 4959 (fontified t syntax-table (15) face font-lock-doc-face) 4959 4961 (fontified t face font-lock-doc-face) 4961 4966 (fontified t) 4966 4968 (fontified t face font-lock-comment-delimiter-face) 4968 5008 (fontified t face font-lock-comment-face) 5008 5036 (fontified t) 5036 5040 (fontified t face font-lock-variable-name-face) 5040 5070 (fontified t) 5070 5074 (fontified t face font-lock-builtin-face) 5074 5085 (fontified t) 5085 5087 (fontified t face font-lock-comment-delimiter-face) 5087 5134 (fontified t face font-lock-comment-face) 5134 5248 (fontified t) 5248 5250 (fontified t face font-lock-comment-delimiter-face) 5250 5312 (fontified t face font-lock-comment-face) 5312 5411 (fontified t) 5411 5413 (fontified t face font-lock-comment-delimiter-face) 5413 5461 (fontified t face font-lock-comment-face) 5461 5470 (fontified t) 5470 5489 (fontified t face font-lock-variable-name-face) 5489 5553 (fontified t) 5553 5555 (fontified t face font-lock-comment-delimiter-face) 5555 5620 (fontified t face font-lock-comment-face) 5620 5665 (fontified t) 5665 5671 (fontified t face font-lock-keyword-face) 5671 5689 (fontified t)) . 1) (undo-tree-id0 . -6) (undo-tree-id1 . -51) (undo-tree-id2 . -55) (undo-tree-id3 . -51) (undo-tree-id4 . -55) (undo-tree-id5 . -100) (undo-tree-id6 . -104) (undo-tree-id7 . -218) (undo-tree-id8 . -224) (undo-tree-id9 . -231) (undo-tree-id10 . -235) (undo-tree-id11 . -559) (undo-tree-id12 . -562) (undo-tree-id13 . -803) (undo-tree-id14 . -804) (undo-tree-id15 . -2549) (undo-tree-id16 . -2550) (undo-tree-id17 . -3778) (undo-tree-id18 . -3781) (undo-tree-id19 . -4656) (undo-tree-id20 . -4657) (undo-tree-id21 . -4747) (undo-tree-id22 . -4750) (undo-tree-id23 . -4948) (undo-tree-id24 . -4953) (undo-tree-id25 . -5076) (undo-tree-id26 . -5077) (undo-tree-id27 . -5213) (undo-tree-id28 . -5217) (undo-tree-id29 . -5539) (undo-tree-id30 . -5540) (undo-tree-id31 . -5544) (undo-tree-id32 . -5545) (undo-tree-id33 . -5553) (undo-tree-id34 . -5554) (undo-tree-id35 . -4647) (undo-tree-id36 . -5689) (undo-tree-id37 . -5689) (undo-tree-id38 . -5661) (undo-tree-id39 . -5662) (undo-tree-id40 . -5620) (undo-tree-id41 . -5621) (undo-tree-id42 . -5549) (undo-tree-id43 . -5550) (undo-tree-id44 . -5544) (undo-tree-id45 . -5545) (undo-tree-id46 . -5539) (undo-tree-id47 . -5540) (undo-tree-id48 . -5461) (undo-tree-id49 . -5462) (undo-tree-id50 . -5407) (undo-tree-id51 . -5408) (undo-tree-id52 . -5359) (undo-tree-id53 . -5360) (undo-tree-id54 . -5312) (undo-tree-id55 . -5313) (undo-tree-id56 . -5244) (undo-tree-id57 . -5245) (undo-tree-id58 . -5134) (undo-tree-id59 . -5135) (undo-tree-id60 . -5081) (undo-tree-id61 . -5082) (undo-tree-id62 . -5076) (undo-tree-id63 . -5077) (undo-tree-id64 . -5032) (undo-tree-id65 . -5033) (undo-tree-id66 . -5008) (undo-tree-id67 . -5009) (undo-tree-id68 . -4962) (undo-tree-id69 . -4963) (undo-tree-id70 . -4954) (undo-tree-id71 . -4955) (undo-tree-id72 . -4870) (undo-tree-id73 . -4871) (undo-tree-id74 . -4806) (undo-tree-id75 . -4807) (undo-tree-id76 . -4722) (undo-tree-id77 . -4723) (undo-tree-id78 . -4677) (undo-tree-id79 . -4678) (undo-tree-id80 . -4681) (undo-tree-id81 . -4682) (undo-tree-id82 . -4647) (undo-tree-id83 . -4648) (undo-tree-id84 . -4595) (undo-tree-id85 . -4596) (undo-tree-id86 . -4599) (undo-tree-id87 . -4600) (undo-tree-id88 . -4566) (undo-tree-id89 . -4567) (undo-tree-id90 . -4514) (undo-tree-id91 . -4515) (undo-tree-id92 . -4518) (undo-tree-id93 . -4519) (undo-tree-id94 . -4485) (undo-tree-id95 . -4486) (undo-tree-id96 . -4425) (undo-tree-id97 . -4426) (undo-tree-id98 . -4429) (undo-tree-id99 . -4430) (undo-tree-id100 . -4397) (undo-tree-id101 . -4398) (undo-tree-id102 . -4397) (undo-tree-id103 . -4398) (undo-tree-id104 . -4375) (undo-tree-id105 . -4376) (undo-tree-id106 . -4341) (undo-tree-id107 . -4342) (undo-tree-id108 . -4298) (undo-tree-id109 . -4299) (undo-tree-id110 . -4277) (undo-tree-id111 . -4278) (undo-tree-id112 . -4229) (undo-tree-id113 . -4230) (undo-tree-id114 . -4181) (undo-tree-id115 . -4182) (undo-tree-id116 . -4136) (undo-tree-id117 . -4137) (undo-tree-id118 . -4128) (undo-tree-id119 . -4129) (undo-tree-id120 . -4128) (undo-tree-id121 . -4129) (undo-tree-id122 . -4106) (undo-tree-id123 . -4107) (undo-tree-id124 . -4093) (undo-tree-id125 . -4094) (undo-tree-id126 . -4043) (undo-tree-id127 . -4044) (undo-tree-id128 . -3993) (undo-tree-id129 . -3994) (undo-tree-id130 . -3974) (undo-tree-id131 . -3975) (undo-tree-id132 . -3956) (undo-tree-id133 . -3957) (undo-tree-id134 . -3933) (undo-tree-id135 . -3934) (undo-tree-id136 . -3910) (undo-tree-id137 . -3911) (undo-tree-id138 . -3910) (undo-tree-id139 . -3911) (undo-tree-id140 . -3893) (undo-tree-id141 . -3894) (undo-tree-id142 . -3883) (undo-tree-id143 . -3884) (undo-tree-id144 . -3814) (undo-tree-id145 . -3815) (undo-tree-id146 . -3766) (undo-tree-id147 . -3767) (undo-tree-id148 . -3729) (undo-tree-id149 . -3730) (undo-tree-id150 . -3733) (undo-tree-id151 . -3734) (undo-tree-id152 . -3729) (undo-tree-id153 . -3730) (undo-tree-id154 . -3733) (undo-tree-id155 . -3734) (undo-tree-id156 . -3673) (undo-tree-id157 . -3674) (undo-tree-id158 . -3677) (undo-tree-id159 . -3678) (undo-tree-id160 . -3681) (undo-tree-id161 . -3682) (undo-tree-id162 . -3685) (undo-tree-id163 . -3686) (undo-tree-id164 . -3689) (undo-tree-id165 . -3690) (undo-tree-id166 . -3693) (undo-tree-id167 . -3694) (undo-tree-id168 . -3697) (undo-tree-id169 . -3698) (undo-tree-id170 . -3701) (undo-tree-id171 . -3702) (undo-tree-id172 . -3705) (undo-tree-id173 . -3706) (undo-tree-id174 . -3709) (undo-tree-id175 . -3710) (undo-tree-id176 . -3713) (undo-tree-id177 . -3714) (undo-tree-id178 . -3614) (undo-tree-id179 . -3615) (undo-tree-id180 . -3618) (undo-tree-id181 . -3619) (undo-tree-id182 . -3622) (undo-tree-id183 . -3623) (undo-tree-id184 . -3626) (undo-tree-id185 . -3627) (undo-tree-id186 . -3630) (undo-tree-id187 . -3631) (undo-tree-id188 . -3634) (undo-tree-id189 . -3635) (undo-tree-id190 . -3638) (undo-tree-id191 . -3639) (undo-tree-id192 . -3642) (undo-tree-id193 . -3643) (undo-tree-id194 . -3646) (undo-tree-id195 . -3647) (undo-tree-id196 . -3650) (undo-tree-id197 . -3651) (undo-tree-id198 . -3654) (undo-tree-id199 . -3655) (undo-tree-id200 . -3562) (undo-tree-id201 . -3563) (undo-tree-id202 . -3566) (undo-tree-id203 . -3567) (undo-tree-id204 . -3570) (undo-tree-id205 . -3571) (undo-tree-id206 . -3574) (undo-tree-id207 . -3575) (undo-tree-id208 . -3578) (undo-tree-id209 . -3579) (undo-tree-id210 . -3582) (undo-tree-id211 . -3583) (undo-tree-id212 . -3586) (undo-tree-id213 . -3587) (undo-tree-id214 . -3590) (undo-tree-id215 . -3591) (undo-tree-id216 . -3594) (undo-tree-id217 . -3595) (undo-tree-id218 . -3598) (undo-tree-id219 . -3599) (undo-tree-id220 . -3602) (undo-tree-id221 . -3603) (undo-tree-id222 . -3491) (undo-tree-id223 . -3492) (undo-tree-id224 . -3495) (undo-tree-id225 . -3496) (undo-tree-id226 . -3454) (undo-tree-id227 . -3455) (undo-tree-id228 . -3407) (undo-tree-id229 . -3408) (undo-tree-id230 . -3373) (undo-tree-id231 . -3374) (undo-tree-id232 . -3373) (undo-tree-id233 . -3374) (undo-tree-id234 . -3323) (undo-tree-id235 . -3324) (undo-tree-id236 . -3327) (undo-tree-id237 . -3328) (undo-tree-id238 . -3331) (undo-tree-id239 . -3332) (undo-tree-id240 . -3335) (undo-tree-id241 . -3336) (undo-tree-id242 . -3339) (undo-tree-id243 . -3340) (undo-tree-id244 . -3343) (undo-tree-id245 . -3344) (undo-tree-id246 . -3347) (undo-tree-id247 . -3348) (undo-tree-id248 . -3351) (undo-tree-id249 . -3352) (undo-tree-id250 . -3355) (undo-tree-id251 . -3356) (undo-tree-id252 . -3359) (undo-tree-id253 . -3360) (undo-tree-id254 . -3268) (undo-tree-id255 . -3269) (undo-tree-id256 . -3272) (undo-tree-id257 . -3273) (undo-tree-id258 . -3276) (undo-tree-id259 . -3277) (undo-tree-id260 . -3280) (undo-tree-id261 . -3281) (undo-tree-id262 . -3284) (undo-tree-id263 . -3285) (undo-tree-id264 . -3288) (undo-tree-id265 . -3289) (undo-tree-id266 . -3292) (undo-tree-id267 . -3293) (undo-tree-id268 . -3296) (undo-tree-id269 . -3297) (undo-tree-id270 . -3300) (undo-tree-id271 . -3301) (undo-tree-id272 . -3304) (undo-tree-id273 . -3305) (undo-tree-id274 . -3222) (undo-tree-id275 . -3223) (undo-tree-id276 . -3226) (undo-tree-id277 . -3227) (undo-tree-id278 . -3230) (undo-tree-id279 . -3231) (undo-tree-id280 . -3234) (undo-tree-id281 . -3235) (undo-tree-id282 . -3238) (undo-tree-id283 . -3239) (undo-tree-id284 . -3242) (undo-tree-id285 . -3243) (undo-tree-id286 . -3246) (undo-tree-id287 . -3247) (undo-tree-id288 . -3250) (undo-tree-id289 . -3251) (undo-tree-id290 . -3254) (undo-tree-id291 . -3255) (undo-tree-id292 . -3258) (undo-tree-id293 . -3259) (undo-tree-id294 . -3174) (undo-tree-id295 . -3175) (undo-tree-id296 . -3178) (undo-tree-id297 . -3179) (undo-tree-id298 . -3182) (undo-tree-id299 . -3183) (undo-tree-id300 . -3186) (undo-tree-id301 . -3187) (undo-tree-id302 . -3190) (undo-tree-id303 . -3191) (undo-tree-id304 . -3194) (undo-tree-id305 . -3195) (undo-tree-id306 . -3198) (undo-tree-id307 . -3199) (undo-tree-id308 . -3202) (undo-tree-id309 . -3203) (undo-tree-id310 . -3206) (undo-tree-id311 . -3207) (undo-tree-id312 . -3210) (undo-tree-id313 . -3211) (undo-tree-id314 . -3101) (undo-tree-id315 . -3102) (undo-tree-id316 . -3055) (undo-tree-id317 . -3056) (undo-tree-id318 . -3016) (undo-tree-id319 . -3017) (undo-tree-id320 . -2946) (undo-tree-id321 . -2947) (undo-tree-id322 . -2883) (undo-tree-id323 . -2884) (undo-tree-id324 . -2821) (undo-tree-id325 . -2822) (undo-tree-id326 . -2765) (undo-tree-id327 . -2766) (undo-tree-id328 . -2765) (undo-tree-id329 . -2766) (undo-tree-id330 . -2711) (undo-tree-id331 . -2712) (undo-tree-id332 . -2677) (undo-tree-id333 . -2678) (undo-tree-id334 . -2645) (undo-tree-id335 . -2646) (undo-tree-id336 . -2602) (undo-tree-id337 . -2603) (undo-tree-id338 . -2562) (undo-tree-id339 . -2563) (undo-tree-id340 . -2562) (undo-tree-id341 . -2563) (undo-tree-id342 . -2554) (undo-tree-id343 . -2555) (undo-tree-id344 . -2549) (undo-tree-id345 . -2550) (undo-tree-id346 . -2510) (undo-tree-id347 . -2511) (undo-tree-id348 . -2468) (undo-tree-id349 . -2469) (undo-tree-id350 . -2410) (undo-tree-id351 . -2411) (undo-tree-id352 . -2365) (undo-tree-id353 . -2366) (undo-tree-id354 . -2369) (undo-tree-id355 . -2370) (undo-tree-id356 . -2315) (undo-tree-id357 . -2316) (undo-tree-id358 . -2319) (undo-tree-id359 . -2320) (undo-tree-id360 . -2323) (undo-tree-id361 . -2324) (undo-tree-id362 . -2327) (undo-tree-id363 . -2328) (undo-tree-id364 . -2331) (undo-tree-id365 . -2332) (undo-tree-id366 . -2335) (undo-tree-id367 . -2336) (undo-tree-id368 . -2339) (undo-tree-id369 . -2340) (undo-tree-id370 . -2343) (undo-tree-id371 . -2344) (undo-tree-id372 . -2347) (undo-tree-id373 . -2348) (undo-tree-id374 . -2351) (undo-tree-id375 . -2352) (undo-tree-id376 . -2270) (undo-tree-id377 . -2271) (undo-tree-id378 . -2274) (undo-tree-id379 . -2275) (undo-tree-id380 . -2278) (undo-tree-id381 . -2279) (undo-tree-id382 . -2282) (undo-tree-id383 . -2283) (undo-tree-id384 . -2286) (undo-tree-id385 . -2287) (undo-tree-id386 . -2290) (undo-tree-id387 . -2291) (undo-tree-id388 . -2294) (undo-tree-id389 . -2295) (undo-tree-id390 . -2298) (undo-tree-id391 . -2299) (undo-tree-id392 . -2302) (undo-tree-id393 . -2303) (undo-tree-id394 . -2306) (undo-tree-id395 . -2307) (undo-tree-id396 . -2221) (undo-tree-id397 . -2222) (undo-tree-id398 . -2225) (undo-tree-id399 . -2226) (undo-tree-id400 . -2229) (undo-tree-id401 . -2230) (undo-tree-id402 . -2233) (undo-tree-id403 . -2234) (undo-tree-id404 . -2237) (undo-tree-id405 . -2238) (undo-tree-id406 . -2241) (undo-tree-id407 . -2242) (undo-tree-id408 . -2245) (undo-tree-id409 . -2246) (undo-tree-id410 . -2249) (undo-tree-id411 . -2250) (undo-tree-id412 . -2253) (undo-tree-id413 . -2254) (undo-tree-id414 . -2257) (undo-tree-id415 . -2258) (undo-tree-id416 . -2168) (undo-tree-id417 . -2169) (undo-tree-id418 . -2172) (undo-tree-id419 . -2173) (undo-tree-id420 . -2176) (undo-tree-id421 . -2177) (undo-tree-id422 . -2180) (undo-tree-id423 . -2181) (undo-tree-id424 . -2184) (undo-tree-id425 . -2185) (undo-tree-id426 . -2188) (undo-tree-id427 . -2189) (undo-tree-id428 . -2192) (undo-tree-id429 . -2193) (undo-tree-id430 . -2196) (undo-tree-id431 . -2197) (undo-tree-id432 . -2200) (undo-tree-id433 . -2201) (undo-tree-id434 . -2204) (undo-tree-id435 . -2205) (undo-tree-id436 . -2168) (undo-tree-id437 . -2169) (undo-tree-id438 . -2172) (undo-tree-id439 . -2173) (undo-tree-id440 . -2176) (undo-tree-id441 . -2177) (undo-tree-id442 . -2180) (undo-tree-id443 . -2181) (undo-tree-id444 . -2184) (undo-tree-id445 . -2185) (undo-tree-id446 . -2188) (undo-tree-id447 . -2189) (undo-tree-id448 . -2192) (undo-tree-id449 . -2193) (undo-tree-id450 . -2196) (undo-tree-id451 . -2197) (undo-tree-id452 . -2200) (undo-tree-id453 . -2201) (undo-tree-id454 . -2204) (undo-tree-id455 . -2205) (undo-tree-id456 . -2107) (undo-tree-id457 . -2108) (undo-tree-id458 . -2111) (undo-tree-id459 . -2112) (undo-tree-id460 . -2115) (undo-tree-id461 . -2116) (undo-tree-id462 . -2119) (undo-tree-id463 . -2120) (undo-tree-id464 . -2123) (undo-tree-id465 . -2124) (undo-tree-id466 . -2127) (undo-tree-id467 . -2128) (undo-tree-id468 . -2131) (undo-tree-id469 . -2132) (undo-tree-id470 . -2135) (undo-tree-id471 . -2136) (undo-tree-id472 . -2139) (undo-tree-id473 . -2140) (undo-tree-id474 . -2143) (undo-tree-id475 . -2144) (undo-tree-id476 . -2054) (undo-tree-id477 . -2055) (undo-tree-id478 . -2058) (undo-tree-id479 . -2059) (undo-tree-id480 . -2029) (undo-tree-id481 . -2030) (undo-tree-id482 . -1989) (undo-tree-id483 . -1990) (undo-tree-id484 . -1944) (undo-tree-id485 . -1945) (undo-tree-id486 . -1948) (undo-tree-id487 . -1949) (undo-tree-id488 . -1952) (undo-tree-id489 . -1953) (undo-tree-id490 . -1956) (undo-tree-id491 . -1957) (undo-tree-id492 . -1960) (undo-tree-id493 . -1961) (undo-tree-id494 . -1964) (undo-tree-id495 . -1965) (undo-tree-id496 . -1968) (undo-tree-id497 . -1969) (undo-tree-id498 . -1972) (undo-tree-id499 . -1973) (undo-tree-id500 . -1976) (undo-tree-id501 . -1977) (undo-tree-id502 . -1904) (undo-tree-id503 . -1905) (undo-tree-id504 . -1908) (undo-tree-id505 . -1909) (undo-tree-id506 . -1912) (undo-tree-id507 . -1913) (undo-tree-id508 . -1916) (undo-tree-id509 . -1917) (undo-tree-id510 . -1920) (undo-tree-id511 . -1921) (undo-tree-id512 . -1924) (undo-tree-id513 . -1925) (undo-tree-id514 . -1928) (undo-tree-id515 . -1929) (undo-tree-id516 . -1932) (undo-tree-id517 . -1933) (undo-tree-id518 . -1936) (undo-tree-id519 . -1937) (undo-tree-id520 . -1860) (undo-tree-id521 . -1861) (undo-tree-id522 . -1864) (undo-tree-id523 . -1865) (undo-tree-id524 . -1868) (undo-tree-id525 . -1869) (undo-tree-id526 . -1872) (undo-tree-id527 . -1873) (undo-tree-id528 . -1876) (undo-tree-id529 . -1877) (undo-tree-id530 . -1880) (undo-tree-id531 . -1881) (undo-tree-id532 . -1884) (undo-tree-id533 . -1885) (undo-tree-id534 . -1888) (undo-tree-id535 . -1889) (undo-tree-id536 . -1892) (undo-tree-id537 . -1893) (undo-tree-id538 . -1816) (undo-tree-id539 . -1817) (undo-tree-id540 . -1820) (undo-tree-id541 . -1821) (undo-tree-id542 . -1824) (undo-tree-id543 . -1825) (undo-tree-id544 . -1828) (undo-tree-id545 . -1829) (undo-tree-id546 . -1832) (undo-tree-id547 . -1833) (undo-tree-id548 . -1836) (undo-tree-id549 . -1837) (undo-tree-id550 . -1840) (undo-tree-id551 . -1841) (undo-tree-id552 . -1844) (undo-tree-id553 . -1845) (undo-tree-id554 . -1848) (undo-tree-id555 . -1849) (undo-tree-id556 . -1760) (undo-tree-id557 . -1761) (undo-tree-id558 . -1764) (undo-tree-id559 . -1765) (undo-tree-id560 . -1768) (undo-tree-id561 . -1769) (undo-tree-id562 . -1772) (undo-tree-id563 . -1773) (undo-tree-id564 . -1776) (undo-tree-id565 . -1777) (undo-tree-id566 . -1780) (undo-tree-id567 . -1781) (undo-tree-id568 . -1784) (undo-tree-id569 . -1785) (undo-tree-id570 . -1788) (undo-tree-id571 . -1789) (undo-tree-id572 . -1792) (undo-tree-id573 . -1793) (undo-tree-id574 . -1712) (undo-tree-id575 . -1713) (undo-tree-id576 . -1704) (undo-tree-id577 . -1705) (undo-tree-id578 . -1662) (undo-tree-id579 . -1663) (undo-tree-id580 . -1662) (undo-tree-id581 . -1663) (undo-tree-id582 . -1570) (undo-tree-id583 . -1571) (undo-tree-id584 . -1491) (undo-tree-id585 . -1492) (undo-tree-id586 . -1450) (undo-tree-id587 . -1451) (undo-tree-id588 . -1389) (undo-tree-id589 . -1390) (undo-tree-id590 . -1369) (undo-tree-id591 . -1370) (undo-tree-id592 . -1341) (undo-tree-id593 . -1342) (undo-tree-id594 . -1303) (undo-tree-id595 . -1304) (undo-tree-id596 . -1295) (undo-tree-id597 . -1296) (undo-tree-id598 . -1252) (undo-tree-id599 . -1253) (undo-tree-id600 . -1182) (undo-tree-id601 . -1183) (undo-tree-id602 . -1091) (undo-tree-id603 . -1092) (undo-tree-id604 . -1030) (undo-tree-id605 . -1031) (undo-tree-id606 . -976) (undo-tree-id607 . -977) (undo-tree-id608 . -922) (undo-tree-id609 . -923) (undo-tree-id610 . -914) (undo-tree-id611 . -915) (undo-tree-id612 . -866) (undo-tree-id613 . -867) (undo-tree-id614 . -837) (undo-tree-id615 . -838) (undo-tree-id616 . -808) (undo-tree-id617 . -809) (undo-tree-id618 . -803) (undo-tree-id619 . -804) (undo-tree-id620 . -762) (undo-tree-id621 . -763) (undo-tree-id622 . -652) (undo-tree-id623 . -653) (undo-tree-id624 . -644) (undo-tree-id625 . -645) (undo-tree-id626 . -605) (undo-tree-id627 . -606) (undo-tree-id628 . -544) (undo-tree-id629 . -545) (undo-tree-id630 . -516) (undo-tree-id631 . -517) (undo-tree-id632 . -481) (undo-tree-id633 . -482) (undo-tree-id634 . -473) (undo-tree-id635 . -474) (undo-tree-id636 . -434) (undo-tree-id637 . -435) (undo-tree-id638 . -346) (undo-tree-id639 . -347) (undo-tree-id640 . -708) (undo-tree-id641 . -708) (undo-tree-id642 . -708) (undo-tree-id643 . -708) (undo-tree-id644 . -708) (5690 . 11399) (t 25756 62466 163382 53000)) nil (25767 12491 912976 0) 0 nil])
nil
